<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="https://www.paulfioravanti.com/feed.xml" rel="self" type="application/atom+xml"/><link href="https://www.paulfioravanti.com/" rel="alternate" type="text/html"/><updated>2021-06-28T20:30:26+10:00</updated><id>https://www.paulfioravanti.com/feed.xml</id><title type="html">Floor and Varnish</title><subtitle>The permanent drafts folder for brain dumps of Paul Fioravanti</subtitle><author><name>Paul Fioravanti</name><email>paul@paulfioravanti.com</email><uri>https://www.paulfioravanti.com</uri></author><entry><title type="html">Coding Test Review: Sentia</title><link href="https://www.paulfioravanti.com/blog/coding-test-review-sentia/" rel="alternate" type="text/html" title="Coding Test Review: Sentia"/><published>2021-05-09T17:50:00+10:00</published><updated>2021-05-09T17:50:00+10:00</updated><id>https://www.paulfioravanti.com/blog/coding-test-review-sentia</id><content type="html" xml:base="https://www.paulfioravanti.com/blog/coding-test-review-sentia/">&lt;p&gt;I actually quite like coding tests.&lt;/p&gt; &lt;p&gt;Not whiteboard coding tests, or generic algorithm tests that read more like math problems (usually set by “tech recruiting platforms”, and performed under exam-like conditions), but “take-home” tests where you get to build something practical in a specific technology stack.&lt;/p&gt; &lt;p&gt;They can be fun and stimulating in the same way as answering questions on &lt;a href=&quot;https://stackoverflow.com/users/567863/paul-fioravanti&quot;&gt;Stack Overflow&lt;/a&gt;, or solving problems on learning platforms like &lt;a href=&quot;https://exercism.io/profiles/paulfioravanti&quot;&gt;Exercism&lt;/a&gt;, and can also be good fodder for your &lt;a href=&quot;https://github.com/paulfioravanti&quot;&gt;online coding portfolio&lt;/a&gt;. I find I nearly always learn something new, or a different way of doing something I may already know, that makes me re-think the way I have solved a problem.&lt;/p&gt; &lt;p&gt;In this instance, a friend sent me &lt;a href=&quot;https://www.sentia.com.au/&quot;&gt;Sentia&lt;/a&gt;’s coding test to check out, and simply because I felt like I had not begun a &lt;a href=&quot;http://rubyonrails.org/&quot;&gt;Ruby on Rails&lt;/a&gt; application from scratch in a long time, I decided to take a crack at it. So, here is my review of that attempt.&lt;/p&gt; &lt;p&gt;Here are the public links for the deployed application and codebase:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://sentiacodingtest.herokuapp.com/&quot;&gt;Sentia Coding Test application&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/paulfioravanti/sentia-coding-test&quot;&gt;Sentia Coding Test codebase&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;blockquote&gt; &lt;p&gt;Disclaimer: I am not, nor have ever been, an employee of Sentia, nor have I ever applied for employment there, nor is this post some kind of attempt to get them to employ me; I just did their coding test for my own definition of “fun”.&lt;/p&gt; &lt;p&gt;If you are applying there, or plan to in the future, you may want to stop reading, and consider pretending that this blog post (and &lt;a href=&quot;https://github.com/search?l=Ruby&amp;amp;p=1&amp;amp;q=sentia&amp;amp;type=Repositories&quot;&gt;all the other solutions people have posted&lt;/a&gt;) does not exist, so you can greet their coding test with fresh eyes (assuming this one is still being used…)&lt;/p&gt; &lt;/blockquote&gt; &lt;h2 id=&quot;original-requirements&quot;&gt;Original Requirements&lt;/h2&gt; &lt;p&gt;You will be required to create a Ruby on Rails application with the following features below. The sample CSV data required for the test can be found &lt;a href=&quot;https://github.com/paulfioravanti/sentia-coding-test/blob/main/test/fixtures/files/SentiaCodingTestData.csv&quot;&gt;here&lt;/a&gt;. This application can be built in 1 hour.&lt;/p&gt; &lt;p&gt;Below is a list of user stories and requirements for each section of this application.&lt;/p&gt; &lt;h3 id=&quot;part-1&quot;&gt;PART 1&lt;/h3&gt; &lt;p&gt;As a user, I should be able to upload this sample CSV and import the data into a database.&lt;/p&gt; &lt;p&gt;IMPORTER REQUIREMENTS&lt;/p&gt; &lt;ol&gt; &lt;li&gt;The data needs to load into 3 tables. &lt;strong&gt;People&lt;/strong&gt;, &lt;strong&gt;Locations&lt;/strong&gt; and &lt;strong&gt;Affiliations&lt;/strong&gt;&lt;br /&gt;&lt;/li&gt; &lt;li&gt;A &lt;strong&gt;Person&lt;/strong&gt; can belong to many &lt;strong&gt;Locations&lt;/strong&gt;&lt;br /&gt;&lt;/li&gt; &lt;li&gt;A &lt;strong&gt;Person&lt;/strong&gt; can belong to many &lt;strong&gt;Affiliations&lt;/strong&gt;&lt;br /&gt;&lt;/li&gt; &lt;li&gt;A &lt;strong&gt;Person&lt;/strong&gt; without an &lt;strong&gt;Affiliation&lt;/strong&gt; should be skipped&lt;br /&gt;&lt;/li&gt; &lt;li&gt;A &lt;strong&gt;Person&lt;/strong&gt; should have both a &lt;em&gt;first_name&lt;/em&gt; and &lt;em&gt;last_name&lt;/em&gt;. All fields need to be validated except for &lt;em&gt;last_name&lt;/em&gt;, &lt;em&gt;weapon&lt;/em&gt; and &lt;em&gt;vehicle&lt;/em&gt; which are optional.&lt;br /&gt;&lt;/li&gt; &lt;li&gt;Names and Locations should all be titlecased&lt;/li&gt; &lt;/ol&gt; &lt;h3 id=&quot;part-2&quot;&gt;PART 2&lt;/h3&gt; &lt;ol&gt; &lt;li&gt;As a user, I should be able to view these results from the importer in a table.&lt;/li&gt; &lt;li&gt;As a user, I should be able to paginate through the results so that I can see a maximum of 10 results at a time.&lt;/li&gt; &lt;li&gt;As a user, I want to type in a search box so that I can filter the results I want to see.&lt;/li&gt; &lt;li&gt;As a user, I want to be able to click on a table column heading to reorder the visible results.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;Once the test has been completed. Please upload to Git Repo/Google Drive/DropBox or zip and email over back to &lt;em&gt;&amp;lt;person&amp;gt;&lt;/em&gt; at &lt;em&gt;&amp;lt;person’s email&amp;gt;&lt;/em&gt;. ∎&lt;/p&gt; &lt;p&gt;The sample &lt;a href=&quot;https://en.wikipedia.org/wiki/Comma-separated_values&quot;&gt;CSV&lt;/a&gt; file contains the following data from a galaxy far, far away….&lt;/p&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Name&lt;/th&gt; &lt;th&gt;Location&lt;/th&gt; &lt;th&gt;Species&lt;/th&gt; &lt;th&gt;Gender&lt;/th&gt; &lt;th&gt;Affiliations&lt;/th&gt; &lt;th&gt;Weapon&lt;/th&gt; &lt;th&gt;Vehicle&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;Darth Vader&lt;/td&gt; &lt;td&gt;Death Star, Tatooine&lt;/td&gt; &lt;td&gt;Human&lt;/td&gt; &lt;td&gt;Male&lt;/td&gt; &lt;td&gt;Sith&lt;/td&gt; &lt;td&gt;Lightsaber&lt;/td&gt; &lt;td&gt;Tiefighter&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Chewbacca&lt;/td&gt; &lt;td&gt;kashyyk&lt;/td&gt; &lt;td&gt;Wookie&lt;/td&gt; &lt;td&gt;m&lt;/td&gt; &lt;td&gt;Rebel Alliance&lt;/td&gt; &lt;td&gt;Bowcaster&lt;/td&gt; &lt;td&gt;Millennium Falcon&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;yoda&lt;/td&gt; &lt;td&gt;Yoda’s Hutt&lt;/td&gt; &lt;td&gt;Unknown&lt;/td&gt; &lt;td&gt;Male&lt;/td&gt; &lt;td&gt;Jedi Order&lt;/td&gt; &lt;td&gt;Lightsaber&lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Sheev Palpatine&lt;/td&gt; &lt;td&gt;Naboo&lt;/td&gt; &lt;td&gt;Human&lt;/td&gt; &lt;td&gt;Male&lt;/td&gt; &lt;td&gt;Galactic Republic&lt;/td&gt; &lt;td&gt;Lightsaber&lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Princess Leia&lt;/td&gt; &lt;td&gt;Alderaan&lt;/td&gt; &lt;td&gt;Human&lt;/td&gt; &lt;td&gt;Female&lt;/td&gt; &lt;td&gt;Rebel Alliance, Galactic Republic&lt;/td&gt; &lt;td&gt;Blaster Pistol&lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;jabba the Hutt&lt;/td&gt; &lt;td&gt;Tatooine&lt;/td&gt; &lt;td&gt;Hutt&lt;/td&gt; &lt;td&gt;Male&lt;/td&gt; &lt;td&gt;Hutt Clan&lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt;Jabba’s Sale Barge&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Kylo Ren&lt;/td&gt; &lt;td&gt;chandrila&lt;/td&gt; &lt;td&gt;Human&lt;/td&gt; &lt;td&gt;Male&lt;/td&gt; &lt;td&gt;First Order&lt;/td&gt; &lt;td&gt;Lightsaber&lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Obi-Wan Kenobi&lt;/td&gt; &lt;td&gt;Stewjon&lt;/td&gt; &lt;td&gt;Human&lt;/td&gt; &lt;td&gt;M&lt;/td&gt; &lt;td&gt;Jedi Order&lt;/td&gt; &lt;td&gt;Lightsaber&lt;/td&gt; &lt;td&gt;Jedi Starfighter&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;luke skywalker&lt;/td&gt; &lt;td&gt;Tatooine&lt;/td&gt; &lt;td&gt;Human&lt;/td&gt; &lt;td&gt;M&lt;/td&gt; &lt;td&gt;Rebel Alliance, Jedi Order&lt;/td&gt; &lt;td&gt;Lightsaber~!@@@&lt;/td&gt; &lt;td&gt;X-wing Starfighter&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Jar Jar Binks&lt;/td&gt; &lt;td&gt;Naboo&lt;/td&gt; &lt;td&gt;Gungan&lt;/td&gt; &lt;td&gt;Male&lt;/td&gt; &lt;td&gt;Galactic Republic, Gungan Grand Army&lt;/td&gt; &lt;td&gt;Energy Ball&lt;/td&gt; &lt;td&gt;Gungan Bongo Submarine&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;R2-D2&lt;/td&gt; &lt;td&gt;Naboo&lt;/td&gt; &lt;td&gt;Astromech Droid&lt;/td&gt; &lt;td&gt;Other&lt;/td&gt; &lt;td&gt;Rebel Alliance, Galactic Republic&lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt;X-wing Starfighter&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Han Solo&lt;/td&gt; &lt;td&gt;Corellia&lt;/td&gt; &lt;td&gt;Human&lt;/td&gt; &lt;td&gt;Male&lt;/td&gt; &lt;td&gt;Rebel Alliance&lt;/td&gt; &lt;td&gt;Blaster Pistol&lt;/td&gt; &lt;td&gt;Millennium Falcon&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Boba Fett&lt;/td&gt; &lt;td&gt;Kamino&lt;/td&gt; &lt;td&gt;Human&lt;/td&gt; &lt;td&gt;m&lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt;Blaster&lt;/td&gt; &lt;td&gt;Slave 1&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Rey&lt;/td&gt; &lt;td&gt;Jakku&lt;/td&gt; &lt;td&gt;Human&lt;/td&gt; &lt;td&gt;f&lt;/td&gt; &lt;td&gt;Jedi Order&lt;/td&gt; &lt;td&gt;Lightsaber&lt;/td&gt; &lt;td&gt;Rey’s Speeder&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;padme amidala&lt;/td&gt; &lt;td&gt;naboo&lt;/td&gt; &lt;td&gt;Human&lt;/td&gt; &lt;td&gt;Female&lt;/td&gt; &lt;td&gt;Galactic Republic&lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt;Naboo N-1 Starfigher&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;C-3PO&lt;/td&gt; &lt;td&gt;Tatooine&lt;/td&gt; &lt;td&gt;Protocol Droid&lt;/td&gt; &lt;td&gt;Other&lt;/td&gt; &lt;td&gt;The Resistance&lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt;-1&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Mace Windu&lt;/td&gt; &lt;td&gt;Haruun Kal&lt;/td&gt; &lt;td&gt;Human&lt;/td&gt; &lt;td&gt;Male&lt;/td&gt; &lt;td&gt;Jedi Order&lt;/td&gt; &lt;td&gt;Lightsaber&lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Lando calrissian&lt;/td&gt; &lt;td&gt;Cloud City&lt;/td&gt; &lt;td&gt;Human&lt;/td&gt; &lt;td&gt;Male&lt;/td&gt; &lt;td&gt;Rebel Alliance&lt;/td&gt; &lt;td&gt;Blaster Pistol&lt;/td&gt; &lt;td&gt;Millennium Falcon&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;elephant&quot;&gt;:elephant:&lt;/h2&gt; &lt;p&gt;First thing’s first: let’s address the &lt;a href=&quot;https://en.wikipedia.org/wiki/Elephant_in_the_room&quot;&gt;elephant in the requirements&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;This application can be built in 1 hour.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;If this is true, then I am a &lt;strong&gt;&lt;em&gt;terrible&lt;/em&gt;&lt;/strong&gt; developer.&lt;/p&gt; &lt;p&gt;It took me a fair bit longer than that to write working code as-per requirements, debug the requirements (more on that later…), get it deployed somewhere on the internet, and refactor the code to a state where I would be happy to submit it for public consumption and criticism (I was &lt;em&gt;still&lt;/em&gt; refactoring it while writing this post).&lt;/p&gt; &lt;p&gt;If the intention is for someone to complete as many of the requirements as they can &lt;em&gt;within&lt;/em&gt; that fixed 1 hour time frame, with the end result considered through the lens of that artificial constraint, then that should be made explicit.&lt;/p&gt; &lt;p&gt;Regardless, I think it would probably be for the best to just remove that line, and allow candidates attempting this test to just focus on submitting their best attempt, and keep &lt;a href=&quot;https://en.wikipedia.org/wiki/Impostor_syndrome&quot;&gt;imposter syndrome&lt;/a&gt; at bay for that little bit longer.&lt;/p&gt; &lt;h2 id=&quot;general-approach&quot;&gt;General Approach&lt;/h2&gt; &lt;p&gt;Since the requirements around this application focus on it being a Ruby on Rails application, I decided to go as “vanilla” as possible with Rails.&lt;/p&gt; &lt;p&gt;This meant no explicit addition by me of any custom &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript&quot;&gt;Javascript&lt;/a&gt;, or any front-end frameworks that use it, to help out with things like filtering or sorting information.&lt;/p&gt; &lt;p&gt;I also tried to add the least amount of third-party non-Rails-default gems as possible, only using:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/alassek/activerecord-pg_enum&quot;&gt;ActiveRecord::PGEnum&lt;/a&gt;, due to its nice developer ergonomics in dealing with &lt;a href=&quot;https://www.postgresql.org/docs/current/datatype-enum.html&quot;&gt;Postgres Enumerated Types&lt;/a&gt; (more about why they were even needed later…)&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/drapergem/draper&quot;&gt;Draper&lt;/a&gt; for &lt;a href=&quot;https://en.wikipedia.org/wiki/Decorator_pattern&quot;&gt;decorators&lt;/a&gt;: I really do not like using &lt;a href=&quot;https://api.rubyonrails.org/classes/ActionController/Helpers.html&quot;&gt;Rails helpers&lt;/a&gt; for &lt;a href=&quot;https://en.wikipedia.org/wiki/Presentation_logic&quot;&gt;presentation logic&lt;/a&gt;, preferring instead to keep it attached to the object being rendered; raw data can come from the &lt;a href=&quot;https://guides.rubyonrails.org/active_record_basics.html&quot;&gt;Rails model&lt;/a&gt; class, while transforming that data for display in a &lt;a href=&quot;https://guides.rubyonrails.org/action_view_overview.html&quot;&gt;Rails view&lt;/a&gt; can come from a decorator&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/kaminari/kaminari&quot;&gt;Kaminari&lt;/a&gt; for &lt;a href=&quot;https://en.wikipedia.org/wiki/Pagination&quot;&gt;pagination&lt;/a&gt;, as I think it is currently the best gem for it&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;user-interface&quot;&gt;User Interface&lt;/h2&gt; &lt;p&gt;Since interface design and making things pretty in general is a weak-point for me, I used this test as an excuse to give &lt;a href=&quot;https://tailwindcss.com/&quot;&gt;Tailwind CSS&lt;/a&gt; a try in order to style everything on the page (I have used &lt;a href=&quot;https://tachyons.io/&quot;&gt;Tachyons&lt;/a&gt; before on other toy projects, so I am generally positive to the &lt;a href=&quot;https://tailwindcss.com/docs/utility-first&quot;&gt;utility-first CSS&lt;/a&gt; concept), as well as use &lt;a href=&quot;https://tailwindui.com/&quot;&gt;Tailwind UI&lt;/a&gt; to (hopefully) grab ready-made code for certain types of components.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/2021-05-09/screenshot.png&quot; alt=&quot;Screenshot&quot; /&gt;&lt;/p&gt; &lt;p&gt;For the most part, this was true for the following parts of the app:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;data table&lt;/li&gt; &lt;li&gt;upload button&lt;/li&gt; &lt;li&gt;search bar&lt;/li&gt; &lt;li&gt;pagination widget&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;But, as would be expected, it was not all quite as simple as &lt;a href=&quot;https://en.wikipedia.org/wiki/Plug_and_play&quot;&gt;plug and play&lt;/a&gt;. Integrating Tailwind into the Kaminari-generated pagination views probably took the most amount of time. But, I got there in the end, and am generally pleased with how it looks for the time spent on it.&lt;/p&gt; &lt;p&gt;For the most part, I left any long Tailwind-mnemonic-filled class strings as they were in the Rails view files. However, when those strings became too long, and generally difficult to read, I extracted them into separate &lt;a href=&quot;https://sass-lang.com/documentation/syntax&quot;&gt;SCSS&lt;/a&gt; files using Tailwind’s &lt;a href=&quot;https://tailwindcss.com/docs/functions-and-directives#apply&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@apply&lt;/code&gt;&lt;/a&gt; directive (see files under the &lt;a href=&quot;https://github.com/paulfioravanti/sentia-coding-test/tree/main/app/javascript/stylesheets&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;app/javascript/stylesheets/&lt;/code&gt;&lt;/a&gt; directory). I think I will likely continue to use this kind of strategy in the future with Tailwind class strings.&lt;/p&gt; &lt;p&gt;Overall, I am happy to have been able to stand on the Tailwind ecosystem’s shoulders to build out the user interface, and will definitely consider using it again in future projects.&lt;/p&gt; &lt;h2 id=&quot;data-issues&quot;&gt;Data Issues&lt;/h2&gt; &lt;p&gt;Turning our gaze towards the provided dataset that the application must be able to import, there is no doubt that the CSV file deliberately contains some corrupt/bad data that you are meant to be able to &lt;a href=&quot;https://en.wikipedia.org/wiki/Defensive_programming&quot;&gt;program defensively&lt;/a&gt; against.&lt;/p&gt; &lt;p&gt;My general intentions were to only &lt;em&gt;not&lt;/em&gt; import an entry where the requirements specifically said not to (i.e. a person without an affiliation should be skipped), and where the data could not be &lt;em&gt;reasonably&lt;/em&gt; &lt;a href=&quot;https://en.wikipedia.org/wiki/Data_wrangling&quot;&gt;munged&lt;/a&gt; into an acceptable format.&lt;/p&gt; &lt;div style=&quot;margin: auto; text-align: center; width: 90%;&quot;&gt; &lt;figure style=&quot;display: block&quot;&gt; &lt;img src=&quot;/assets/images/2021-05-09/perhaps-archives-incomplete.jpg&quot; alt=&quot;80sfy.com screenshot&quot; /&gt; &lt;/figure&gt; &lt;/div&gt; &lt;h3 id=&quot;mis-spellings&quot;&gt;Mis-spellings&lt;/h3&gt; &lt;p&gt;So, this meant that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lightsaber~!@@@&lt;/code&gt; could just be stripped of non-alphanumeric characters and become a valid &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lightsaber&lt;/code&gt; weapon, but there were also issues around mis-spellings in the data, where I needed to give the application more knowledge around what kind of values it could expect to find in the CSV file, and what those values actually &lt;em&gt;should&lt;/em&gt; be.&lt;/p&gt; &lt;p&gt;This occurred in the form of a &lt;a href=&quot;https://ruby-doc.org/core/Hash.html&quot;&gt;Hash&lt;/a&gt; that maps values known to be found in the CSV file to their correct values:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;app/services/data_importer/enum_field_parser.rb&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;MISSPELLINGS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Yoda&apos;s Hutt&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Yoda&apos;s Hut&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Naboo N-1 Starfigher&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Naboo N-1 Starfighter&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;I am pretty sure that &lt;a href=&quot;https://en.wikipedia.org/wiki/Yoda&quot;&gt;Yoda&lt;/a&gt; does not own a pet &lt;a href=&quot;https://en.wikipedia.org/wiki/Jabba_the_Hutt&quot;&gt;Jabba&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Anyway, it is not possible for me to tell whether the introduction of these mis-spellings was deliberate in order to see if a candidate picked up on them, but I am going to wager that these &lt;em&gt;were&lt;/em&gt; actually just typos, and the necessity for this kind of handling was not intentional.&lt;/p&gt; &lt;h3 id=&quot;value-validity&quot;&gt;Value Validity&lt;/h3&gt; &lt;p&gt;Under &lt;a href=&quot;https://en.wikipedia.org/wiki/C-3PO&quot;&gt;C-3PO&lt;/a&gt;’s entry, the value for the Vehicle is given as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-1&lt;/code&gt;: an obvious ploy to make sure that you do not actually store this value in a Person’s vehicle field.&lt;/p&gt; &lt;p&gt;However, if &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-1&lt;/code&gt; is not a valid entry, it then stands to reason that I cannot trust &lt;em&gt;any&lt;/em&gt; of those values in the file, and, therefore, need to give the application advance knowledge on &lt;em&gt;what&lt;/em&gt; vehicles it can accept as valid.&lt;/p&gt; &lt;p&gt;This meant that for a Person entry, I ended up making &lt;em&gt;every value&lt;/em&gt; provided for a non-name-related field an &lt;a href=&quot;https://en.wikipedia.org/wiki/Enumerated_type&quot;&gt;enumerated type&lt;/a&gt;: both in the application, and at the database level.&lt;/p&gt; &lt;p&gt;The fact that there was the spelling mistake for Yoda’s location also made me assign enumerated types for the names of Locations and Affiliations. The application really does have too much advance knowledge of the limited scope of valid values it could get from the CSV file, but I did not see any other way around this while still ensuring data correctness.&lt;/p&gt; &lt;h3 id=&quot;names&quot;&gt;Names&lt;/h3&gt; &lt;p&gt;The requirements assume that the name values in the CSV file can be split out into &lt;em&gt;first_name&lt;/em&gt; and &lt;em&gt;last_name&lt;/em&gt;, which, taken at face value, they certainly can.&lt;/p&gt; &lt;p&gt;However, this leads to the issue of having a table that looks like this for some values:&lt;/p&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;First Name&lt;/th&gt; &lt;th&gt;Last Name&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;Princess&lt;/td&gt; &lt;td&gt;Leia&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Darth&lt;/td&gt; &lt;td&gt;Vader&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Kylo&lt;/td&gt; &lt;td&gt;Ren&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Jabba&lt;/td&gt; &lt;td&gt;The Hutt&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p&gt;Some nerds should have looked over this data before it went public because &lt;em&gt;&lt;a href=&quot;https://knowyourmeme.com/memes/ackchyually&quot;&gt;ackchyually&lt;/a&gt;…&lt;/em&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;“Princess” is a title, not a name, and “Leia” is &lt;a href=&quot;https://en.wikipedia.org/wiki/Princess_Leia&quot;&gt;Leia Organa&lt;/a&gt;’s first name&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://starwars.fandom.com/wiki/Darth&quot;&gt;“Darth” is a title&lt;/a&gt;, not a name, and “&lt;a href=&quot;https://en.wikipedia.org/wiki/Darth_Vader&quot;&gt;Vader&lt;/a&gt;” is more like a first name&lt;/li&gt; &lt;li&gt;“Ren” is not a last name, but is from &lt;a href=&quot;https://starwars.fandom.com/wiki/Knights_of_Ren&quot;&gt;Knights of Ren&lt;/a&gt;, and &lt;a href=&quot;https://en.wikipedia.org/wiki/Kylo_Ren&quot;&gt;Kylo Ren&lt;/a&gt; used it more like a title once he became the inheritor of Ren’s Knights&lt;/li&gt; &lt;li&gt;“The Hutt” is not a last name, but refers to the &lt;a href=&quot;https://starwars.fandom.com/wiki/Hutt&quot;&gt;Hutt species&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;So, although not part of the requirements, I figured that this meant the application really needed to deal with the concept of name prefixes (titles etc) and &lt;a href=&quot;https://en.wikipedia.org/wiki/Suffix_(name)&quot;&gt;suffixes&lt;/a&gt; (you may have noticed their inclusion in the screenshot above).&lt;/p&gt; &lt;p&gt;Also, for names like Jabba The Hutt and &lt;a href=&quot;https://en.wikipedia.org/wiki/Jar_Jar_Binks&quot;&gt;Jar Jar Binks&lt;/a&gt;, without the application knowing in advance that “The Hutt” is a suffix, it would not be able to tell the which words in either of those names comprise the &lt;em&gt;first_name&lt;/em&gt; or &lt;em&gt;last_name&lt;/em&gt;.&lt;/p&gt; &lt;p&gt;The ability to deal with the name situation was made a bit more straightforward thanks to Ruby 3.0’s &lt;a href=&quot;https://docs.ruby-lang.org/en/3.0.0/doc/syntax/pattern_matching_rdoc.html&quot;&gt;pattern matching&lt;/a&gt; capabilities. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;parse_name&lt;/code&gt; method below returns an array containing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[prefix, first_name, last_name, suffix]&lt;/code&gt;:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;app/services/data_importer/person_parser.rb&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;parse_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name_parts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:upcase_first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name_parts&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Darth&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Princess&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prefix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prefix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first_names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Ren&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;suffix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first_names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;suffix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first_names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;The&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hutt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first_names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;The Hutt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first_names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name_parts&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first_names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Something like the method above is, of course, doable without pattern matching, but I think the terseness above really helps in understanding how specific data shapes are pin-pointed, and then transformed into the desired output.&lt;/p&gt; &lt;h2 id=&quot;application-code&quot;&gt;Application Code&lt;/h2&gt; &lt;p&gt;Having spent more time with &lt;a href=&quot;https://en.wikipedia.org/wiki/Functional_programming&quot;&gt;functional&lt;/a&gt; languages like &lt;a href=&quot;https://elixir-lang.org/&quot;&gt;Elixir&lt;/a&gt; and &lt;a href=&quot;https://elm-lang.org/&quot;&gt;Elm&lt;/a&gt; recently, I definitely found their influence creeping into the way I want to write &lt;a href=&quot;https://www.ruby-lang.org/en/&quot;&gt;Ruby&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;I definitely do not consider this a bad thing, nor do I (subjectively) think that the code reads less Ruby/Rails-like as a result (though I have, happily, challenged some Rails conventions). But, let’s have a look at some examples of main the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Person&lt;/code&gt;-related controller and model of the application and you can judge for yourself.&lt;/p&gt; &lt;h3 id=&quot;controller&quot;&gt;Controller&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;app/controllers/people_controller.rb&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;PeopleController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationController&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@people&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:sort_people&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:paginate_people&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:decorate_people&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sort_people&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;people&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;PeopleSorter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;people&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sort_column&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sort_direction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sort_column&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@sort_column&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sort_column&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sort_direction&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@sort_direction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SortDirection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;determine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:direction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;paginate_people&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sorted_people&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Paginator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;paginate_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sorted_people&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;decorate_people&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;paginated_people&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;PersonDecorator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;decorate_collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;paginated_people&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;context: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;sort_column: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort_column&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;sort_columns: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sort_columns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;sort_direction: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort_direction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;params: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;A few notes about this code:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The code that assigns to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@people&lt;/code&gt; instance variable is written in a style mimicking the &lt;a href=&quot;https://elixir-lang.org/getting-started/enumerables-and-streams.html#the-pipe-operator&quot;&gt;Elixir pipeline operator&lt;/a&gt;, through the use of Ruby’s &lt;a href=&quot;https://ruby-doc.org/core/Kernel.html#method-i-then&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Kernel#then&lt;/code&gt;&lt;/a&gt; method (aka &lt;a href=&quot;https://ruby-doc.org/core/Kernel.html#method-i-yield_self&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Kernel#yield_self&lt;/code&gt;&lt;/a&gt;). The collection of people that originally gets fetched from the database goes through a series of transformations (filtered via search -&amp;gt; sorted -&amp;gt; paginated -&amp;gt; decorated) before being handed off to the view, so I thought this way of writing the main controller code would indicate that most clearly and explicitly.&lt;/li&gt; &lt;li&gt;I would have liked to have had the database do the sorting for me, rather than do it in Ruby-land, but the fact that sorting needed to happen on values contained in a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Person&lt;/code&gt;’s associations (locations and affiliations), made it untenable.&lt;/li&gt; &lt;li&gt;I originally had the implementation code for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sort_direction&lt;/code&gt; up in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ApplicationController&lt;/code&gt;, since it is not specific to a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Person&lt;/code&gt;; putting it there would, I think, be considered Rails convention for code of that nature. But, rather than counting on someone looking at a method call, which has no local definition, and then &lt;em&gt;implicitly knowing&lt;/em&gt; that its definition could come from a &lt;a href=&quot;https://en.wikipedia.org/wiki/Inheritance_(object-oriented_programming)#Subclasses_and_superclasses&quot;&gt;superclass&lt;/a&gt;, I decided to extract it into a small, named service module (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SortDirection&lt;/code&gt;), so there is an &lt;em&gt;explicit&lt;/em&gt; call-out (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SortDirection.determine&lt;/code&gt;). I do not generally like using &lt;a href=&quot;https://en.wikipedia.org/wiki/Inheritance_(object-oriented_programming)&quot;&gt;inheritance&lt;/a&gt;, and will try and avoid it where I can.&lt;/li&gt; &lt;li&gt;I created a small &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Paginator&lt;/code&gt; service module with the intention of keeping knowledge about &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Kaminari&lt;/code&gt; restricted to it. Who knows, maybe I might want to change over to something like &lt;a href=&quot;https://github.com/mislav/will_paginate&quot;&gt;will_paginate&lt;/a&gt; one day, and organising the code like this, using the &lt;a href=&quot;https://en.wikipedia.org/wiki/Adapter_pattern&quot;&gt;Adapter pattern&lt;/a&gt;, will mean no changes will be required in the controller (yes, fine, guilty of &lt;a href=&quot;https://en.wikipedia.org/wiki/You_aren%27t_gonna_need_it&quot;&gt;YAGNI&lt;/a&gt; since this just a coding test, but I have no regrets…).&lt;/li&gt; &lt;li&gt;Both &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sort_column&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sort_direction&lt;/code&gt; are needed in the view, as well as in the controller. I have seen many codebases use the &lt;a href=&quot;https://en.wikipedia.org/wiki/Encapsulation_(computer_programming)&quot;&gt;encapsulation&lt;/a&gt;-busting &lt;a href=&quot;https://api.rubyonrails.org/classes/AbstractController/Helpers/ClassMethods.html#method-i-helper_method&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;helper_method&lt;/code&gt;&lt;/a&gt; method to allow controllers and views to share methods (I even used it in earlier iterations of this code). However, since decorators are being used in this application, this can be avoided by explicitly passing in whatever extra controller information is needed in presentation logic via a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;context&lt;/code&gt; hash, that is only accessible within the confines of the decorator class.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;model&quot;&gt;Model&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;app/models/person.rb&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationRecord&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;PGEnum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;species: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Enum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SPECIES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;gender: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Enum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;GENDERS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;weapon: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Enum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;WEAPONS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;vehicle: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Enum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;VEHICLES&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;has_many&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:loyalties&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;has_many&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:affiliations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;affiliations.name ASC&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;through: :loyalties&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;has_many&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:residences&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;has_many&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:locations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;locations.name ASC&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;through: :residences&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;includes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:locations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:affiliations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;references&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:locations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:affiliations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;search&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sort_column&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort_param&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;column&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort_param&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sort_columns&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Sort&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SORT_COLUMNS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;first_affiliation_name&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;affiliations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;affiliation_names&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;affiliations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;first_location_name&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;locations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;location_names&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;locations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;A few notes about this code:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;All methods return data only. Nothing here is responsible for returning formatted strings, or anything else that is meant for display purposes: that is strictly the job of the decorators.&lt;/li&gt; &lt;li&gt; &lt;p&gt;For functionality related to things like searching or sorting people, for the basic implementations I have done, it would probably be considered Rails convention to have that code live in &lt;a href=&quot;https://api.rubyonrails.org/classes/ActiveSupport/Concern.html&quot;&gt;Rails concerns&lt;/a&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;include&lt;/code&gt; those modules in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Person&lt;/code&gt; class to make their methods available.&lt;br /&gt; Like inheritance, I really do not like using &lt;a href=&quot;https://en.wikipedia.org/wiki/Object_composition&quot;&gt;composition&lt;/a&gt; in this way, as I feel that it is too implicit as well. Perhaps if Ruby had something akin to Elixir’s &lt;a href=&quot;https://elixir-lang.org/getting-started/alias-require-and-import.html#import&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Kernel.SpecialForms.import/2&lt;/code&gt;&lt;/a&gt;, where you could explicitly enumerate the methods to import (something like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;include Search, only: :search_query&lt;/code&gt;), then I would probably be more favourably inclined to them.&lt;br /&gt; So, instead, I opted for what I would consider a more Ruby-ish than Rails-ish way of separating the code, through the use of what is apparently called &lt;a href=&quot;https://en.wikipedia.org/wiki/Class_(computer_programming)#Partial&quot;&gt;partial classes&lt;/a&gt; to achieve &lt;a href=&quot;https://en.wikipedia.org/wiki/Separation_of_concerns&quot;&gt;separation of concerns&lt;/a&gt;: essentially, re-opening the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Person&lt;/code&gt; class in separate files, and putting code in small &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;private&lt;/code&gt; modules for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Search&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Sort&lt;/code&gt;, and then have the model explicitly call them (eg &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Search.query&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Sort.column&lt;/code&gt;). For example:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;app/models/person/search.rb&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Search&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SEARCH_QUERY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;prefix ILIKE :search &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;OR first_name ILIKE :search &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;OR last_name ILIKE :search &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;OR suffix ILIKE :search &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;OR locations.name::text ILIKE :search &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;OR species::text ILIKE :search &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;OR gender::text ILIKE :search &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;OR affiliations.name::text ILIKE :search &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;OR weapon::text ILIKE :search &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;OR vehicle::text ILIKE :search&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;private_constant&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:SEARCH_QUERY&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;module_function&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SEARCH_QUERY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;search: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;%&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;private_constant&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:Search&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/div&gt; &lt;p&gt;This &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module&lt;/code&gt; could easily be copy and pasted back into &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;app/models/person.rb&lt;/code&gt;, but having it here “removes the clutter” from the model class itself, while still being encapsulated within it. And yes, &lt;a href=&quot;https://ruby-doc.org/core/Module.html#method-i-private_constant&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;private_constant&lt;/code&gt;&lt;/a&gt; can be used with a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module&lt;/code&gt; to make sure that code like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Person::Search&lt;/code&gt; cannot be used outside the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Person&lt;/code&gt; class.&lt;/p&gt; &lt;p&gt;See the &lt;a href=&quot;https://github.com/paulfioravanti/sentia-coding-test/tree/main/app/models/person&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;app/models/person/&lt;/code&gt;&lt;/a&gt; directory for the other examples.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt; &lt;p&gt;Although I do think there are areas where the coding test requirements could be improved, particularly in the data set, overall, I am left with an overall positive impression of it since it was the catalyst for me to:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;play with Tailwind, which I will definitely use again in the future&lt;/li&gt; &lt;li&gt;re-think some of the ways I have been writing Rails controller and model code&lt;/li&gt; &lt;li&gt;generally learn me some new things&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;So, if you are looking to up your coding game whilst padding your online portfolio, I can definitely recommend using coding tests as a way to do so!&lt;/p&gt;</content><author><name>Paul Fioravanti</name><email>paul@paulfioravanti.com</email><uri>https://www.paulfioravanti.com</uri></author><category term="ruby"/><category term="rails"/><category term="coding-test"/><category term="star-wars"/><category term="data-parsing"/><category term="tailwind"/><category term="enum"/><category term="draper"/><category term="kaminari"/><category term="tachyons"/><category term="pattern-matching"/><summary type="html">A long SQL query in a database far, far away....</summary></entry><entry><title type="html">░▒▓ＥＬＭＳＴＨＥＴＩＣＳ▓▒░</title><link href="https://www.paulfioravanti.com/blog/elmsthetics/" rel="alternate" type="text/html" title="░▒▓ＥＬＭＳＴＨＥＴＩＣＳ▓▒░"/><published>2021-05-02T13:40:00+10:00</published><updated>2021-05-02T13:40:00+10:00</updated><id>https://www.paulfioravanti.com/blog/elmsthetics</id><content type="html" xml:base="https://www.paulfioravanti.com/blog/elmsthetics/">&lt;p&gt;&lt;a href=&quot;http://www.80sfy.com/&quot;&gt;80sfy.com&lt;/a&gt;, by &lt;a href=&quot;http://www.digitalbloc.com/&quot;&gt;Art Sangurai&lt;/a&gt;, is a pretty cool site if you love &lt;a href=&quot;https://en.wikipedia.org/wiki/Synthwave&quot;&gt;synthwave&lt;/a&gt; music or the 1980s in general.&lt;/p&gt; &lt;p&gt;It uses a &lt;a href=&quot;https://soundcloud.com/&quot;&gt;SoundCloud&lt;/a&gt; and &lt;a href=&quot;https://giphy.com/&quot;&gt;Giphy&lt;/a&gt; combination for maximum &lt;span style=&quot;color: #ff2975; font-weight: bold;&quot;&gt;ＡＥＳＴＨＥＴＩＣ&lt;/span&gt; effect to make you &lt;span style=&quot;color: #42c6ff; font-weight: bold&quot;&gt;ＦＥＥＬ &lt;/span&gt; all the nostalgias, which got it &lt;a href=&quot;https://www.reddit.com/r/outrun/comments/5rdvks/my_boyfriend_made_a_website_that_plays_synthwave/&quot;&gt;a lot of love on Reddit&lt;/a&gt;.&lt;/p&gt; &lt;div style=&quot;margin: auto; text-align: center; width: 90%;&quot;&gt; &lt;figure style=&quot;display: block&quot;&gt; &lt;img src=&quot;/assets/images/2021-05-02/80sfy-screenshot.png&quot; alt=&quot;80sfy.com screenshot&quot; /&gt; &lt;/figure&gt; &lt;/div&gt; &lt;p&gt;It is programmed primarily in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript&quot;&gt;Javascript&lt;/a&gt; with the &lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt; library. So, I decided to re-create it using &lt;a href=&quot;https://elm-lang.org/&quot;&gt;Elm&lt;/a&gt; because why not, but also just because…&lt;/p&gt; &lt;div style=&quot;margin: auto; text-align: center; width: 80%;&quot;&gt; &lt;figure style=&quot;display: block&quot;&gt; &lt;img src=&quot;/assets/images/2021-05-02/programming-in-elm-is-rad.jpg&quot; alt=&quot;Programming in Elm is pretty rad!&quot; /&gt; &lt;figcaption style=&quot;text-align: center;&quot;&gt; Retro Wave at &lt;a href=&quot;https://photofunia.com/categories/all_effects/retro-wave&quot;&gt;PhotoFunia&lt;/a&gt; &lt;/figcaption&gt; &lt;/figure&gt; &lt;/div&gt; &lt;p&gt;You can see the results of those efforts here:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://www.paulfioravanti.com/80sfy/&quot;&gt;Elm 80sfy Website&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/paulfioravanti/80sfy&quot;&gt;Elm 80sfy Codebase&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;If the technical details of coding with Elm aren’t your thing, you can stop reading here and just go and enjoy some &lt;a href=&quot;https://www.paulfioravanti.com/80sfy/&quot;&gt;ＯＵＴＲＵＮ beats&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Still here? Okay, man, let’s talk some Elm learnings. Open up the codebase and follow along.&lt;/p&gt; &lt;h2 id=&quot;first-you-gotta-do-the-random-shuffle&quot;&gt;First, you gotta do the Random Shuffle&lt;/h2&gt; &lt;div style=&quot;margin: auto; width: 95%;&quot;&gt; &lt;figure style=&quot;display: block;&quot;&gt; &lt;img src=&quot;/assets/images/2021-05-02/chunk-glitched.png&quot; alt=&quot;Chunk from the Goonies&quot; /&gt; &lt;/figure&gt; &lt;/div&gt; &lt;p&gt;There are two scenarios in the 80sfy application where an element of randomness is required:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Shuffling the order of tracks to be played in the SoundCloud playlist&lt;/li&gt; &lt;li&gt;Getting a random animated &lt;a href=&quot;https://en.wikipedia.org/wiki/GIF&quot;&gt;GIF&lt;/a&gt; URL from Giphy: the application supplies a random descriptive tag, and Giphy sends back a URL that is relevant to that tag&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;Unlike many other programming languages, there is no &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Math.random()&lt;/code&gt; or equivalent function in Elm that allows you to summon random numbers and use them on the spot.&lt;/p&gt; &lt;p&gt;Generating random numbers, or doing anything involving randomness like randomly shuffling or picking an item from a list, is the responsibility of the &lt;a href=&quot;https://elmprogramming.com/elm-runtime.html&quot;&gt;Elm Runtime&lt;/a&gt;. In order get a random number, you need to:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;code up a &lt;em&gt;description&lt;/em&gt; of the kind of random number you want to generate&lt;/li&gt; &lt;li&gt;send that description off to the Elm Runtime as a &lt;a href=&quot;https://package.elm-lang.org/packages/elm/core/latest/Platform.Cmd&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Cmd&lt;/code&gt;&lt;/a&gt; to have the number generated for you&lt;/li&gt; &lt;li&gt;handle the resulting message you get returned from Elm Runtime containing the random number&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;creating-a-random-list-of-numbers&quot;&gt;Creating a Random List of Numbers&lt;/h3&gt; &lt;p&gt;Let’s have a look at a simplified-down example of the first scenario for randomising the order of tracks in a playlist. First though, a bit of context around how the SoundCloud &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;IFrame&lt;/a&gt; widget interacts with the Elm application.&lt;/p&gt; &lt;p&gt;The &lt;a href=&quot;https://developers.soundcloud.com/docs/api/html5-widget&quot;&gt;SoundCloud Widget API&lt;/a&gt; has a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;getSounds(callback)&lt;/code&gt; method that returns the list of sound objects in its playlist. In the Elm application, though, we do not need all of that information: as long as we can get the &lt;em&gt;length&lt;/em&gt; of the widget’s playlist, we can build up our own list of integer track indexes to determine the order that tracks should play.&lt;/p&gt; &lt;p&gt;When the Elm application wants to tell the SoundCloud player to play a track, it sends over an index number &lt;span style=&quot;font-family: serif; font-style: italic; font-size: larger;&quot;&gt; n&lt;/span&gt;, and the SoundCloud player “skips” over to track &lt;span style=&quot;font-family: serif; font-style: italic; font-size: larger;&quot;&gt;n &lt;/span&gt; in its playlist.&lt;/p&gt; &lt;div style=&quot;margin: auto; text-align: center; width: 100%;&quot;&gt; &lt;figure style=&quot;display: block&quot;&gt; &lt;img src=&quot;/assets/images/2021-05-02/andy-organ-glitched.png&quot; alt=&quot;The Goonies on the bone piano&quot; /&gt; &lt;/figure&gt; &lt;/div&gt; &lt;p&gt;So, let’s pick up our story at the point when an Elm &lt;a href=&quot;https://package.elm-lang.org/packages/elm/core/latest/Platform.Sub&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Sub&lt;/code&gt;scription&lt;/a&gt; has:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;received the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;playlistLength&lt;/code&gt; via an incoming &lt;a href=&quot;https://guide.elm-lang.org/interop/ports.html&quot;&gt;Port&lt;/a&gt; message from Javascript (much more to say about ports later…)&lt;/li&gt; &lt;li&gt;wrapped it in a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PlaylistLengthFetched&lt;/code&gt; message&lt;/li&gt; &lt;li&gt;sent the message off to the Elm Runtime…&lt;/li&gt; &lt;li&gt;…which is then handled in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;update&lt;/code&gt; function for the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AudioPlayer&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;language-elm highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Cmd&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;PlaylistLengthFetched&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playlistLength&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generatePlaylist&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Cmd&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generatePlaylist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Playlist&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;generate&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playlistLength&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playlistLength&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playlistLength&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generatePlaylist&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Here, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;playlistLength&lt;/code&gt; value is passed off to a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Playlist.generate&lt;/code&gt; function, which defines the generation of a shuffled list of track indexes, and returns a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Cmd&lt;/code&gt; to get the Elm Runtime to do the work of actually generating the playlist. Let’s have a look at how that randomness is created:&lt;/p&gt; &lt;div class=&quot;language-elm highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Playlist&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Random&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Generator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generate&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Cmd&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generate&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playlistLength&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trackList&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trackList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;range&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;playlistLength&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generator&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Generator&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shuffle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trackList&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;generate&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;PlaylistGenerated&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generator&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Here, we specify that:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;List.range&lt;/code&gt; should build a simple list of integers&lt;/li&gt; &lt;li&gt;the &lt;a href=&quot;https://package.elm-lang.org/packages/elm-community/random-extra/latest/Random-List#shuffle&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Random.List.shuffle&lt;/code&gt;&lt;/a&gt; function from the &lt;a href=&quot;https://package.elm-lang.org/packages/elm-community/random-extra/latest&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Random.Extra&lt;/code&gt;&lt;/a&gt; package, which returns a &lt;a href=&quot;https://package.elm-lang.org/packages/elm/random/latest/Random#Generator&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Generator&lt;/code&gt;&lt;/a&gt; from the &lt;a href=&quot;https://package.elm-lang.org/packages/elm/random/latest/Random&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Random&lt;/code&gt;&lt;/a&gt; package, should shuffle the list&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;We now have our recipe defined for the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;generator&lt;/code&gt; (&lt;em&gt;how&lt;/em&gt; we want a random number generated), so we:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;specify that we want to have the generated playlist sent back to us from the Elm Runtime wrapped in a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PlaylistGenerated&lt;/code&gt; message (defined as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PlaylistGenerated (List Int)&lt;/code&gt; so the message has a place to hold the playlist)&lt;/li&gt; &lt;li&gt;send it off to the Elm Runtime with the &lt;a href=&quot;https://package.elm-lang.org/packages/elm/random/latest/Random#generate&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Random.generate&lt;/code&gt;&lt;/a&gt; function&lt;/li&gt; &lt;li&gt;handle the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PlaylistGenerated&lt;/code&gt; message from the Elm Runtime in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;update&lt;/code&gt; function&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;language-elm highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Cmd&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;PlaylistGenerated&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generatedPlaylist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playlist&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Playlist&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handleNextTrackNumberRequest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generatedPlaylist&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;playlistLength&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playlist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playlist&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;The details of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Playlist.handleNextTrackNumberRequest&lt;/code&gt; function are not needed for this example, but it essentially pops off the first number in the randomised &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;generatedPlaylist&lt;/code&gt;, tells the SoundCloud widget to play the track in its playlist located at that index, and stores the remaining &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;playlist&lt;/code&gt; in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;audioPlayer&lt;/code&gt; model.&lt;/p&gt; &lt;p&gt;But, the main point here is that we have requested the Elm Runtime to generate a random list of integers for us, it has done so, and we have been able to store it in our model! If you want to dig deeper, check out &lt;a href=&quot;https://github.com/paulfioravanti/80sfy/blob/master/src/AudioPlayer/Playlist.elm&quot;&gt;the real &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Playlist&lt;/code&gt; code&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;We have covered audio playlist generation, but in this application, you cannot have random tracks without random GIFs as well! This time though, rather than generate a list, we want to be able to randomly &lt;em&gt;pick&lt;/em&gt; a tag from a static list and send it off to Giphy, so let’s see how to do that.&lt;/p&gt; &lt;h3 id=&quot;randomly-picking-from-a-list&quot;&gt;Randomly Picking from a List&lt;/h3&gt; &lt;p&gt;When the 80sfy application first starts, it goes and fetches a list of descriptive string tags from a local &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tags.json&lt;/code&gt; file, emitting a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TagsFetched&lt;/code&gt; message once that has been attempted, which is then handled in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;update&lt;/code&gt; function for the application’s &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SecretConfig&lt;/code&gt; model (have you found the application’s secret config yet…? :wink:) in a similar way to the following:&lt;/p&gt; &lt;div class=&quot;language-elm highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SecretConfig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Cmd&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secretConfig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;TagsFetched&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Ok&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generateRandomTagForVideoPlayer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Cmd&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generateRandomTagForVideoPlayer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;videoPlayerId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Tag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;generateRandomTag&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;videoPlayerId&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tags&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secretConfig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tags&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Cmd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;batch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generateRandomTagForVideoPlayer&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;1&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generateRandomTagForVideoPlayer&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;2&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;TagsFetched&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Err&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Once the tags have been read in, we store them in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;secretConfig&lt;/code&gt; model, and then send out two &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Cmd&lt;/code&gt;s to generate random tags, one for each &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;videoPlayer&lt;/code&gt; in the application (yes, there are two, which &lt;a href=&quot;https://en.wikipedia.org/wiki/Dissolve_(filmmaking)&quot;&gt;crossfade&lt;/a&gt; between each other).&lt;/p&gt; &lt;p&gt;Let’s take a closer look at the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Tag.generateRandomTag&lt;/code&gt; function, that, like the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Playlist.generate&lt;/code&gt; function earlier, is responsible for creating a random generator:&lt;/p&gt; &lt;div class=&quot;language-elm highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Tag&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generateRandomTag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Random&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generateRandomTag&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Cmd&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generateRandomTag&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;videoPlayerId&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tagsLength&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tagsLength&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;randomTagIndex&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Generator&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;randomTagIndex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tagsLength&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generator&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Generator&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;atIndex&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;randomTagIndex&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;randomTagGeneratedMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;randomTagGeneratedMsg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;RandomTagGenerated&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;videoPlayerId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;generate&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;randomTagGeneratedMsg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generator&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;atIndex&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;atIndex&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tags&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defaultTag&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defaultTag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;80s&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;drop&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Maybe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;withDefault&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defaultTag&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;It looks like randomly picking from a static list is a little bit more involved than generating a new random list. So, what’s going on?&lt;/p&gt; &lt;ul&gt; &lt;li&gt;We specify that &lt;a href=&quot;https://package.elm-lang.org/packages/elm/random/latest/Random#int&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Random.int&lt;/code&gt;&lt;/a&gt; should generate a random index number between zero and the length of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tags&lt;/code&gt; list&lt;/li&gt; &lt;li&gt;We then use &lt;a href=&quot;https://package.elm-lang.org/packages/elm/random/latest/Random#map&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Random.map&lt;/code&gt;&lt;/a&gt; to create the generator that transforms that random index into the tag at the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;randomTagIndex&lt;/code&gt; of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tags&lt;/code&gt; list. (All lists in Elm are &lt;a href=&quot;https://en.wikipedia.org/wiki/Linked_list&quot;&gt;linked lists&lt;/a&gt;, with the potential to contain &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nothing&lt;/code&gt; when we interrogate their contents, which explains the ceremony contained in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;atIndex&lt;/code&gt; function, and why we cannot just write something like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tags[index]&lt;/code&gt;)&lt;/li&gt; &lt;li&gt;We then specify that we want to have the tag sent back to us wrapped in a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RandomTagGenerated&lt;/code&gt; message (defined as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RandomTagGenerated String String&lt;/code&gt; so the message has a place to hold both the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;videoPlayerId&lt;/code&gt; the tag is for, as well as the generated tag itself)&lt;/li&gt; &lt;li&gt;Finally, like in the previous example, we call &lt;a href=&quot;https://package.elm-lang.org/packages/elm/random/latest/Random#generate&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Random.generate&lt;/code&gt;&lt;/a&gt; with the message to be handled in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;update&lt;/code&gt; function, and the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;generator&lt;/code&gt; itself&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RandomTagGenerated&lt;/code&gt; message is then handled in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;update&lt;/code&gt; function as follows:&lt;/p&gt; &lt;div class=&quot;language-elm highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Cmd&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;RandomTagGenerated&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;videoPlayerId&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;randomGifUrlFetchedMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Result&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Error&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;randomGifUrlFetchedMsg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;RandomGifUrlFetched&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;videoPlayerId&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fetchRandomGifUrl&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Cmd&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fetchRandomGifUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Gif&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fetchRandomGifUrl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;randomGifUrlFetchedMsg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;giphyApiKey&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fetchRandomGifUrl&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Once the Elm Runtime returns the randomly generated &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tag&lt;/code&gt; in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RandomTagGenerated&lt;/code&gt; message, along with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;videoPlayerId&lt;/code&gt; we specified ourselves in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;generateRandomTag&lt;/code&gt; function, we use a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Gif.fetchRandomGifUrl&lt;/code&gt; function to make a HTTP call out to Giphy to request a GIF URL (details of which are available in &lt;a href=&quot;https://github.com/paulfioravanti/80sfy&quot;&gt;the codebase&lt;/a&gt;, but check out the &lt;a href=&quot;https://github.com/paulfioravanti/80sfy/blob/master/src/Tag.elm&quot;&gt;the real &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Tag&lt;/code&gt; code&lt;/a&gt; for the details on picking random tags).&lt;/p&gt; &lt;div style=&quot;margin: auto; text-align: center; width: 100%;&quot;&gt; &lt;figure style=&quot;display: block&quot;&gt; &lt;img src=&quot;/assets/images/2021-05-02/goonies-end-scene-glitched.png&quot; alt=&quot;The Goonies looking out at the Inferno&quot; /&gt; &lt;/figure&gt; &lt;/div&gt; &lt;p&gt;For more information on random generators, see the &lt;a href=&quot;https://guide.elm-lang.org/&quot;&gt;The Elm Guide&lt;/a&gt;’s &lt;a href=&quot;https://guide.elm-lang.org/effects/random.html&quot;&gt;Random section&lt;/a&gt;. If these two examples were too scoff-inducing-ly simple and you want some Hard Mode in your randomness, go check out &lt;a href=&quot;https://github.com/ckoster22&quot;&gt;Charlie Koster&lt;/a&gt;’s article &lt;em&gt;&lt;a href=&quot;https://ckoster22.medium.com/randomness-in-elm-8e977457bf1b&quot;&gt;Randomness in Elm&lt;/a&gt;&lt;/em&gt;, and let him bend your mind a bit.&lt;/p&gt; &lt;h2 id=&quot;i-am-a-msg-like-my-father-before-me&quot;&gt;I am a Msg, like my Father before me&lt;/h2&gt; &lt;div style=&quot;margin: auto; width: 95%;&quot;&gt; &lt;figure style=&quot;display: block;&quot;&gt; &lt;img src=&quot;/assets/images/2021-05-02/luke-skywalker-glitched.png&quot; alt=&quot;I am a Jedi, like my father before me.&quot; /&gt; &lt;/figure&gt; &lt;/div&gt; &lt;p&gt;&lt;a href=&quot;https://guide.elm-lang.org/&quot;&gt;The Elm guide&lt;/a&gt; is &lt;a href=&quot;https://guide.elm-lang.org/webapps/structure.html&quot;&gt;quite opinionated about Elm application structuring&lt;/a&gt;. While it advocates less structure and longer files, I find that as an application grows, I definitely prefer more structure and smaller files.&lt;/p&gt; &lt;p&gt;I like to have &lt;em&gt;thematically-related&lt;/em&gt; functions grouped together, just to aid in my own understanding of the code at a glance, which seems to push me towards what would seem to be considered a React-style(?) “components” way of thinking, so I will often use that word when referring to what are essentially the different “parts” of the application.&lt;/p&gt; &lt;p&gt;In my mind, the 80sfy application has a few “main” components in it:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AudioPlayer&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;VideoPlayer&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ControlPanel&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SecretConfig&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;When you press the “Play” button on the control panel, you start playing the audio &lt;em&gt;and&lt;/em&gt; start playing the GIF videos, so these different parts of the application need to be able to communicate with each other.&lt;/p&gt; &lt;p&gt;Of course all of these messages can live at the “top level” of the application, and the handling for every one of those messages can live inside one big &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;update&lt;/code&gt; function. However, there are times where I would rather have a separate &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AudioPlayer.Update&lt;/code&gt; “child” file, with its own &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;update&lt;/code&gt; function, to handle thematically-similar messages specifically targeted at the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AudioPlayer&lt;/code&gt; from the “parent” &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;update&lt;/code&gt; function, and a similar structure for the other components.&lt;/p&gt; &lt;p&gt;The main &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;update&lt;/code&gt; function can be the “trunk” of the application tree, which can handle its own top level messages, and each named component can have its own separate &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;update&lt;/code&gt; function that “branches off” that trunk. Each component branch can emit messages that communicate back up to the parent trunk itself, or to other sibling branch components via the parent trunk.&lt;/p&gt; &lt;p&gt;This kind of concept is explained in a way that resonated with me in &lt;em&gt;&lt;a href=&quot;https://medium.com/@alex.lew/the-translator-pattern-a-model-for-child-to-parent-communication-in-elm-f4bfaa1d3f98&quot;&gt;The Translator Pattern: a model for Child-to-Parent Communication in Elm&lt;/a&gt;&lt;/em&gt; by &lt;a href=&quot;http://alexlew.net&quot;&gt;Alex Lew&lt;/a&gt;. The “translator”, in this context, refers to a function that uses a dictionary of parent-level message types to “translate” child-level messages into parent-level messages. The burden of performing a message “translation” lies with the parent &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;update&lt;/code&gt; function, before it is able to send any &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Cmd&lt;/code&gt;s off to the Elm Runtime.&lt;/p&gt; &lt;p&gt;I really liked the idea of some sort of parent-level message dictionary that child components could leverage when they generate &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Cmd&lt;/code&gt;s, but I found I needed to slightly tweak the way that parent-child &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Msg&lt;/code&gt;/&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Cmd&lt;/code&gt; communication occurred, compared to Alex’s blog post, to get it all making sense in my own head.&lt;/p&gt; &lt;div style=&quot;margin: auto; width: 95%;&quot;&gt; &lt;figure style=&quot;display: block;&quot;&gt; &lt;img src=&quot;/assets/images/2021-05-02/anakin-redeemed-glitched.png&quot; alt=&quot;Anakin redeemed&quot; /&gt; &lt;/figure&gt; &lt;/div&gt; &lt;p&gt;So, let’s see how this way of thinking works in practice in the 80sfy application. I have adopted a naming convention of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Msgs&lt;/code&gt; for the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;type alias&lt;/code&gt; that defines a record containing a list of all the top-level &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Msg&lt;/code&gt;s in the application, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dictionary&lt;/code&gt; for the function that returns the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Msgs&lt;/code&gt; dictionary itself:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/Msg.elm&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;div class=&quot;language-elm highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msgs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dictionary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ControlPanel&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Key&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Ports&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SecretConfig&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Time&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Posix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;VideoPlayer&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ControlPanel&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ControlPanel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CrossFadePlayers&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Posix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;KeyPressed&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NoOp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Pause&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Ports&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Ports&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SecretConfig&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SecretConfig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ShowApplicationState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;VideoPlayer&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;VideoPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;alias&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msgs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayerMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;controlPanelMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ControlPanel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;crossFadePlayersMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Posix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keyPressedMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;noOpMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pauseMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;portsMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Ports&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secretConfigMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SecretConfig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;showApplicationStateMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;videoPlayerMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;VideoPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dictionary&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dictionary&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayerMsg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;controlPanelMsg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ControlPanel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;crossFadePlayersMsg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CrossFadePlayers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keyPressedMsg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;KeyPressed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;noOpMsg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NoOp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pauseMsg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Pause&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;portsMsg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Ports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secretConfigMsg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SecretConfig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;showApplicationStateMsg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ShowApplicationState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;videoPlayerMsg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;VideoPlayer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Msgs&lt;/code&gt; in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dictionary&lt;/code&gt; are a mix of “top-level”-only messages, like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CrossFadePlayers Posix&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NoOp&lt;/code&gt;, and messages like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AudioPlayer AudioPlayer.Msg&lt;/code&gt;, where the “top-level” or “parent” part of the message is meant to indicate which component’s &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;update&lt;/code&gt; function the message should be sent to (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AudioPlayer&lt;/code&gt;), and the constructor parameter (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AudioPlayer.Msg&lt;/code&gt;) is the specific message to be handled by the child component’s &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;update&lt;/code&gt; function.&lt;/p&gt; &lt;p&gt;The dictionary is initialised as soon as the application starts, in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt; function, and is passed into every function that needs to send top-level messages (ie all of them):&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/Main.elm&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;div class=&quot;language-elm highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Browser&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Flags&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Flags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Model&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msgs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Subscriptions&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Update&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Program&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Flags&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Model&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgs&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dictionary&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Browser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;document&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Update&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subscriptions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Subscriptions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subscriptions&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgs&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;At this point, your &lt;a href=&quot;https://en.wiktionary.org/wiki/Spidey-sense&quot;&gt;spidey-sense&lt;/a&gt; may be tingling regarding passing in a record of global context this large (I do not consider it “global state” as-such since the dictionary content will never be transformed or “changed”) to the three main sections of the application.&lt;/p&gt; &lt;p&gt;Surely all ten &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Msg&lt;/code&gt; types in the dictionary are not needed in &lt;em&gt;every&lt;/em&gt; section of the application, right…? Correct, and that’s why we are going to lean on Elm’s &lt;a href=&quot;https://ckoster22.medium.com/advanced-types-in-elm-extensible-records-67e9d804030d&quot;&gt;Extensible Records&lt;/a&gt; types to help “filter” this dictionary down to the bare minimum of top-level messages that each part of the application needs to use.&lt;/p&gt; &lt;p&gt;Let’s see what this looks like in the top-level &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Update&lt;/code&gt; function:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/Update.elm&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;div class=&quot;language-elm highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Update&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;alias&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayerMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pauseMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;portsMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Ports&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secretConfigMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SecretConfig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;videoPlayerMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;VideoPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Cmd&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parentMsgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Update&lt;/code&gt; module essentially &lt;em&gt;re-defines&lt;/em&gt; the type of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Msgs&lt;/code&gt; record that is passed to it, restricting its entries down to only those top-level messages that it needs to care about. This helps to keep the record content more focused, and feel a bit less heavy than the record with ten entries that was originally passed in.&lt;/p&gt; &lt;p&gt;We got a 50% reduction in entries from the original record in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Update&lt;/code&gt; module, so let’s see how much of one we get in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;View&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Subscriptions&lt;/code&gt;:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/View.elm&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;div class=&quot;language-elm highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;alias&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayerMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;controlPanelMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ControlPanel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;noOpMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pauseMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;portsMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Ports&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secretConfigMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SecretConfig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;showApplicationStateMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;videoPlayerMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;VideoPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Document&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/Subscriptions.elm&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;div class=&quot;language-elm highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Subscriptions&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subscriptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;alias&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayerMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;controlPanelMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ControlPanel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;crossFadePlayersMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Posix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keyPressedMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;noOpMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;portsMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Ports&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;videoPlayerMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;VideoPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subscriptions&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Sub&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subscriptions&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;The reduction in entries is not quite as great for these two modules, but at least there &lt;em&gt;is&lt;/em&gt; a reduction, and the record can only get smaller as it gets passed down further into child components.&lt;/p&gt; &lt;div style=&quot;margin: auto; width: 95%;&quot;&gt; &lt;figure style=&quot;display: block;&quot;&gt; &lt;img src=&quot;/assets/images/2021-05-02/chewbacca-ewoks-glitched.png&quot; alt=&quot;Chewbacca and Ewoks&quot; /&gt; &lt;/figure&gt; &lt;/div&gt; &lt;p&gt;As an example, let’s follow the journey of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Msgs&lt;/code&gt; record as it gets passed down into the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AudioPlayer&lt;/code&gt; child component from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Update&lt;/code&gt; module:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/Update.elm&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;div class=&quot;language-elm highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Update&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;alias&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Cmd&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parentMsgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgForAudioPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parentMsgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgForAudioPlayer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;audioPlayer&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;parentMsgs&lt;/code&gt; are passed into the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AudioPlayer.update&lt;/code&gt; function, along with whatever &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;msgForAudioPlayer&lt;/code&gt; needs to be handled there, as well as the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;model.audioPlayer&lt;/code&gt;, which for all intents and purposes becomes the “model” for the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AudioPlayer&lt;/code&gt; component.&lt;/p&gt; &lt;p&gt;Let’s see how the type definition has changed for the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Msgs&lt;/code&gt; in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AudioPlayer&lt;/code&gt; component. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AudioPlayer.elm&lt;/code&gt; file acts as the gateway to all audio player-related functionality, with implementation details all hidden away in sub-modules (which we will talk about in more detail later on):&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/AudioPlayer.elm&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;div class=&quot;language-elm highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Model&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Model&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Update&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Update&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;alias&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;alias&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Update&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;ParentMsgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Cmd&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parentMsgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Update&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parentMsgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayer&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;update&lt;/code&gt; function simply calls the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AudioPlayer&lt;/code&gt;’s own internal &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Update.update&lt;/code&gt; function, but the thing to notice here, is that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;parentMsgs&lt;/code&gt; is now defined in terms of a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Update.ParentMsgs msgs msg&lt;/code&gt; type: a further-filtered, child-component-defined record type that only contains the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;parentMsgs&lt;/code&gt; that the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AudioPlayer&lt;/code&gt;’s &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;update&lt;/code&gt; function needs to use.&lt;/p&gt; &lt;p&gt;Notice also that the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AudioPlayer.update&lt;/code&gt; is returning a lower-cased &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Cmd msg&lt;/code&gt;, as apposed to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Cmd Msg&lt;/code&gt; in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Update.update&lt;/code&gt;. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;msg&lt;/code&gt; here is a &lt;a href=&quot;https://guide.elm-lang.org/types/reading_types.html#type-variables&quot;&gt;type variable&lt;/a&gt; that can technically match any type, but in this case it &lt;em&gt;must&lt;/em&gt; match one of the types contained in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;parentMsgs&lt;/code&gt;, hence the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;msg&lt;/code&gt; in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Update.ParentMsgs msgs msg&lt;/code&gt; declaration. The child component does not know the specifics about the parent messages: it just knows that it needs to return the type of message that the parent is expecting to get back.&lt;/p&gt; &lt;p&gt;Let’s see what the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Update.ParentMsgs msgs msg&lt;/code&gt; look like now:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/AudioPlayer/Update.elm&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;div class=&quot;language-elm highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Update&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;ParentMsgs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Model&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Model&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;alias&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ParentMsgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayerMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ParentMsgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Cmd&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayerMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;The record has been reduced down to a single entry, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;audioPlayerMsg&lt;/code&gt;, which is defined from the child component’s perspective as being as a function that takes one of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AudioPlayer&lt;/code&gt;’s own &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Msg&lt;/code&gt; types, and returns some kind of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;msg&lt;/code&gt; type from its parent that it does not know the details of.&lt;/p&gt; &lt;p&gt;This declaration mirrors the same function from the parent &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Update&lt;/code&gt; module’s perspective, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AudioPlayer.Msg -&amp;gt; Msg&lt;/code&gt;, a function that takes in some message internal-to-&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AudioPlayer&lt;/code&gt;, returning a concrete &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Msg&lt;/code&gt; type.&lt;/p&gt; &lt;div style=&quot;margin: auto; width: 95%;&quot;&gt; &lt;figure style=&quot;display: block;&quot;&gt; &lt;img src=&quot;/assets/images/2021-05-02/leia-truth-glitched.png&quot; alt=&quot;Leia learns the truth&quot; /&gt; &lt;/figure&gt; &lt;/div&gt; &lt;p&gt;The existence of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Update.ParentMsgs&lt;/code&gt; alias belies the existence of similar aliases for a child component’s &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;View&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Subscriptions&lt;/code&gt; functions. For example, staying with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AudioPlayer&lt;/code&gt;, we find this definition for the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;subscriptions&lt;/code&gt; function:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/AudioPlayer.elm&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;div class=&quot;language-elm highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subscriptions&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Model&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Model&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Subscriptions&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Subscriptions&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;alias&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subscriptions&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Subscriptions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;ParentMsgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Sub&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subscriptions&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parentMsgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Subscriptions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subscriptions&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parentMsgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayer&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;And the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Subscriptions.ParentMsgs msgs msg&lt;/code&gt; is defined as:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/AudioPlayer/Subscriptions.elm&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;div class=&quot;language-elm highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Subscriptions&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;ParentMsgs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subscriptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Model&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;alias&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ParentMsgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayerMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;noOpMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subscriptions&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ParentMsgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Sub&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subscriptions&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parentMsgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Similar to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Update.ParentMsgs&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Subscriptions.ParentMsgs&lt;/code&gt; restricts the passed in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;parentMsgs&lt;/code&gt; record to only a small subset of entries, including the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;noOpMsg&lt;/code&gt;, which it only knows as some &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;msg&lt;/code&gt; type variable, without knowing its specific details.&lt;/p&gt; &lt;p&gt;All of the other child components in the 80sfy application handle the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Msgs&lt;/code&gt; record in a similar way, concerning themselves only with the parent messages that they themselves use.&lt;/p&gt; &lt;p&gt;With regards to how these parent messages are used inside of views, and how they wrap their child messages, let’s have a look at an example in the user interface code for the play/pause button in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ControlPanel&lt;/code&gt;:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/ControlPanel/View/Controls.elm&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;div class=&quot;language-elm highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ControlPanel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Controls&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ControlPanel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Styles&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Styles&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Styled&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Styled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Attributes&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attribute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Styled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Events&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Ports&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;alias&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ParentMsgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayerMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pauseMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;portsMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Ports&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;alias&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Context&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ParentMsgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Context&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Html&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parentMsgs&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playing&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isPlaying&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayer&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;css&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Styles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;controls&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attribute&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;data-name&quot;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;controls&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playPauseButton&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parentMsgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playing&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playPauseButton&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ParentMsgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Bool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Html&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playPauseButton&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pauseMsg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;portsMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playing&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iconClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playPauseMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playing&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;fas fa-pause&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pauseMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;fas fa-play&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;portsMsg&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Ports&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;playMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;css&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Styles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attribute&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;data-name&quot;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;play-pause&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onClick&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playPauseMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;css&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Styles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iconBackground&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;css&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Styles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;icon&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iconClass&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Looking specifically at the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;playPauseButton&lt;/code&gt; function, and the value that is supplied to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;onClick&lt;/code&gt; function, we can see that:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;if the player is currently &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;playing&lt;/code&gt;, the parameter-less parent message &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pauseMsg&lt;/code&gt; (read: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pause&lt;/code&gt;) gets sent as-is to be handled in the top-level &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Update.update&lt;/code&gt; function&lt;/li&gt; &lt;li&gt;otherwise, if the player is stopped, we fetch the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Play&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Msg&lt;/code&gt; from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ports&lt;/code&gt; module (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ports.playMsg&lt;/code&gt;), give that as a parameter to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;portsMsg&lt;/code&gt; message (read: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ports Play&lt;/code&gt;), and send that off to be handled in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Update.update&lt;/code&gt; as a message to be forwarded off to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ports&lt;/code&gt; “child component” for further handling (much more will be written about the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ports&lt;/code&gt; component later on…)&lt;/li&gt; &lt;/ul&gt; &lt;div style=&quot;margin: auto; width: 95%;&quot;&gt; &lt;figure style=&quot;display: block;&quot;&gt; &lt;img src=&quot;/assets/images/2021-05-02/battle-of-endor-glitched.png&quot; alt=&quot;Battle of Endor&quot; /&gt; &lt;/figure&gt; &lt;/div&gt; &lt;p&gt;As you can see, if you want to split your Elm application out into discrete parts/components, there is a potential complexity/maintenance cost associated with doing so.&lt;/p&gt; &lt;p&gt;I am prepared to pay this cost since this way of doing things makes sense to me as an application grows. Given this subjective viewpoint, and the fact that the Elm Guide would seem to consider this way of doing things to be off the “golden path”, definitely consider whether this approach is right for you, your team, and your application.&lt;/p&gt; &lt;h2 id=&quot;say-hello-to-my-little-façade&quot;&gt;Say “hello” to my little façade&lt;/h2&gt; &lt;div style=&quot;margin: auto; width: 95%;&quot;&gt; &lt;figure style=&quot;display: block;&quot;&gt; &lt;img src=&quot;/assets/images/2021-05-02/say-hello-to-my-little-friend-glitched.png&quot; alt=&quot;Say hello to my little friend&quot; /&gt; &lt;/figure&gt; &lt;/div&gt; &lt;p&gt;The &lt;a href=&quot;https://en.wikipedia.org/wiki/Facade_pattern&quot;&gt;façade pattern&lt;/a&gt; is probably my favourite software-design pattern, and I try and use it wherever it makes sense to make interfaces to different parts of a system more straightforward.&lt;/p&gt; &lt;p&gt;One of my software pet peeves is seeing one part of a system be able to break boundaries and reach down with impunity into the internals of another part of a system it has no business knowing about.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;There are no natural barriers to handing out this kind of impunity in Elm, but at least the &lt;a href=&quot;https://package.elm-lang.org/packages/kress95/elm-review-indirect-internal/latest&quot;&gt;elm-review-indirect-internal&lt;/a&gt; rule, for use with the fantastic &lt;a href=&quot;https://package.elm-lang.org/packages/jfmengels/elm-review/latest/&quot;&gt;elm-review&lt;/a&gt; tool, can slap you on the wrist if you attempt to try.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;In the previous section, you saw part of how I tried to put a “hard” interface in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AudioPlayer&lt;/code&gt; module. Let’s go back and re-open up that file, but instead have a scan of its entire content. For our purposes here, what the functions do is not important.&lt;/p&gt; &lt;p&gt;The main points are that there is no implementation code, all functions are simply one-line delegations out to sub-modules, and any other module in the application only needs to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;import&lt;/code&gt; the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AudioPlayer&lt;/code&gt; module to interface with its functionality:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/AudioPlayer.elm&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;div class=&quot;language-elm highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayerId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayerVolume&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Model&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Model&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Playlist&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Playlist&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Status&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Status&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Subscriptions&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Subscriptions&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Task&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Task&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Update&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Update&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Volume&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Volume&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Ports&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;SoundCloudWidgetPayload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SoundCloud&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;SoundCloudPlaylistUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;alias&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;alias&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayerId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;AudioPlayerId&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;alias&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayerVolume&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Volume&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;AudioPlayerVolume&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;alias&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;alias&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;TrackIndex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Playlist&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;TrackIndex&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SoundCloudPlaylistUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soundCloudPlaylistUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soundCloudPlaylistUrl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;adjustVolumeMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;adjustVolumeMsg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayerMsg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sliderVolume&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;adjustVolume&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayerMsg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sliderVolume&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isMuted&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isMuted&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isMuted&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isPlaying&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isPlaying&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isPlaying&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nextTrackMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nextTrackMsg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;NextTrack&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;performAudioPlayerReset&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SoundCloudPlaylistUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Cmd&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;performAudioPlayerReset&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayerMsg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soundCloudPlaylistUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;performAudioPlayerReset&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayerMsg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soundCloudPlaylistUrl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;performNextTrackSelection&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Cmd&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;performNextTrackSelection&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayerMsg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;performNextTrackSelection&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayerMsg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;performVolumeAdjustment&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Cmd&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;performVolumeAdjustment&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayerMsg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sliderVolume&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;performVolumeAdjustment&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayerMsg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sliderVolume&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rawId&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayerId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rawId&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayerId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rawId&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayerId&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rawTrackIndex&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;TrackIndex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rawTrackIndex&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trackIndex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Playlist&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rawTrackIndex&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trackIndex&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rawVolume&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayerVolume&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rawVolume&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayerVolume&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Volume&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rawVolume&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayerVolume&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soundCloudWidgetPayload&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SoundCloudWidgetPayload&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soundCloudWidgetPayload&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;soundCloudWidgetPayload&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;statusToString&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;statusToString&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toString&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subscriptions&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Subscriptions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;ParentMsgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Sub&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subscriptions&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parentMsgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Subscriptions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subscriptions&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parentMsgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;toggleMuteMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;toggleMuteMsg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;ToggleMute&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Update&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;ParentMsgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Cmd&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parentMsgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Update&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parentMsgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayer&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;It would be nice if Elm had built-in &lt;a href=&quot;https://en.wikipedia.org/wiki/Syntactic_sugar&quot;&gt;syntactic sugar&lt;/a&gt; similar to, say, &lt;a href=&quot;https://elixir-lang.org/&quot;&gt;Elixir&lt;/a&gt;’s &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#defdelegate/2&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;defdelegate(funs, opts)&lt;/code&gt;&lt;/a&gt; function, in order to prevent the need to write function delegations “longhand”. But, leaving that aside, here are a few points worth bringing up regarding this file, as well as the general architecture of the application:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Within the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AudioPlayer&lt;/code&gt; module, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;import&lt;/code&gt;ing sub-modules (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AudioPlayer.X&lt;/code&gt; modules) is unrestricted, but content from any other named module is only accessible via its top-level module (eg no reaching into &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ports.Msg&lt;/code&gt; from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AudioPlayer&lt;/code&gt;)&lt;/li&gt; &lt;li&gt;Types defined in sub-modules may be exposed via the top-level module as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;type alias&lt;/code&gt;es (eg &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AudioPlayer&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Msg&lt;/code&gt; etc). So, as far as other top-level modules are concerned, if they import the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AudioPlayer&lt;/code&gt; type, the fact that the type is actually defined in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AudioPlayer.Model&lt;/code&gt; is unknowable implementation detail behind the &lt;a href=&quot;https://en.wikipedia.org/wiki/API&quot;&gt;API&lt;/a&gt; wall: they just see the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AudioPlayer&lt;/code&gt; type coming in from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AudioPlayer&lt;/code&gt; module&lt;/li&gt; &lt;li&gt;Wherever possible, I have tried to make &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;types&lt;/code&gt; be &lt;a href=&quot;https://ckoster22.medium.com/advanced-types-in-elm-opaque-types-ec5ec3b84ed2&quot;&gt;Opaque Types&lt;/a&gt; in order to hide their constructors, and further enforce boundaries on implementation details (even amongst sibling modules; see, for example, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Status&lt;/code&gt; type in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Audio.Status&lt;/code&gt;).&lt;br /&gt; The major exception to this would be the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Msg&lt;/code&gt; type, which, similar to every other &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Msg&lt;/code&gt; in the application, needed to be exposed as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Msg(..)&lt;/code&gt; from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AudioPlayer.Msg&lt;/code&gt; so it could be used specifically for pattern matching in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AudioPlayer.Update&lt;/code&gt; files, and consequently referenced directly as return values in functions like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nextTrackMsg&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;toggleMuteMsg&lt;/code&gt;. But, just like any other type defined in a sub-module, if the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Msg&lt;/code&gt; is to be exposed via the top-level module, it must only be via a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;type alias&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;All of the other modules in the 80sfy application that have enough internal implementation details to split out into sub-modules follow these patterns.&lt;/p&gt; &lt;p&gt;The Elm Guide would probably call all this façade-component application structuring a reflection of my programming “&lt;a href=&quot;https://guide.elm-lang.org/webapps/structure.html#culture-shock&quot;&gt;culture shock&lt;/a&gt;”. I think the points made in that section of the guide are reasonable, but I honestly just cannot agree with its advice of big files and comment header delimiters. I just want my code to be legible (and hopefully not just to me), and I currently think that this kind of structure can help in that goal.&lt;/p&gt; &lt;h2 id=&quot;you-can-be-my-wrapped-type-anytime&quot;&gt;You can be my wrapped type anytime&lt;/h2&gt; &lt;div style=&quot;margin: auto; width: 95%;&quot;&gt; &lt;figure style=&quot;display: block;&quot;&gt; &lt;img src=&quot;/assets/images/2021-05-02/you-can-be-my-wingman-glitched.png&quot; alt=&quot;You can be my wingman anytime&quot; /&gt; &lt;/figure&gt; &lt;/div&gt; &lt;p&gt;Writing this application got me to become a big fan of &lt;a href=&quot;https://github.com/elm/compiler/blob/master/hints/comparing-custom-types.md#wrapped-types&quot;&gt;Wrapped Custom Types&lt;/a&gt;, not just for the extra type safety, but also for the clarity they help give record &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;type alias&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Msg&lt;/code&gt; constructor definitions.&lt;/p&gt; &lt;p&gt;Before I knew about wrapped types, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AudioPlayer&lt;/code&gt; model looked like the following:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/AudioPlayer/Model.elm&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;div class=&quot;language-elm highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;alias&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playlist&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playlistLength&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soundCloudIframeUrl&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;volume&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;At face value, this could be considered reasonable, but is the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AudioPlayer&lt;/code&gt;’s &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;id&lt;/code&gt; really the same kind of thing as its &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;soundCloudIframeUrl&lt;/code&gt;? Are the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Int&lt;/code&gt;s in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;playlist&lt;/code&gt; really the same kind of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Int&lt;/code&gt;s as the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;volume&lt;/code&gt;? Should they be…?&lt;/p&gt; &lt;p&gt;After trying out creating some types to wrap the basic types, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AudioPlayer&lt;/code&gt; model was transformed into:&lt;/p&gt; &lt;div class=&quot;language-elm highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;alias&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayerId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playlist&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;TrackIndex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playlistLength&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soundCloudIframeUrl&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SoundCloudIframeUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;volume&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayerVolume&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;I think that this model with wrapped types conveys more &lt;em&gt;meaning&lt;/em&gt; than the one with just basic types. So, I pretty much went all around the application codebase and wrapped every type I could that made sense, resulting in a total of 12 wrapped types created for 80sfy.&lt;/p&gt; &lt;div style=&quot;margin: auto; width: 95%;&quot;&gt; &lt;figure style=&quot;display: block;&quot;&gt; &lt;img src=&quot;/assets/images/2021-05-02/maverick-thumbs-up-glitched.png&quot; alt=&quot;Maverick thumbs up.&quot; /&gt; &lt;/figure&gt; &lt;/div&gt; &lt;p&gt;In the land of wrapped types, though, conveying meaning does exert an overhead cost. For example, let’s have a look at the ceremony required to wrap and unwrap a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TrackIndex&lt;/code&gt;:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/AudioPlayer/Playlist.elm&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;div class=&quot;language-elm highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Playlist&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;TrackIndex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rawTrackIndex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trackIndex&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;TrackIndex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;TrackIndex&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trackIndex&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;TrackIndex&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trackIndex&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rawTrackIndexInt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;TrackIndex&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rawTrackIndexInt&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rawTrackIndex&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;TrackIndex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rawTrackIndex&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;TrackIndex&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rawTrackIndexInt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rawTrackIndexInt&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AudioPlayer&lt;/code&gt;’s &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;playlist&lt;/code&gt; field must contain a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;List TrackIndex&lt;/code&gt;, therefore:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;every “raw” track index &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Int&lt;/code&gt; that goes into the list must first be wrapped by calling &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Playlist.trackIndex rawTrackIndexInt&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;if you ever want to do something with the “raw” &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Int&lt;/code&gt; value inside of a track index, then you have to unwrap it by calling &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Playlist.rawTrackIndex trackIndex&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;So, wouldn’t it be easier to just…not have wrapped types here? Yes, it would! But, this is the cost of adding (admittedly subjective) clarity to model types, and it is up to you to decide whether doing this is meaningful and worth the cost of admission.&lt;/p&gt; &lt;p&gt;Since the above example acts like some kind of wardrobe for an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Int&lt;/code&gt;, putting on and taking off a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TrackIndex&lt;/code&gt;-coloured coat without any change to the underlying raw value, let’s have a look at some other scenarios where constraints or validation for the raw value are being added to the wrapping process.&lt;/p&gt; &lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SecretConfig&lt;/code&gt; model contains the following values that can be populated by user input:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/SecretConfig/Model.elm&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;div class=&quot;language-elm highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;alias&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SecretConfig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gifDisplayIntervalSeconds&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;GifDisplayIntervalSeconds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soundCloudPlaylistUrl&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SoundCloudPlaylistUrl&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;These types wrap around a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Float&lt;/code&gt; and a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;String&lt;/code&gt; respectively, but because we cannot trust anything given to us by our hostile, power-suit-toting users, we need conditions on the raw values that serve as barriers to the wrapped types being created:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/Gif.elm&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;div class=&quot;language-elm highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Gif&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;GifDisplayIntervalSeconds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;displayIntervalSeconds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;GifDisplayIntervalSeconds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;GifDisplayIntervalSeconds&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Float&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;displayIntervalSeconds&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Float&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Maybe&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;GifDisplayIntervalSeconds&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;displayIntervalSeconds&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rawDisplayIntervalSecondsFloat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rawDisplayIntervalSecondsFloat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Just&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;GifDisplayIntervalSeconds&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rawDisplayIntervalSecondsFloat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Nothing&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;A non-positive display interval between animated GIFs does not make sense, so we only wrap positive values, and give malicious users &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nothing&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Assuming that this is the only function we create to return new &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GifDisplayIntervalSeconds&lt;/code&gt; types, we build in some guarantees around the validity of raw values wrapped in a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GifDisplayIntervalSeconds&lt;/code&gt; type that we could not get if it was a basic &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Float&lt;/code&gt; type.&lt;/p&gt; &lt;p&gt;Similarly, a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SoundCloudPlaylistUrl&lt;/code&gt; isn’t just any kind of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;String&lt;/code&gt;: it must have a correct prefix. If the raw value does, it gets wrapped; if not, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nothing&lt;/code&gt;:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/SoundCloud/Url.elm&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;div class=&quot;language-elm highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SoundCloud&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Url&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SoundCloudPlaylistUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playlistUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SoundCloudPlaylistUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SoundCloudPlaylistUrl&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playlistUrl&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Maybe&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SoundCloudPlaylistUrl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playlistUrl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rawSoundCloudPlaylistUrlString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playlistUrlPrefix&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playlistUrlPrefix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;https://api.soundcloud.com/&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isValidUrl&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isValidUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;startsWith&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playlistUrlPrefix&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rawSoundCloudPlaylistUrlString&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isValidUrl&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Just&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;SoundCloudPlaylistUrl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rawSoundCloudPlaylistUrlString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Nothing&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;As you can see, Wrapped Types can provide more than just a fancy enclosure to a basic type. Aside from improvements in type readability, they can help assert the validity of the wrapped raw values, so I would highly recommend giving them a try in your own Elm codebases!&lt;/p&gt; &lt;h2 id=&quot;ports-where-were-going-we-dont-need-ports&quot;&gt;Ports? Where we’re going we don’t need ports&lt;/h2&gt; &lt;div style=&quot;margin: auto; width: 95%;&quot;&gt; &lt;figure style=&quot;display: block;&quot;&gt; &lt;img src=&quot;/assets/images/2021-05-02/we-dont-need-roads-glitched.png&quot; alt=&quot;Roads? Where we&apos;re going we don&apos;t need roads&quot; /&gt; &lt;/figure&gt; &lt;/div&gt; &lt;p&gt;My usage of ports in Elm applications previous to 80sfy was essentially as remote function calls out to the impure badlands of Javascript.&lt;/p&gt; &lt;p&gt;For every kind of operation I needed to leverage Javascript for, I would poke a port-shaped hole in the Elm application boundary, do the minimum amount of work in Javascript-land, and return control quickly to the pure, type-safe Elm application fortress.&lt;/p&gt; &lt;p&gt;For example, previous iterations of port-related code for the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AudioPlayer&lt;/code&gt;, where communications needed to be sent out to the SoundCloud widget iframe, looked like the following, with functions named in the &lt;a href=&quot;https://en.wikipedia.org/wiki/Active_voice&quot;&gt;active voice&lt;/a&gt;:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/AudioPlayer/Ports.elm&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;div class=&quot;language-elm highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;port&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Ports&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pauseAudio&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playAudio&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;skipToTrack&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;..&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;port&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pauseAudio&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Cmd&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;port&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playAudio&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Cmd&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;port&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;skipToTrack&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Cmd&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- and a bunch of other port declarations...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;The Elm application would also need to know when the SoundCloud widget controls were used directly so it could update its own internal state. This occurred via subscriptions named in the &lt;a href=&quot;https://en.wikipedia.org/wiki/Passive_voice&quot;&gt;passive voice&lt;/a&gt;:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/AudioPlayer/Subscriptions.elm&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;div class=&quot;language-elm highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;port&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Subscriptions&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msgs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subscriptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Decode&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;port&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPaused&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Sub&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;port&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlaying&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Sub&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;port&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nextTrackNumberRequested&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Sub&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Soundcloud-specific details about the widget, and its events (and how to bind to them), can be found in the &lt;a href=&quot;https://developers.soundcloud.com/docs/api/html5-widget&quot;&gt;SoundCloud Widget API&lt;/a&gt; documentation. However, the more pointed thing to note about the Javascript code below, is that there are six named Elm &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;app.ports&lt;/code&gt; that are having &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;subscribe&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;send&lt;/code&gt; called on them (and this is just a sample; I originally had &lt;em&gt;28&lt;/em&gt;(!) named ports/subscriptions across the application):&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/soundCloudWidget.js&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Widget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;track-player&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// initialise SoundCloud player&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Widget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;READY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;initPlayAudio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;initPauseAudio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;initSkipToTrack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;initTrackFinished&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// other similar init functions...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;initPlayAudio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Elm tells the SoundCloud widget to play audio&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;playAudio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;subscribe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;play&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// The SoundCloud widget tells Elm its been told to play (non-Elm request)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Widget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PLAY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sound&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;audioPlaying&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sound&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;loadedProgress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;initPauseAudio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Elm tells the SoundCloud widget to play audio&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pauseAudio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;subscribe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pause&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// The SoundCloud widget tells Elm its been told to pause (non-Elm request)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Widget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PAUSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sound&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;audioPaused&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sound&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currentPosition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;initSkipToTrack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Elm tells the SoundCloud widget to skip over to a specific track number&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;skipToTrack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;subscribe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trackNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;skip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trackNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;initTrackFinished&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// The SoundCloud widget tells Elm its finished playing an audio track&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Widget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;FINISH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nextTrackNumberRequested&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;I wrote the code like this because it was how I understood ports to work, and pretty much all the educational materials I read about ports implemented them essentially like remote function calls into Javascript.&lt;/p&gt; &lt;p&gt;However, while re-reading the &lt;a href=&quot;https://guide.elm-lang.org/interop/ports.html&quot;&gt;Elm Guide’s Ports section&lt;/a&gt;, I was greeted by this guidance buried down in the &lt;a href=&quot;https://guide.elm-lang.org/interop/ports.html#notes&quot;&gt;Notes section&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Definitely do not try to make a port for every JS function you need. You may really like Elm and want to do everything in Elm no matter the cost, but ports are not designed for that. Instead, focus on questions like “who owns the state?” and use one or two ports to send messages back and forth.&lt;/p&gt; &lt;/blockquote&gt; &lt;div style=&quot;margin: auto; width: 95%;&quot;&gt; &lt;figure style=&quot;display: block;&quot;&gt; &lt;img src=&quot;/assets/images/2021-05-02/bttf2-newspaper-glitched.png&quot; alt=&quot;Doc and Marty reading a newspaper&quot; /&gt; &lt;/figure&gt; &lt;/div&gt; &lt;p&gt;Okay, the Elm Guide and I may currently have our differences with regards to application architecture, but I am open to the idea of being completely wrong about how I have written ports.&lt;/p&gt; &lt;p&gt;The next question was “are there examples of how to have all messages running through one or two ports?”. These were not easy to find, but I was able to find two references that dealt with this question, and helped me get to the implementation I ended up running with:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The &lt;a href=&quot;https://package.elm-lang.org/packages/hendore/elm-port-message/latest/&quot;&gt;elm-port-message&lt;/a&gt; library&lt;/li&gt; &lt;li&gt;The elm-conf 2017 talk &lt;a href=&quot;https://www.youtube.com/watch?v=P3pL85n9_5s&quot;&gt;The Importance of Ports&lt;/a&gt; by &lt;a href=&quot;https://github.com/mrmurphy&quot;&gt;Murphy Randle&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;From elm-port-message, I stole the idea of a generic “tagged payload” to use for &lt;em&gt;all&lt;/em&gt; the kinds of messages that would flow in and out of Javascript.&lt;/p&gt; &lt;p&gt;From The Importance of Ports, I stole the idea of having all outbound port messages typed, and used in an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;update&lt;/code&gt;-style &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;case&lt;/code&gt; statement that resulted in a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Cmd&lt;/code&gt; being sent in a tagged payload through the single outbound application port.&lt;/p&gt; &lt;p&gt;The concept of having a single inbound and a single outbound port for message payloads also made me re-consider where code dealing with ports (and, to a lesser extent, subscriptions), should live in the codebase.&lt;/p&gt; &lt;p&gt;This resulted in a change of thinking about outbound ports themselves. From them just &lt;em&gt;belonging to&lt;/em&gt; or being &lt;em&gt;a part of&lt;/em&gt; a component (eg &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AudioPlayer.Ports&lt;/code&gt; above), to considering the Elm application boundary &lt;em&gt;itself&lt;/em&gt;, where outbound port messages are sent to Javascript, being its own major component in the application, containing its own top-level module and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Msg&lt;/code&gt; type:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/Update.elm&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;div class=&quot;language-elm highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Update&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Ports&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;alias&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;portsMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Ports&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Cmd&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parentMsgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Ports&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgForPorts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Ports&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgForPorts&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;You may have noticed that the view code for the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ControlPanel&lt;/code&gt;’s play/pause button in a previous section sends a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;portsMsg Ports.playMsg&lt;/code&gt; message when it is clicked. The code above is where that message, and others like it, end up being handled.&lt;/p&gt; &lt;p&gt;There is no model to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;update&lt;/code&gt; for these messages, nor parent message to keep track of: just a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Cmd&lt;/code&gt; to be sent to the Elm Runtime, whose generation is delegated to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ports.Cmd&lt;/code&gt; module:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/Ports/Cmd.elm&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;div class=&quot;language-elm highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;port&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Ports&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Cmd&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Encode&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Encode&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Ports&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Ports&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Payload&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Payload&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;port&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;outbound&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Cmd&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Cmd&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;PauseAudio&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;outbound&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Payload&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;withTag&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;PAUSE_AUDIO&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;PlayAudio&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;outbound&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Payload&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;withTag&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;PLAY_AUDIO&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;SkipToTrack&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trackNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Encode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;trackNumber&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Encode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trackNumber&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;payload&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;payload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Payload&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;withTaggedData&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;SKIP_TO_TRACK&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;outbound&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;payload&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Every typed &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ports.Msg&lt;/code&gt; sends a tagged &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Payload&lt;/code&gt;, with or without some &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;data&lt;/code&gt;, through a single &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;outbound&lt;/code&gt; port. For the tag name convention, I decided to use &lt;a href=&quot;https://redux.js.org/&quot;&gt;Redux&lt;/a&gt;’s original &lt;a href=&quot;https://redux.js.org/style-guide/style-guide#priority-c-rules-recommended&quot;&gt;action type naming convention of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;SCREAMING_SNAKE_CASE&quot;&lt;/code&gt;&lt;/a&gt; (Elm is &lt;a href=&quot;https://redux.js.org/understanding/history-and-design/prior-art#elm&quot;&gt;one of Redux’s inspirations&lt;/a&gt;, after all).&lt;/p&gt; &lt;p&gt;Code for the payload itself lives under &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ports.Payload&lt;/code&gt;, and specifies a unified way of encoding and decoding a JSON &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Value&lt;/code&gt; for this purpose. Rather than send any raw Elm types as parameters to ports (eg the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Int&lt;/code&gt; in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;port skipToTrack : Int -&amp;gt; Cmd msg&lt;/code&gt;), we specify that &lt;em&gt;only&lt;/em&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Value&lt;/code&gt;s can be sent and received via ports (which can also be enforced by the &lt;a href=&quot;https://package.elm-lang.org/packages/sparksp/elm-review-ports/1.3.0/NoUnsafePorts&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NoUnsafePorts&lt;/code&gt;&lt;/a&gt; rule in &lt;a href=&quot;https://package.elm-lang.org/packages/sparksp/elm-review-ports/latest&quot;&gt;elm-review-ports&lt;/a&gt;):&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/Ports/Payload.elm&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;div class=&quot;language-elm highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Ports&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Payload&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Payload&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;withTag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;withTaggedData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Decode&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Decode&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Decoder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Decode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Pipeline&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Pipeline&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Encode&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Encode&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;alias&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Payload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Payload&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Decode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decodeValue&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;decoder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;withDefault&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Payload&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Encode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;withTag&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;withTag&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;withTaggedData&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Encode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;withTaggedData&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;withTaggedData&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Encode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;tag&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Encode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;data&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- PRIVATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;decoder&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Decoder&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Payload&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;decoder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Decode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;succeed&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Payload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Pipeline&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;required&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;tag&quot;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Decode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Pipeline&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;optional&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;data&quot;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Decode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Encode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;null&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Now that we have outbound messages going out to Javascript via a single port, the Javascript code needs to change so that it can deal with these different types of tagged payloads, which is where we lean on our old friend &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/switch&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;switch&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/js/soundCloudWidget.js&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Widget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;track-player&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Widget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;READY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;initOutboundPortMessageHandling&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;initOutboundPortMessageHandling&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;outbound&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;subscribe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;PLAY_AUDIO&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;play&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;PAUSE_AUDIO&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pause&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;SKIP_TO_TRACK&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;skip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trackNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div style=&quot;margin: auto; width: 95%;&quot;&gt; &lt;figure style=&quot;display: block;&quot;&gt; &lt;img src=&quot;/assets/images/2021-05-02/biffs-gang-glitched.png&quot; alt=&quot;Biff&apos;s gang&quot; /&gt; &lt;/figure&gt; &lt;/div&gt; &lt;p&gt;So, that’s the first half of the story: Elm to Javascript. What about messages going from Javascript to Elm? Let’s follow the journey, starting from Javascript, focusing on the events generated from the SoundCloud widget:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/js/soundCloudWidget.js&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Widget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;track-player&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Widget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;READY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bindSoundCloudWidgetEvents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bindSoundCloudWidgetEvents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Widget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PLAY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sound&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inbound&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;AUDIO_PLAYING&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sound&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;loadedProgress&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Widget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PAUSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sound&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inbound&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;AUDIO_PAUSED&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sound&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currentPosition&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Widget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;FINISH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inbound&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;NEXT_TRACK_NUMBER_REQUESTED&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;There’s not too much difference in the code here compared to the previous implementation, aside from:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;minor code re-structuring to put all the SoundCloud widget bindings together&lt;/li&gt; &lt;li&gt;all messages now being sent via a single &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;inbound&lt;/code&gt; port&lt;/li&gt; &lt;li&gt;like the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;outbound&lt;/code&gt; messages, all &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;inbound&lt;/code&gt; messages are &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Payload&lt;/code&gt;-shaped objects, rather than raw values&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Of particular note, at least for me, is the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;NEXT_TRACK_NUMBER_REQUESTED&quot;&lt;/code&gt; payload, which can contain only a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tag&lt;/code&gt; and no &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;data&lt;/code&gt; information, and still be valid: essentially just a message telling Elm that “the next track number has been requested”.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;I think that sending this &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;data&lt;/code&gt;-less payload object is a preferable option to the original implementation, which explicitly required needing to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;send&lt;/code&gt; a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;null&lt;/code&gt; back to Elm, when the objective was really to call &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;send&lt;/code&gt; &lt;em&gt;without&lt;/em&gt; any parameters:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;What I wanted to do in the original code:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;JS&lt;/em&gt;:&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;initTrackFinished&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Widget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;FINISH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Calling `send` on a port with no parameters is invalid, apparently...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nextTrackNumberRequested&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/div&gt; &lt;p&gt;&lt;em&gt;Elm&lt;/em&gt;:&lt;/p&gt; &lt;div class=&quot;language-elm highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;k&quot;&gt;port&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nextTrackNumberRequested&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Sub&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/div&gt; &lt;p&gt;The port receives no parameters, so having &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;()&lt;/code&gt; as the parameter is correct, right…? (Spoiler: Nope.)&lt;/p&gt; &lt;p&gt;&lt;strong&gt;What I ended up needing to do to make it go:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;JS&lt;/em&gt;:&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;initTrackFinished&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Widget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;FINISH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Needing to send an explicit `null` seems a bit strange to me...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nextTrackNumberRequested&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/div&gt; &lt;p&gt;The only documentation I could find regarding needing to do this was &lt;a href=&quot;https://stackoverflow.com/questions/41679386/elm-define-subscription-port-with-no-parameters&quot;&gt;this Stack Overflow answer&lt;/a&gt;, so this information would be a nice addition to the Elm Guide.&lt;/p&gt; &lt;p&gt;Anyway, using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Payload&lt;/code&gt;s means this issue is now irrelevant, so let’s get back to Elm-land to see how messages coming through on the single &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;inbound&lt;/code&gt; port are being handled.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;inbound&lt;/code&gt; port definition lives in the top-level &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ports&lt;/code&gt; module, making sure that knowledge about &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;port module&lt;/code&gt;s (and hence the world outside of the Elm) are kept solely to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ports&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ports.Cmd&lt;/code&gt; family of modules:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/Ports.elm&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;div class=&quot;language-elm highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;port&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Ports&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inbound&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Encode&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;port&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inbound&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Sub&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Since the different &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;inbound&lt;/code&gt; messages will only be relevant for specific parts of the application, code to handle subscriptions still lives as sub-modules of the components the messages are relevant to.&lt;/p&gt; &lt;p&gt;For example, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AudioPlayer&lt;/code&gt;-specific messages sent in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bindSoundCloudWidgetEvents&lt;/code&gt; function are handled in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AudioPlayer.Subscriptions&lt;/code&gt;:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/AudioPlayer/Subscriptions.elm&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;div class=&quot;language-elm highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Subscriptions&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;ParentMsgs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subscriptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Model&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Decode&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exposing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Ports&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;alias&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ParentMsgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayerMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;noOpMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subscriptions&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ParentMsgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Sub&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subscriptions&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parentMsgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Ports&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inbound&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handlePortMessage&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parentMsgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- PRIVATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;handlePortMessage&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ParentMsgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AudioPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;handlePortMessage&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayerMsg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;noOpMsg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audioPlayer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;payload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Ports&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decodePayload&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;payload&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;AUDIO_PAUSED&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- Handle &quot;AUDIO_PAUSED&quot; messages&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;AUDIO_PLAYING&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- Handle &quot;AUDIO_PLAYING&quot; messages&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;NEXT_TRACK_NUMBER_REQUESTED&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- Handle &quot;NEXT_TRACK_NUMBER_REQUESTED&quot; messages&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;noOpMsg&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Some notes about this module:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Although stating this might be obvious for some, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;handlePortMessage&lt;/code&gt; function is the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(Value -&amp;gt; msg)&lt;/code&gt; function in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;port inbound (Value -&amp;gt; msg) -&amp;gt; Sub msg&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;handlePortMessage&lt;/code&gt; receives the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;payload&lt;/code&gt; from Javascript-land, and performs some action depending on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tag&lt;/code&gt; value, details of which are not important here, but they are, of course, available in the codebase&lt;/li&gt; &lt;li&gt;Once it is known &lt;em&gt;how&lt;/em&gt; the inbound message is to be handled, the work to generate the subscription is delegated off to the centralised &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ports.inbound&lt;/code&gt; function&lt;/li&gt; &lt;/ul&gt; &lt;div style=&quot;margin: auto; width: 95%;&quot;&gt; &lt;figure style=&quot;display: block;&quot;&gt; &lt;img src=&quot;/assets/images/2021-05-02/flying-delorean-glitched.png&quot; alt=&quot;Flying DeLorean&quot; /&gt; &lt;/figure&gt; &lt;/div&gt; &lt;p&gt;So, while “where we’re going we did actually need ports”, I think that cutting down the number of those ports from 28 to 2 can be considered a win. I hope that the example above, and the 80sfy codebase, can at least serve as an example of how to do centralised port message sending if that is a path you are looking at going down for your own Elm application.&lt;/p&gt; &lt;h2 id=&quot;when-you-code-js-your-heart-dies&quot;&gt;When you code JS your heart dies&lt;/h2&gt; &lt;div style=&quot;margin: auto; width: 95%;&quot;&gt; &lt;figure style=&quot;display: block;&quot;&gt; &lt;img src=&quot;/assets/images/2021-05-02/your-heart-dies-glitched.png&quot; alt=&quot;When you grow up your heart dies&quot; /&gt; &lt;/figure&gt; &lt;/div&gt; &lt;p&gt;My developer helmet got many dents on it as I repeatedly ran into walls while coding up the Javascript side of the 80sfy application.&lt;/p&gt; &lt;p&gt;Some of these issues were due to browser peculiarities, or undocumented quirks of the &lt;a href=&quot;https://developers.soundcloud.com/docs/api/html5-widget&quot;&gt;SoundCloud Widget API&lt;/a&gt;, which I am wagering has probably not received much love in a while. But, since all these issues occurred in Javascript-land, it did, however unfairly, became the target of my frustration.&lt;/p&gt; &lt;p&gt;So, without further adieu, here is a random list of JS-land issues I came across and how they needed to be fixed, which will hopefully save you some time if you ever encounter similar issues.&lt;/p&gt; &lt;h3 id=&quot;soundcloud-iframe-loading-delays&quot;&gt;SoundCloud iframe loading delays&lt;/h3&gt; &lt;p&gt;In the 80sfy application, the first request that ends up being made to the SoundCloud widget is to return the list of its sound objects, so that list’s length can be sent back to Elm to form the basis of the shuffled playlist.&lt;/p&gt; &lt;p&gt;However, the SoundCloud iframe seems to require a little bit of time to initialise before it can get its sounds, so in order to avoid any &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;Uncaught Error: mediaPayload required.&quot;&lt;/code&gt; errors displaying in the browser JS console, I needed to introduce a one-time delay using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;setTimeout()&lt;/code&gt;&lt;/a&gt; before calling &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;scPlayer.getSounds()&lt;/code&gt;:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/js/soundCloudWidget.js&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;initAudioPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;volume&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getSounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sounds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inbound&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;PLAYLIST_LENGTH_FETCHED&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;3000&lt;/code&gt; millisecond delay was the value gleaned from trial and error: values less than this did not seem to be long enough to make the error go away.&lt;/p&gt; &lt;h3 id=&quot;firefox-blur-event-issues&quot;&gt;Firefox blur event issues&lt;/h3&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;setTimeout()&lt;/code&gt; ended up (bafflingly) being the solution to another completely different issue: this time related to &lt;a href=&quot;https://www.mozilla.org/en-US/firefox/&quot;&gt;Firefox&lt;/a&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/blur_event&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;blur&lt;/code&gt; events&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;In the 80sfy application, if you switch to another browser tab or window, which fires off a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;blur&lt;/code&gt; event, the GIFs stop playing, saving unneeded Giphy API calls when the application is not the centre of attention.&lt;/p&gt; &lt;p&gt;The issue is that, for Firefox &lt;em&gt;only&lt;/em&gt;, if you click the SoundCloud widget iframe, it looks like Firefox considers it a different browser window, and fires off a blur event, stopping the GIFs unexpectedly. Scouring the internet for the cause of this issue led to &lt;a href=&quot;https://gist.github.com/jaydson/1780598#gistcomment-2609301&quot;&gt;this Gist comment&lt;/a&gt;, where:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;For me, adding a 0 second timeout…made it work in Firefox. The problem seems to be that, at the time Firefox fires the blur event, it has not yet updated the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;document.activeElement&lt;/code&gt; [the iframe], so it evaluates to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;false&lt;/code&gt;.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;Trying that led to this code:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/js/videoPlayer.js&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;initWindowEventListeners&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;blur&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;activeElementId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;activeElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inbound&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;WINDOW_BLURRED&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;activeElementId&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;And…it worked. Same behaviour across browsers now. Go figure ¯\&lt;em&gt;(ツ)&lt;/em&gt;/¯&lt;/p&gt; &lt;div style=&quot;margin: auto; width: 95%;&quot;&gt; &lt;figure style=&quot;display: block;&quot;&gt; &lt;img src=&quot;/assets/images/2021-05-02/breakfast-club-group-glitched.png&quot; alt=&quot;The Breakfast Club&quot; /&gt; &lt;/figure&gt; &lt;/div&gt; &lt;h3 id=&quot;skipping-tracks-un-pauses-soundcloud-player&quot;&gt;Skipping tracks un-pauses SoundCloud player&lt;/h3&gt; &lt;p&gt;Regardless of whether the SoundCloud iframe widget is paused or not, if you choose to skip to the next track in the playlist, it starts playing.&lt;/p&gt; &lt;p&gt;This may be intended behaviour for the widget, but it was undesired behaviour for me: I wanted to be able to skip tracks while continuing to be in a paused state.&lt;/p&gt; &lt;p&gt;So, since the call to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;scPlayer.skip&lt;/code&gt; forcably &lt;em&gt;un-pauses&lt;/em&gt; the player, we need to check if the player was originally paused before the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;skip&lt;/code&gt; command was issued, and if so, keep the SoundCloud widget player paused by &lt;em&gt;re-pausing&lt;/em&gt; it:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/js/soundCloudWidget.js&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;initOutboundPortMessageHandling&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;outbound&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;subscribe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;SKIP_TO_TRACK&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Get player&apos;s original paused state&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isPaused&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paused&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;skip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trackNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paused&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// *re-pause* player if it was originally paused but got *un-paused*&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// by the above call to `scPlayer.skip`.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pause&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;only-tell-elm-about-real-pause-events&quot;&gt;Only tell Elm about “real” pause events&lt;/h3&gt; &lt;p&gt;The “re-pausing” problem above caused a bit of a cascade of issues back into Elm-land.&lt;/p&gt; &lt;p&gt;There is code that binds to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SC.Widget.Events.PAUSE&lt;/code&gt; event, which sends a message to an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;inbound&lt;/code&gt; port to let Elm know that the SoundCloud player has been paused. The problem is that any “forced re-pausing” should not be considered a “real” pause event for Elm notification purposes.&lt;/p&gt; &lt;p&gt;So, the issue now is how can we intercept and interrogate a SoundCloud &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sound&lt;/code&gt; object in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PAUSE&lt;/code&gt; event callback to make sure that Elm only gets a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;AUDIO_PAUSED&quot;&lt;/code&gt; message when a “real” pause occurs?&lt;/p&gt; &lt;p&gt;The first thing we can do is something similar to the handling in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;SKIP_TO_TRACK&quot;&lt;/code&gt; message, and only send the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;AUDIO_PAUSED&quot;&lt;/code&gt; message when the player has been &lt;em&gt;actively&lt;/em&gt; paused:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/js/soundCloudWidget.js&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bindSoundCloudWidgetEvents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Widget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PAUSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sound&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isPaused&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paused&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paused&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inbound&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;AUDIO_PAUSED&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sound&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currentPosition&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;This code works as expected for track skips that happen while a track is playing (the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;paused&lt;/code&gt; value above will be &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;false&lt;/code&gt; when you ask if &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;scPlayer.isPaused&lt;/code&gt; while it is playing), but not when the player is in a paused state and a track is skipped (resulting in the forced re-pause), since that will still count as a “pause”! Argh!&lt;/p&gt; &lt;p&gt;So, what needs to be done here is add a guard clause to check the state of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sound.loadedProgress&lt;/code&gt;. If it is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0&lt;/code&gt;, that means that a “forced re-pause” has occurred after a track skip has happened to a new track, which has not started playing yet, and hence has not recorded any progression:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/js/soundCloudWidget.js&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bindSoundCloudWidgetEvents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Widget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PAUSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sound&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sound&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;loadedProgress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isPaused&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paused&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paused&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inbound&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;AUDIO_PAUSED&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sound&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currentPosition&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;div style=&quot;margin: auto; width: 95%;&quot;&gt; &lt;figure style=&quot;display: block;&quot;&gt; &lt;img src=&quot;/assets/images/2021-05-02/breakfast-club-fist-pump-glitched.png&quot; alt=&quot;Breakfast Club fist pump&quot; /&gt; &lt;/figure&gt; &lt;/div&gt; &lt;p&gt;Does all this sound confusing? It was! Please learn from my trial and error, and I hope you save yourself some time if you encounter similar issues!&lt;/p&gt; &lt;h2 id=&quot;all-this-code-will-be-lost-in-time-like-tears-in-rain&quot;&gt;All this code will be lost in time, like tears in rain&lt;/h2&gt; &lt;div style=&quot;margin: auto; width: 95%;&quot;&gt; &lt;figure style=&quot;display: block;&quot;&gt; &lt;img src=&quot;/assets/images/2021-05-02/tears-in-rain-glitched.png&quot; alt=&quot;All these moments will be lost in time. Like tears in rain.&quot; /&gt; &lt;/figure&gt; &lt;/div&gt; &lt;p&gt;I spent more time than I intended on architecting, refactoring, re-writing, and polishing this application, but I feel like during this journey I learned significantly more about Elm than I had known before.&lt;/p&gt; &lt;p&gt;It represents a conscientiously-written codebase to me now, but in the future, who knows? Maybe I will come around to the Elm Guide’s way of thinking and abandon my stubborn ideas about application structure, or maybe there is some food for thought in here for other Elm developers (reach out and let me know!).&lt;/p&gt; &lt;p&gt;Anyway, it’s just an application that plays synthwave sounds to animated GIFs, man. Grab an &lt;a href=&quot;https://drinkarizona.com/collections/drinks&quot;&gt;ice tea&lt;/a&gt;, don’t think about it too hard, and just &lt;a href=&quot;https://www.paulfioravanti.com/80sfy/&quot;&gt;ｒｅｌａｘ&lt;/a&gt;.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;For anyone who is curious about the glitched images, I used &lt;a href=&quot;https://photomosh.com/&quot;&gt;Photo Mosh&lt;/a&gt; to initially add scanlines and some other effects, and then &lt;a href=&quot;https://snorpey.github.io/jpg-glitch/&quot;&gt;Image Glitch Tool&lt;/a&gt; for the glitching.&lt;/p&gt; &lt;/blockquote&gt;</content><author><name>Paul Fioravanti</name><email>paul@paulfioravanti.com</email><uri>https://www.paulfioravanti.com</uri></author><category term="elm"/><category term="synthwave"/><category term="retrowave"/><category term="80s"/><category term="functional-programming"/><category term="soundcloud"/><category term="giphy"/><summary type="html">Tech moves pretty fast. If you don&apos;t stop and do a side project once in a while, you could miss it.</summary></entry><entry><title type="html">Test-Driven Fairy Tale</title><link href="https://www.paulfioravanti.com/blog/test-driven-fairy-tale/" rel="alternate" type="text/html" title="Test-Driven Fairy Tale"/><published>2021-02-20T21:30:00+11:00</published><updated>2021-02-20T21:30:00+11:00</updated><id>https://www.paulfioravanti.com/blog/test-driven-fairy-tale</id><content type="html" xml:base="https://www.paulfioravanti.com/blog/test-driven-fairy-tale/">&lt;blockquote&gt; &lt;p&gt;&lt;em&gt;This story takes place when pigs spoke rhyme&lt;/em&gt;&lt;br /&gt; &lt;em&gt;And monkeys chewed tobacco,&lt;/em&gt;&lt;br /&gt; &lt;em&gt;And hens took snuff to make them tough,&lt;/em&gt;&lt;br /&gt; &lt;em&gt;And ducks went quack, quack, quack, O!&lt;/em&gt;&lt;br /&gt;&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;Have you ever told a story with your code?&lt;/p&gt; &lt;p&gt;No, I don’t mean boring &lt;em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/User_story&quot;&gt;user stories&lt;/a&gt;&lt;/em&gt;, I mean real, &lt;em&gt;&lt;a href=&quot;https://www.collinsdictionary.com/dictionary/english/make-believe&quot;&gt;make-believe&lt;/a&gt;&lt;/em&gt; stories!&lt;/p&gt; &lt;p&gt;The story of &lt;a href=&quot;https://en.wikipedia.org/wiki/The_Three_Little_Pigs&quot;&gt;The Three Little Pigs&lt;/a&gt; is a real story. A &lt;a href=&quot;https://en.wikipedia.org/wiki/Fable&quot;&gt;fable&lt;/a&gt;, even!&lt;/p&gt; &lt;div style=&quot;display: block; text-align: center;&quot;&gt; &lt;figure style=&quot;display: block; margin: 1em;&quot;&gt; &lt;img src=&quot;/assets/images/2021-02-20/three-little-pigs.png&quot; alt=&quot;The Three Little Pigs&quot; /&gt; &lt;figcaption style=&quot;text-align: center;&quot;&gt; Illustration by &lt;a href=&quot;https://www.leesheppard.com&quot;&gt;Lee Sheppard&lt;/a&gt;. &lt;/figcaption&gt; &lt;/figure&gt; &lt;/div&gt; &lt;p&gt;It uses the &lt;a href=&quot;https://en.wikipedia.org/wiki/Rule_of_three_(writing)&quot;&gt;rule of three&lt;/a&gt; to tell a simple story of pigs versus a wolf: each encounter sets up a scenario, which gets executed, results in a pay-off that affects the state of the story, and moves the plot forward.&lt;/p&gt; &lt;p&gt;But, can it be coded? Can we then use its test suite to actually tell the story? I decided to try and find out!&lt;/p&gt; &lt;p&gt;Nice stories deserve to be told using nice programming languages. So, I chose &lt;a href=&quot;https://www.ruby-lang.org/en/&quot;&gt;Ruby&lt;/a&gt;, since &lt;a href=&quot;https://en.wikipedia.org/wiki/Yukihiro_Matsumoto&quot;&gt;Matz&lt;/a&gt;, Ruby’s creator, &lt;a href=&quot;https://en.wiktionary.org/wiki/MINASWAN&quot;&gt;seems like a nice person&lt;/a&gt;. For testing, I chose &lt;a href=&quot;https://rspec.info/&quot;&gt;RSpec&lt;/a&gt;, a Ruby tool that uses expressive language to write tests: just what I needed to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;describe&lt;/code&gt; the progression of the story.&lt;/p&gt; &lt;p&gt;You can find the Ruby code for my interpretation of the story at &lt;a href=&quot;https://github.com/paulfioravanti/three_little_pigs&quot;&gt;The Three Little Pigs Github repository&lt;/a&gt;, but nothing beats having someone read you a story.&lt;/p&gt; &lt;p&gt;So, gather round your monitors and devices, and let’s re-visit this classic fairy tale together, which begins Once Upon A Time…&lt;/p&gt; &lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube-nocookie.com/embed/4NrU1YMd1qE&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt; &lt;/iframe&gt;</content><author><name>Paul Fioravanti</name><email>paul@paulfioravanti.com</email><uri>https://www.paulfioravanti.com</uri></author><category term="ruby"/><category term="rspec"/><category term="minitest"/><category term="testing"/><summary type="html">Will the Big Bad Wolf thwart The Three Little Pigs from getting a passing test suite?</summary></entry><entry><title type="html">Stenography Numbers on a Georgi</title><link href="https://www.paulfioravanti.com/blog/steno-numbers-georgi/" rel="alternate" type="text/html" title="Stenography Numbers on a Georgi"/><published>2021-01-17T18:15:00+11:00</published><updated>2021-01-17T18:15:00+11:00</updated><id>https://www.paulfioravanti.com/blog/steno-numbers-georgi</id><content type="html" xml:base="https://www.paulfioravanti.com/blog/steno-numbers-georgi/">&lt;p&gt;As a present to myself for &lt;a href=&quot;https://www.paulfioravanti.com/blog/completed-typey-type/&quot;&gt;“completing” Typey Type&lt;/a&gt;, I picked up a &lt;a href=&quot;https://www.gboards.ca/product/georgi&quot;&gt;Georgi&lt;/a&gt; keyboard, and since mid-July 2020, I have been using it as my daily driver for practising &lt;a href=&quot;http://www.openstenoproject.org/&quot;&gt;Plover stenography&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;The Georgi’s &lt;a href=&quot;http://www.kailh.com/en/Products/Ks/CS/&quot;&gt;Kailh Choc Linear&lt;/a&gt; key switches with &lt;a href=&quot;https://www.spritdesigns.com/product-page/choc&quot;&gt;12g ultra light springs&lt;/a&gt; make &lt;a href=&quot;https://www.artofchording.com/introduction/how-steno-works.html#chords&quot;&gt;chording&lt;/a&gt; a breeze. However, its compact form factor means it has a set of number (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#&lt;/code&gt;) keys in the thumb clusters of both halves of the keyboard, rather than a &lt;a href=&quot;https://sites.google.com/site/learnplover/lesson-8-numbers#TOC-The-Number-Bar&quot;&gt;number bar&lt;/a&gt; (or row of keys that effectively substitute for a number bar if you are using a traditional keyboard, rather than a &lt;a href=&quot;https://en.wikipedia.org/wiki/Stenotype&quot;&gt;stenotype machine&lt;/a&gt;).&lt;/p&gt; &lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;/assets/images/2021-01-17/number-bar.png&quot; alt=&quot;img number-bar&quot; style=&quot;margin-right: 0.5rem; width: 45%;&quot; /&gt; &lt;img src=&quot;/assets/images/2021-01-17/number-keys.png&quot; alt=&quot;img number-keys&quot; style=&quot;margin-left: 0.5rem; width: 45%&quot; /&gt;&lt;/p&gt; &lt;p&gt;This change does not interfere with the majority of how anyone would use a stenographic keyboard, since, in general, we tend to type numbers significantly less frequently than letters and words. However, if you do use numbers often, then some &lt;a href=&quot;https://en.wikipedia.org/wiki/Muscle_memory&quot;&gt;muscle memory&lt;/a&gt; re-wiring will be in order to adapt to the number keys.&lt;/p&gt; &lt;p&gt;In order to help with memorisation, specifically around which &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#&lt;/code&gt; key to press for a given &lt;a href=&quot;https://sites.google.com/site/learnplover/glossary&quot;&gt;outline&lt;/a&gt;, I created a set of images indicating the chords pressed for each number from 0-99, and the set of hundreds numbers from 100-900, with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#&lt;/code&gt; key that &lt;em&gt;felt right for me&lt;/em&gt;.&lt;/p&gt; &lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;/assets/images/2021-01-17/georgi-numbers-small.gif&quot; alt=&quot;img georgi-numbers-small&quot; /&gt;&lt;/p&gt; &lt;p&gt;You can download a PDF containing all the images in the animated GIF above at the following link:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://www.dropbox.com/s/5d7n1hix84mkrlz/georgi-numbers.pdf?dl=1&quot;&gt;georgi-numbers.pdf&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Also, here are some compare and contrast videos of stroking Plover steno numbers on both a Georgi and an &lt;a href=&quot;https://ergodox-ez.com/&quot;&gt;Ergodox EZ&lt;/a&gt; (which I originally &lt;a href=&quot;https://www.paulfioravanti.com/blog/starting-stenography-ergodox/&quot;&gt;started learning stenography&lt;/a&gt; on):&lt;/p&gt; &lt;div style=&quot;display: flex;&quot;&gt; &lt;div style=&quot;width: 50%; margin-left: 0.5rem;&quot;&gt; &lt;!-- Courtesy of embedresponsively.com //--&gt; &lt;div class=&quot;responsive-video-container&quot;&gt; &lt;iframe src=&quot;https://www.youtube-nocookie.com/embed/Xz0aqwlIHvg&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt; &lt;/div&gt; &lt;/div&gt; &lt;div style=&quot;width: 50%; margin-left: 0.5rem;&quot;&gt; &lt;!-- Courtesy of embedresponsively.com //--&gt; &lt;div class=&quot;responsive-video-container&quot;&gt; &lt;iframe src=&quot;https://www.youtube-nocookie.com/embed/Y1zQEEmivxc&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;blockquote&gt; &lt;p&gt;I am still learning, so I am definitely not fast. Also, these videos are not representative of my current accuracy: it took me tens of takes to record each video until I was able to not make any major mistakes (and even then, they are not perfect runs).&lt;/p&gt; &lt;/blockquote&gt; &lt;h2 id=&quot;rules&quot;&gt;Rules&lt;/h2&gt; &lt;p&gt;After discovering which number chords “felt right”, I tried to see if I could summarise (read: reverse-engineer) my choices into a set of &lt;em&gt;subjective&lt;/em&gt; rules. So, here is what I came up with:&lt;/p&gt; &lt;h3 id=&quot;general-rules&quot;&gt;General Rules&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;Always use two hands to stroke the outline, even if it is possible to use only one hand. I do not want to have to remember whether a chord can be stroked with one hand or not, so just use two hands by default.&lt;/li&gt; &lt;li&gt; &lt;p&gt;When the number outline is in &lt;a href=&quot;https://sites.google.com/site/learnplover/lesson-2-steno-order#TOC-Steno-Order&quot;&gt;steno order&lt;/a&gt; (ie for a two-digit number, &lt;strong&gt;the first digit value is less than the last digit value&lt;/strong&gt;: 13, 48 etc), the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#&lt;/code&gt; key used should be on the &lt;strong&gt;opposite side&lt;/strong&gt; of the keyboard from the key of the &lt;strong&gt;last digit&lt;/strong&gt; stroked.&lt;/p&gt; &lt;p&gt;So, for 13, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;P&lt;/code&gt; key for “3” is on the left half of the keyboard, so the right &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#&lt;/code&gt; key should be used. Likewise, for 48, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-L&lt;/code&gt; key for “8” is on the right half of the keyboard, so the left &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#&lt;/code&gt; key should be used.&lt;/p&gt; &lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;/assets/images/2021-01-17/013-tiny.png&quot; alt=&quot;img 013-tiny&quot; style=&quot;margin-right: 0.5rem;&quot; /&gt; &lt;img src=&quot;/assets/images/2021-01-17/048-tiny.png&quot; alt=&quot;img 048-tiny&quot; style=&quot;margin-left: 0.5rem;&quot; /&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;When the number outline is &lt;em&gt;not&lt;/em&gt; in steno order (ie for a two-digit number, &lt;strong&gt;the first digit value is greater than the last digit value&lt;/strong&gt;: 31, 84 etc), then the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#&lt;/code&gt; key used is &lt;strong&gt;always on the left&lt;/strong&gt; since the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EU&lt;/code&gt; &lt;a href=&quot;https://sites.google.com/site/learnplover/lesson-2-steno-order#TOC-Inversion&quot;&gt;inversion&lt;/a&gt; chord must be stroked, and a thumb cannot comfortably stroke all three keys in the thumb cluster at once.&lt;/p&gt; &lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;/assets/images/2021-01-17/031-tiny.png&quot; alt=&quot;img 031-tiny&quot; style=&quot;margin-right: 0.5rem;&quot; /&gt; &lt;img src=&quot;/assets/images/2021-01-17/084-tiny.png&quot; alt=&quot;img 084-tiny&quot; style=&quot;margin-left: 0.5rem;&quot; /&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt;The thumb cluster rule: where a number outline requires non-&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#&lt;/code&gt; keys in the thumb clusters (ie &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;A&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;O&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;E&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;U&lt;/code&gt;), wherever possible, aim to &lt;em&gt;only&lt;/em&gt; use your thumbs to stroke those keys. This generally limits you to stroking the following adjacent keys for number outlines: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#A&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AO&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EU&lt;/code&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;exceptions&quot;&gt;Exceptions&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;When the number outline is in steno order, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#&lt;/code&gt; key used should be on the &lt;strong&gt;opposite side&lt;/strong&gt; of the keyboard from the &lt;strong&gt;first digit&lt;/strong&gt; stroked if that digit is: &lt;ol&gt; &lt;li&gt; &lt;p&gt;composed of two repeated instances of the same digit (22, 66 etc), requiring the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-D&lt;/code&gt; key&lt;/p&gt; &lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;/assets/images/2021-01-17/022-tiny.png&quot; alt=&quot;img 022-tiny&quot; style=&quot;margin-right: 0.5rem;&quot; /&gt; &lt;img src=&quot;/assets/images/2021-01-17/066-tiny.png&quot; alt=&quot;img 066-tiny&quot; style=&quot;margin-left: 0.5rem;&quot; /&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;a multiple of 100 under 1000 (100, 700 etc), requiring the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-Z&lt;/code&gt; key&lt;/p&gt; &lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;/assets/images/2021-01-17/100-tiny.png&quot; alt=&quot;img 100-tiny&quot; style=&quot;margin-right: 0.5rem;&quot; /&gt; &lt;img src=&quot;/assets/images/2021-01-17/700-tiny.png&quot; alt=&quot;img 700-tiny&quot; style=&quot;margin-left: 0.5rem;&quot; /&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ol&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;For the thumb cluster rule above, there are unavoidable exceptions for numbers 60, 70, 80, and 90, where the left &lt;a href=&quot;https://en.wikipedia.org/wiki/Ring_finger&quot;&gt;ring finger&lt;/a&gt; needs to be brought down into the left thumb cluster for stroking the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#&lt;/code&gt; key in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#O&lt;/code&gt; chord.&lt;/p&gt; &lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;/assets/images/2021-01-17/060-tiny.png&quot; alt=&quot;img 060-tiny&quot; style=&quot;margin-right: 0.5rem;&quot; /&gt; &lt;img src=&quot;/assets/images/2021-01-17/090-tiny.png&quot; alt=&quot;img 090-tiny&quot; style=&quot;margin-left: 0.5rem;&quot; /&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Since stroking the number 900 requires the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-T&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-Z&lt;/code&gt; keys, and they are diagonal from each other, it is impossible to stroke naturally using standard steno hand positions. Therefore, stroking the outline for 900 requires a &lt;a href=&quot;https://www.artofchording.com/layout/d-and-z.html#the-d-and-z-keys&quot;&gt;“Philly shift”&lt;/a&gt;, where your right ring finger strokes the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-T&lt;/code&gt; key, rather than your right &lt;a href=&quot;https://en.wikipedia.org/wiki/Little_finger&quot;&gt;little finger&lt;/a&gt;.&lt;/p&gt; &lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;/assets/images/2021-01-17/900-tiny.png&quot; alt=&quot;img 900-tiny&quot; style=&quot;margin-left: 0.5rem;&quot; /&gt;&lt;/p&gt; &lt;p&gt;Plover does offer the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#EUT&lt;/code&gt; outline to avoid needing to perform a Philly shift, but I do not find the Philly shift &lt;em&gt;that&lt;/em&gt; awkward to stroke given that the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#&lt;/code&gt; keys are already moving my hands out of standard steno positions anyway, and I want keep building muscle memory on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-Z&lt;/code&gt; pattern and not have to remember this one potential exception to the 100s rule.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;all-that-just-for-numbers&quot;&gt;All that just for numbers?&lt;/h2&gt; &lt;p&gt;You may be reeling in horror at the need to remember so much just to chord two-digit numbers, and vow to just stroke digits individually, or temporarily switch to QWERTY mode to type numbers. I certainly could not argue with you!&lt;/p&gt; &lt;p&gt;But, I personally find this set of number outlines comfortable enough to stroke, and plan to continue giving them a go moving forward. If you are also a student, or a practitioner, of Plover stenography, then I hope that the materials in this blog post serve as some reference, or at least as some amusement.&lt;/p&gt; &lt;p&gt;If you do end up using the chords, or have any opinions on rule variations that you think would work better, please reach out to me or leave a comment!&lt;/p&gt;</content><author><name>Paul Fioravanti</name><email>paul@paulfioravanti.com</email><uri>https://www.paulfioravanti.com</uri></author><category term="stenography"/><category term="georgi"/><category term="mechanical-keyboards"/><summary type="html">Adapt your steno habits from using a number bar to a set of thumb cluster number keys.</summary></entry><entry><title type="html">Your Code: Episode I - The Phantom Repository</title><link href="https://www.paulfioravanti.com/blog/your-code-episode-one/" rel="alternate" type="text/html" title="Your Code: Episode I - The Phantom Repository"/><published>2021-01-06T17:25:00+11:00</published><updated>2021-01-06T17:25:00+11:00</updated><id>https://www.paulfioravanti.com/blog/your-code-episode-one</id><content type="html" xml:base="https://www.paulfioravanti.com/blog/your-code-episode-one/">&lt;p&gt;Where is your beginner’s code? You know, the code you wrote when you were first learning how to program.&lt;/p&gt; &lt;p&gt;If you started your developer journey after the advent of social coding sites like &lt;a href=&quot;https://github.com/&quot;&gt;GitHub&lt;/a&gt;, chances are probably good that you learned to &lt;a href=&quot;https://git-scm.com/docs/git-push&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;push&lt;/code&gt;&lt;/a&gt; early and often to your public &lt;a href=&quot;https://en.wikipedia.org/wiki/Repository_(version_control)&quot;&gt;repositories&lt;/a&gt; (that I would wager you use as part of your programming portfolio), and so you likely have a complete history of all the coding you have ever attempted.&lt;/p&gt; &lt;p&gt;But what about if you are a bit older, and you either taught yourself, or learned software engineering at one of those &lt;a href=&quot;https://www.merriam-webster.com/dictionary/highfalutin&quot;&gt;highfalutin&lt;/a&gt; tertiary education facilities like a university (think &lt;a href=&quot;https://en.wikipedia.org/wiki/Coding_bootcamp&quot;&gt;coding bootcamp&lt;/a&gt; but it takes &lt;em&gt;years&lt;/em&gt; to graduate)? Is your beginner’s code resting in &lt;a href=&quot;https://www.merriam-webster.com/dictionary/stasis&quot;&gt;stasis&lt;/a&gt; on some hard drive in your &lt;a href=&quot;https://en.wiktionary.org/wiki/junk_drawer&quot;&gt;junk drawer&lt;/a&gt;? Or, maybe just lost to the &lt;a href=&quot;https://en.wikipedia.org/wiki/Sands_of_time_(idiom)&quot;&gt;sands of time&lt;/a&gt;…?&lt;/p&gt; &lt;p&gt;If you do not know, go look for it. If you find it, see if it still runs. If it works, make it public.&lt;/p&gt; &lt;h2 id=&quot;you-will-be-a-jedi-i-promise&quot;&gt;You Will Be A Jedi. I Promise.&lt;/h2&gt; &lt;p&gt;Looking through your beginner’s code may make current-you cringe, but much like the old photo albums containing pictures of you with that goofy smile and crazy hairstyle that will &lt;em&gt;surely&lt;/em&gt; never come back into fashion again, that code is a part of the story that made you the developer you are today. Be proud of it!&lt;/p&gt; &lt;p&gt;Releasing it publicly can contribute to our shared history of how coding was taught and learned: what languages were in vogue for teaching programming, and what kinds of exercises were used to help students grasp programming concepts.&lt;/p&gt; &lt;p&gt;Furthermore, junior developers who are just starting out on their journey, doing it tough, and probably battling &lt;a href=&quot;https://en.wikipedia.org/wiki/Impostor_syndrome&quot;&gt;impostor syndrome&lt;/a&gt;, can look at your &lt;a href=&quot;https://en.wiktionary.org/wiki/tire_fire&quot;&gt;tire fires&lt;/a&gt; and feel a bit better by being shown they should not expect to write great code immediately.&lt;/p&gt; &lt;h2 id=&quot;theres-always-a-bigger-fish&quot;&gt;There’s Always A Bigger Fish&lt;/h2&gt; &lt;p&gt;In a previous post, &lt;em&gt;&lt;a href=&quot;https://www.paulfioravanti.com/blog/oi-kochi/&quot;&gt;Oi! Kochi: Japanese Feature Phone-driven Development&lt;/a&gt;&lt;/em&gt;, I made my first web site, what I would call my pre-beginner’s code, public. So, to complement that, here is my beginner’s code from when I was studying at the &lt;a href=&quot;https://www.unisa.edu.au/&quot;&gt;University of South Australia&lt;/a&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/paulfioravanti/lmif&quot;&gt;LMIF&lt;/a&gt; (LMIF was the course program code)&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;now-this-is-podracing&quot;&gt;Now, This Is Podracing!&lt;/h2&gt; &lt;p&gt;I enjoyed doing the minor repairs and documentation required to get this codebase in a releasable state.&lt;/p&gt; &lt;p&gt;Re-visiting the assignments brought back fond memories I have from my time doing this course: I had excellent professors and lecturers, some interesting assignments, and great classmate team members on my group assignments, some of whom are still friends to this day.&lt;/p&gt; &lt;p&gt;Stepping back and re-looking at it again without the nostalgic elements, though, there are a couple of observations I can make about the course and myself:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The course went &lt;a href=&quot;https://dictionary.cambridge.org/dictionary/english/all-in&quot;&gt;all-in&lt;/a&gt; on &lt;a href=&quot;https://www.java.com/&quot;&gt;Java&lt;/a&gt; (&lt;a href=&quot;https://en.wikipedia.org/wiki/Java_version_history#J2SE_1.4&quot;&gt;J2SE 1.4&lt;/a&gt;). Nearly all programming done for any subject that required it was in Java. The single non-Java programming course I had was named “C++ &lt;em&gt;for Java Developers&lt;/em&gt;”, in case it needed to be made any clearer where the course’s priorities were. In hindsight, it would have been nice to have been exposed to a dynamic language like &lt;a href=&quot;https://www.ruby-lang.org/en/&quot;&gt;Ruby&lt;/a&gt; or &lt;a href=&quot;https://www.python.org/&quot;&gt;Python&lt;/a&gt; as well, but I understand why they just decided to focus on one primary language, that at the time look poised to take over the world (and it kind of did, at least for &lt;a href=&quot;https://en.wikipedia.org/wiki/Enterprise_software&quot;&gt;enterprise software&lt;/a&gt;, but when was the last time you used a &lt;a href=&quot;https://en.wikipedia.org/wiki/Java_applet&quot;&gt;Java applet&lt;/a&gt; on the web?).&lt;/li&gt; &lt;li&gt;It is clear to me that even by the end of the course, I had still not &lt;em&gt;really&lt;/em&gt; gained an intuitive grasp of &lt;a href=&quot;https://en.wikipedia.org/wiki/Object-oriented_programming&quot;&gt;Object-orientated programming&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Subroutine&quot;&gt;functions&lt;/a&gt;, or &lt;a href=&quot;https://en.wikipedia.org/wiki/Code_reuse&quot;&gt;code reuse&lt;/a&gt; (1000 line functions in a single class with lots of repetitive code is not something I would do or encourage today). But, hey, I passed the subjects, so…&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;are-you-an-angel&quot;&gt;Are You An Angel?&lt;/h2&gt; &lt;p&gt;If you have been diligently documenting your developer story as you have been creating code, you definitely have more foresight than I did. But, for those like me who were missing chapters from their story, it is never too late to retrieve those pages!&lt;/p&gt; &lt;p&gt;Breath some life into your old code and get it out into the world!&lt;/p&gt;</content><author><name>Paul Fioravanti</name><email>paul@paulfioravanti.com</email><uri>https://www.paulfioravanti.com</uri></author><category term="beginner"/><category term="learning"/><category term="java"/><category term="c-plus-plus"/><category term="cpp"/><summary type="html">Every Developer Learns To Program. Every Journey Has A First Step. Every Coding Saga Has A Beginning.</summary></entry><entry><title type="html">Organise a Meetup</title><link href="https://www.paulfioravanti.com/blog/organise-meetups/" rel="alternate" type="text/html" title="Organise a Meetup"/><published>2021-01-04T10:00:00+11:00</published><updated>2021-01-04T10:00:00+11:00</updated><id>https://www.paulfioravanti.com/blog/organise-meetups</id><content type="html" xml:base="https://www.paulfioravanti.com/blog/organise-meetups/">&lt;p&gt;In a previous post, &lt;em&gt;&lt;a href=&quot;https://www.paulfioravanti.com/blog/speak-at-meetups/&quot;&gt;Speak at a Meetup&lt;/a&gt;&lt;/em&gt;, I attempted to convince you that actively participating and delivering talks at your local technical meetup is A Good Thing that you definitely Want To Try.&lt;/p&gt; &lt;p&gt;I will assume the pitch was a :sparkles: great success :sparkles:, and you have been attending, participating, and even speaking at meetups; receiving accolades, and the admiration of your peers.&lt;/p&gt; &lt;p&gt;Would you consider stretching your meetup wings a bit further, give back to your community, or even just get some event management experience?&lt;/p&gt; &lt;p&gt;Well, becoming a meetup organiser ticks all of those boxes! So, this post aims to:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Pitch the benefits of becoming a meetup organiser&lt;/li&gt; &lt;li&gt;Share some anecdotes and experiences of my time as an organiser&lt;/li&gt; &lt;li&gt;Share my ideas and opinions around preparing for and holding meetups, for your consideration&lt;/li&gt; &lt;li&gt;Basically just &lt;a href=&quot;https://www.merriam-webster.com/dictionary/brain%20dump&quot;&gt;brain dump&lt;/a&gt; everything I know about organising meetups&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;There is a lot to go over, so strap yourself in.&lt;/p&gt; &lt;blockquote&gt; &lt;h2 id=&quot;a-word-about-the-plague&quot;&gt;A Word about the Plague&lt;/h2&gt; &lt;p&gt;With the advent of &lt;a href=&quot;https://en.wikipedia.org/wiki/Coronavirus_disease_2019&quot;&gt;COVID-19&lt;/a&gt;, meetup dynamics changed completely from in-person to online-only.&lt;/p&gt; &lt;p&gt;As of this writing, I would certainly not feel comfortable hosting in-person events, for the sake of all participants, even if any of the venues who have graciously allowed us to use their facilities in the past would permit them.&lt;/p&gt; &lt;p&gt;The logistics of hosting an online meetup are comparatively simpler than in-person, but new challenges arise around keeping your community engaged and coming back to events.&lt;/p&gt; &lt;p&gt;My hope is that in-person meetups have not become obsolete, and will return in the near future (and hence the following information about them will become relevant again), but even when they do, there are definitely elements from online meetups that I intend to bring into &lt;a href=&quot;https://en.wiktionary.org/wiki/meatspace&quot;&gt;meatspace&lt;/a&gt;, which I will further elaborate on later.&lt;/p&gt; &lt;/blockquote&gt; &lt;h2 id=&quot;why-become-an-organiser&quot;&gt;Why become an organiser?&lt;/h2&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/2021-01-04/elm-sydney-paul.jpg&quot; alt=&quot;image elm-sydney-paul&quot; /&gt;&lt;/p&gt; &lt;p&gt;At a distant past &lt;a href=&quot;https://www.meetup.com/Ruby-On-Rails-Oceania-Sydney&quot;&gt;Ruby on Rails Oceania Sydney (RORO)&lt;/a&gt; meetup, the organisers starting asking some participants if they would consider becoming organisers themselves, and effectively take over running the meetup (I seem to recall the reasons being due to the demands of raising a young family, and competing time commitments for work, which is fair enough).&lt;/p&gt; &lt;p&gt;Before being asked, organising was not something I had thought about doing at all. It was great being a participant and a member of a community, and I did not feel actively compelled to seek out what seemed like more work. However, by the end of the meetup, I had signed up for the following reasons:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;It would be a new experience. I had never done any kind of event organising before, so I decided to silence all internal dissenting voices, throw myself out of my comfort zone, see what would happen, and hopefully learn something along the way.&lt;/li&gt; &lt;li&gt;Giving back would be a good thing. The very evening I moved permanently to Sydney, Australia, a place where I had no family and few friends, I made a beeline directly for the &lt;a href=&quot;https://www.ruby-lang.org/en/&quot;&gt;Ruby&lt;/a&gt; community, and was welcomed. Over time, I gave talks, mentored new developers, made new friends, and had lots of fun. I felt that this was a community worth maintaining and contributing to.&lt;/li&gt; &lt;li&gt;More public speaking. I figured that becoming an organiser would essentially force me to have a regular speaking gig, and help keep those vocal skills sharp.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;After nearly two years of being a RORO organiser, I took on further organiser roles at the &lt;a href=&quot;https://www.meetup.com/elixir-sydney/&quot;&gt;Elixir Sydney&lt;/a&gt;, &lt;a href=&quot;https://www.meetup.com/GraphQL-Sydney/&quot;&gt;GraphQL Sydney&lt;/a&gt;, and &lt;a href=&quot;https://www.meetup.com/Sydney-Elm-Meetup/&quot;&gt;Elm Sydney&lt;/a&gt; meetups, of which I am still an organiser of at the time of this writing. This required me to pass on my RORO torch on to a new team of amazing people, as four meetups became a bit too much for me to handle (it is good to be cognizant of your personal limits!).&lt;/p&gt; &lt;p&gt;I have no regrets on having travelled down the organiser path, and still find that I enjoy doing it. I get tremendous personal satisfaction from being able to provide a platform for others to speak about all the awesome stuff they have been doing, and help them construct their talks.&lt;/p&gt; &lt;p&gt;Meetups are all about community, and their management teams benefit greatly from a wide range of ideas and experiences, including yours. So, if you ever have the opportunity to be the enabler of those sparks of enthusiasm, I would encourage you to give it a try!&lt;/p&gt; &lt;h3 id=&quot;okay-im-interested-now-what&quot;&gt;Okay, I’m interested! Now what?&lt;/h3&gt; &lt;p&gt;If you want to know what kind of things you could help out with, or you want some ideas around what to include when starting your own meetup, read on, and hopefully the following will be of some reference as you take the reins and start leading your community.&lt;/p&gt; &lt;h2 id=&quot;content-is-king&quot;&gt;Content is King&lt;/h2&gt; &lt;p&gt;No half measures, let’s start with what I consider the hardest part of organising a technical meetup, regardless of whether it is in-person or online: sourcing talks.&lt;/p&gt; &lt;figure&gt; &lt;img src=&quot;/assets/images/2021-01-04/graphql-schedule.jpg&quot; alt=&quot;GraphQL Sydney&quot; /&gt; &lt;figcaption&gt; Photo by &lt;a href=&quot;https://twitter.com/tommarmstrong/status/872737400409268224&quot;&gt; Tomasso Armstrong &lt;/a&gt; &lt;/figcaption&gt; &lt;/figure&gt; &lt;p&gt;The dream for an organiser is to have a full pipeline of talks by willing and able speakers on a wide variety of topics that will cover multiple months worth of meetups. You then have the luxury of being able to group talks by content or technology, and establish an underlying theme for a meetup.&lt;/p&gt; &lt;p&gt;I remember I once had a pipeline of talks that covered a present &lt;em&gt;and&lt;/em&gt; a subsequent month’s meetups, and it felt &lt;em&gt;amazing&lt;/em&gt;! Good times…&lt;/p&gt; &lt;p&gt;So, yes, few organisers probably get to live that dream, but I am certainly not discouraged by that. Regardless of how much I may regurgitate the benefits I pitch in &lt;em&gt;&lt;a href=&quot;https://www.paulfioravanti.com/blog/speak-at-meetups/&quot;&gt;Speak at a Meetup&lt;/a&gt;&lt;/em&gt;, I know I am making a Big Ask when I canvass the community for presentations. I am essentially asking you to:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;take time out of your schedule to work for free by creating a talk&lt;/li&gt; &lt;li&gt;take more time out of your schedule to refine and practice your talk&lt;/li&gt; &lt;li&gt;maybe take even more time out of your schedule to have companion technical materials like demo environments and code repositories available&lt;/li&gt; &lt;li&gt;do something that you may not have experience doing, and initially may be uncomfortable, or just not like, doing&lt;/li&gt; &lt;li&gt;feel gratified that content creation is its own reward, and believe that the audience response will justify all your time and effort spent&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Would you do that for me…? Community Glory awaits! …Maybe next month, then…? Well, have a think about it and let’s talk again later!&lt;/p&gt; &lt;p&gt;…&lt;/p&gt; &lt;p&gt;Rinse and repeat, every month, with all the humility and thankfulness that you, as an organiser, can muster. Take the mindset that nobody owes you anything, and it is &lt;em&gt;the community&lt;/em&gt; doing &lt;em&gt;you&lt;/em&gt; a favour by providing the content needed to make the meetup a success. Proactively ask, but do not pressure.&lt;/p&gt; &lt;p&gt;Begging is fine, though; I get to practice that a lot :pray:&lt;/p&gt; &lt;h3 id=&quot;how-do-i-find-new-content&quot;&gt;How do I find new content?&lt;/h3&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/2021-01-04/roro-donna.jpg&quot; alt=&quot;image roro-donna&quot; /&gt;&lt;/p&gt; &lt;p&gt;Finding talk content for meetups is a treasure hunt, and the &lt;a href=&quot;https://www.theidioms.com/x-marks-the-spot/&quot;&gt;“X” that marks the spot&lt;/a&gt; on your map is a moving target, but I have been able to strike gold at the following places:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Your own meetups&lt;/strong&gt;. After talks are finished at every meetup, make sure to take some time to let participants know that you are &lt;em&gt;always&lt;/em&gt; looking for talks, especially from first-time speakers. After proceedings, I have had many people ask whether a topic they want to talk about has been done before, or whether it would be interesting or not. Harness that interest and curiosity and guide it towards becoming a talk submission.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Other meetups&lt;/strong&gt;. See a talk you liked at another meetup that your community might also like or benefit from? Reach out to that speaker and see if they want to get more mileage out of their talk with another audience. &lt;a href=&quot;https://en.wikipedia.org/wiki/Write_once,_run_anywhere&quot;&gt;Write once, run anywhere&lt;/a&gt; can work for talks, too!&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Social Media&lt;/strong&gt;. Assuming your community is subscribed to your social media, call outs are definitely the easiest way to do a beg blast for talks. Their regularity can become more frequent as the date of the meetup draws closer and you realise you still need speakers, but it is always better to secure talks as early as possible.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Direct Messaging&lt;/strong&gt;. If indirect social media requests yield nothing, sometimes people respond to being nudged directly. You should have a list of your community members, so do not be shy in reaching out and getting personal with requests.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Chat channels&lt;/strong&gt;. Your local tech community will likely have multiple &lt;a href=&quot;https://slack.com/&quot;&gt;Slack&lt;/a&gt; workspaces or &lt;a href=&quot;https://discord.com/&quot;&gt;Discord&lt;/a&gt; servers they frequent. I have had success in reaching out to developers who promote their projects there to give talks about them (also works when those promotions happen over social media).&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Blog posts&lt;/strong&gt;. Did a member of your community write a blog post about something interesting? Ask if they can adapt it into a talk since they have already gone most of the distance with regards to content creation. It’s not plagiarism if it’s your own work!&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Coding Bootcamps&lt;/strong&gt;. In order to get more junior developers to attend my meetups, I have gone and done talks at various coding bootcamps, which are &lt;em&gt;very&lt;/em&gt; fertile ground for new speakers. Ask a developer-in-training to take a presentation/demo they have already likely delivered to their class, and also give it to their future peers!&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Group Exercises&lt;/strong&gt;. Providing some kind of well-defined problem to solve can result in great content. I use &lt;a href=&quot;https://exercism.io/&quot;&gt;Exercism&lt;/a&gt; problems to encourage junior developers and first-time speakers to deliver a &lt;a href=&quot;https://en.wikipedia.org/wiki/Lightning_talk&quot;&gt;lightning talk&lt;/a&gt; on their solution, which then often produces great community discussion about the different ways to figure out that particular problem.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Post-Meetup Pub&lt;/strong&gt; :beers: There is almost always a group that heads to a nearby pub after an in-person meetup has finished (regardless of whether you had alcohol available at the meetup itself). As well as affording you the opportunity to talk with attendees you were unable to catch up with because you were too busy organising, the pub environment can also be the catalyst for conversations that lead into getting more talk submissions (promises after a few drinks are still promises!). For non-drinkers, those conversations take place over post-meetup &lt;a href=&quot;https://en.wikipedia.org/wiki/Gelato&quot;&gt;gelato&lt;/a&gt; :icecream:&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Once you do get someone interested in doing a talk for the meetup, depending on their level of experience or confidence with preparing talks, you may need, or be asked, to assist them with their content preparation, &lt;a href=&quot;https://www.merriam-webster.com/dictionary/dry%20run&quot;&gt;dry runs&lt;/a&gt;, timing, or generally be a &lt;a href=&quot;https://www.merriam-webster.com/dictionary/sounding%20board&quot;&gt;sounding board&lt;/a&gt;. Relish these requests as your speaker’s success also becomes your own (and the meetup’s), and doing this often leads to a &lt;a href=&quot;https://en.wikipedia.org/wiki/Virtuous_circle_and_vicious_circle&quot;&gt;virtuous circle&lt;/a&gt; that leads even more new content.&lt;/p&gt; &lt;h3 id=&quot;what-if-i-get-no-content&quot;&gt;What if I get no content?&lt;/h3&gt; &lt;p&gt;If, despite your best efforts, you were not able to get talks lined up for your technical meetup, or you have had last minute talk cancellations (it happens), and you, yourself, do not have your own content to prop up the speaker line-up, then there are a few options that can tide you over until the next meetup (note, though, that these ideas will probably mostly work best for in-person meetups):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Hack Night&lt;/strong&gt;. Change the meetup format to be a “hack night”, where people can work together on solving a problem, get mentored, or assist on each others projects etc.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Mob_programming&quot;&gt;Mob Programming&lt;/a&gt;&lt;/strong&gt;. Pick a problem to solve, like an &lt;a href=&quot;https://exercism.io/&quot;&gt;Exercism&lt;/a&gt; exercise, and have one person “drive” a machine, while everyone else chimes in with their solution proposals. Change the driver periodically. The rowdy discussions are part of the fun, and with tools like &lt;a href=&quot;https://repl.it/&quot;&gt;Repl.it&lt;/a&gt;, this can also succeed in a remote setting. &lt;img src=&quot;/assets/images/2021-01-04/elixir-quiz.jpg&quot; alt=&quot;image elixir-quiz&quot; style=&quot;width: 60%; float: right; margin: 1rem;&quot; /&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Quiz Night&lt;/strong&gt;. At some &lt;a href=&quot;https://www.meetup.com/elixir-sydney/&quot;&gt;Elixir Sydney&lt;/a&gt; meetups, we have used &lt;a href=&quot;https://elixircards.co.uk/&quot;&gt;Elixir Flashcards&lt;/a&gt; to form the basis of &lt;a href=&quot;https://en.wikipedia.org/wiki/Pub_quiz&quot;&gt;pub quiz&lt;/a&gt;-style activities, where the winning team takes all…of the kudos and admiration of the community :clap:&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Social Night&lt;/strong&gt;. Just do what you were planning on doing, but without the talks, focusing instead on just catching up, socialising, and debating the &lt;a href=&quot;https://en.wikipedia.org/wiki/Editor_war&quot;&gt;important issues&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Cancel It&lt;/strong&gt;. Sometimes, especially for online-only meetups, if the content is not there, then you may feel the need to cut your losses and focus on the following meetup. No shame.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;There are, of course, plenty of meetups out there whose sole purpose revolves around what I have outlined as an “alternative” activity, like hack/social nights. You may even want to have designated events for these kinds of activities in your meetup cadence to break up the flow, which is absolutely fine! The most important thing is holding events that people want to keep on coming back to, and that can be different for every community.&lt;/p&gt; &lt;h2 id=&quot;venues&quot;&gt;Venues&lt;/h2&gt; &lt;p&gt;If you are going to hold an in-person meetup, you need a location where people can gather to see all the wonderful content on offer. Depending on factors like how established your meetup is, and how many &lt;a href=&quot;https://dictionary.cambridge.org/dictionary/english/rsvp&quot;&gt;RSVP&lt;/a&gt;s you receive, your meetup’s venue requirements will be different.&lt;/p&gt; &lt;p&gt;Regardless or which kind of venue you intend to host your meetup at, I would implore you to have a think about, and explicitly make a note of, the minimum conditions that a venue must meet in order for you to be able to run your meetup successfully: the must-haves and the nice-to-haves.&lt;/p&gt; &lt;p&gt;When I attempted this exercise, this is what I came up with, and still use it as a baseline reference (bear in mind that some of the nice-to-haves only apply to an office venue context):&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/2021-01-04/roro-at-reactor.jpg&quot; alt=&quot;image roro-at-reactor&quot; /&gt;&lt;/p&gt; &lt;h3 id=&quot;must-haves&quot;&gt;Must-Haves&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;Room for 80 people to at least stand&lt;/li&gt; &lt;li&gt;Projector/Big Screen that a laptop computer can connect to&lt;/li&gt; &lt;li&gt;Ability for food options to be available or delivered (street parking/elevators/docking area/trollies etc)&lt;/li&gt; &lt;li&gt;Tables/&lt;a href=&quot;https://en.wikipedia.org/wiki/Trestle_table&quot;&gt;trestles&lt;/a&gt; where food can be placed&lt;/li&gt; &lt;li&gt;Ability for finished food/utensils to be cleared/disposed of&lt;/li&gt; &lt;li&gt;Access to male/female toilets&lt;/li&gt; &lt;li&gt;Ability for people to get in to the venue if they come late&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;nice-to-haves&quot;&gt;Nice-To-Haves&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;Ability to sponsor food&lt;/li&gt; &lt;li&gt;Ability to provide disposable cutlery/crockery for catered food&lt;/li&gt; &lt;li&gt;Ability to sponsor drinks/open up their drinks fridge&lt;/li&gt; &lt;li&gt;Room for 80 people to sit on chairs&lt;/li&gt; &lt;li&gt;Lectern&lt;/li&gt; &lt;li&gt;Microphone/Sound systems&lt;/li&gt; &lt;li&gt;Cables for projector/screen to laptops&lt;/li&gt; &lt;li&gt;Provide remote controls for presentations&lt;/li&gt; &lt;li&gt;Ability to record presentations&lt;/li&gt; &lt;li&gt;Ability to have a table to put name tags on to place near the entrance&lt;/li&gt; &lt;li&gt;Close to the Central Business District (CBD)&lt;/li&gt; &lt;li&gt;Close to public transport&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The technical meetups I organise are community-driven non-profit events, where attendance is free for participants, and so there is no monetary budget to hire out some fancy venue. Within the context of Sydney, Australia, this has meant a choice of two types of potential venue that meet the must-have conditions: pubs and offices.&lt;/p&gt; &lt;h3 id=&quot;pubs&quot;&gt;Pubs&lt;/h3&gt; &lt;p&gt;Many pubs have event rooms that they rent out, but if your meetup is held at a time when those rooms are not typically used, you can often get room fees waived if you ensure some minimum threshold of attendees. The assumption will be that a high percentage of those attendees will buy food and drinks, and you, as the organiser, can help nudge those sales along when you kick off the meetup.&lt;/p&gt; &lt;p&gt;I have heard that pubs are considered “neutral ground” for technical meetups, meaning free from the “interference” of any third-party that could potentially attempt to impose editorial control over content delivered at the meetup.&lt;/p&gt; &lt;p&gt;I guess that is true in theory, but I have personally never experienced a situation where the venue is a company office and the host insists on something like “since you’re using our office we want all the speakers to be our employees promoting our stuff”.&lt;/p&gt; &lt;p&gt;The &lt;a href=&quot;https://www.meetup.com/Ruby-On-Rails-Oceania-Sydney&quot;&gt;RORO meetup&lt;/a&gt; had a long tradition of being held at pubs in Sydney, but eventually moved to being held in offices, for various reasons including issues with pub audio visual equipment and ambient noise. See &lt;a href=&quot;https://github.com/rails-oceania/roro/issues/81&quot;&gt;this GitHub issue&lt;/a&gt; for a stellar problem write-up and solution proposal by &lt;a href=&quot;https://twitter.com/mootpointer&quot;&gt;Andrew Harvey&lt;/a&gt;, a previous RORO organiser.&lt;/p&gt; &lt;p&gt;Regardless of any shortcomings, though, a pub may be an appropriate option for your meetup, and can provide a great casual atmosphere, without you needing to worry about food or drink budgets since everyone takes care of themselves.&lt;/p&gt; &lt;h3 id=&quot;offices&quot;&gt;Offices&lt;/h3&gt; &lt;p&gt;Software developers are in the privileged position of currently being in very high demand in the job market, which has the &lt;a href=&quot;https://dictionary.cambridge.org/dictionary/english/knock-on-effect&quot;&gt;knock-on effect&lt;/a&gt; of companies being interested in hosting gatherings of developers, particularly if that company uses the technology that your meetup focuses on.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/2021-01-04/roro-at-pivotal.jpg&quot; alt=&quot;image roro-at-pivotal&quot; /&gt;&lt;/p&gt; &lt;p&gt;In many cases, companies will also have event-related budgets enabling them to cover food and/or drinks, and have facilities that cover a good chunk of the nice-to-have requirements above, resulting in a great experience for your attendees.&lt;/p&gt; &lt;p&gt;In return for this support, I have typically provided a spot for someone from the company to address the audience before the meetup talks start, usually to promote the company itself and any jobs they may have available, as well as sponsor shout-outs at the meetup and on social media. In rare circumstances, the host company has an employee that wants to give a community talk on home ground, so I have been happy to add them to the speaker line-up.&lt;/p&gt; &lt;p&gt;The ambient noise issues that occur in pubs are generally non-existent in offices, particularly if your meetup is in the evening, allowing everyone’s focus to stay firmly on the content you have worked so hard to procure.&lt;/p&gt; &lt;p&gt;Also, as opposed to pubs, who typically have a team of wait staff to clean up after you, this is typically not the case for offices. So, make sure you actively ask your venue contact about any post-meetup cleaning up, including disposing of any excess food and/or putting away chairs and tables. Do not be shy about delegating tasks like chair-stacking and cleaning-up to your audience, either.&lt;/p&gt; &lt;h2 id=&quot;food-and-drink&quot;&gt;Food and Drink&lt;/h2&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/2021-01-04/pizza.jpg&quot; alt=&quot;image pizza&quot; style=&quot;width: 50%; float: right; margin-left: 1rem; margin-bottom: 1rem;&quot; /&gt;&lt;/p&gt; &lt;p&gt;If you can find a company who can provide you with a venue, food, and drinks on a constant monthly (or whatever your &lt;a href=&quot;https://www.merriam-webster.com/dictionary/cadence&quot;&gt;cadence&lt;/a&gt; is) basis, this can take a &lt;em&gt;big load&lt;/em&gt; off your organiser shoulders, and enable you to focus exclusively on procuring content. Build a strong relationship with these organisations and don’t let them go easily!&lt;/p&gt; &lt;p&gt;In the event where you need to organise some or all of the catering yourself, though, I can recommend the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Try to find another company to cover the bill. This may mean needing to pay the bill upfront yourself and getting reimbursed later by the sponsor. Don’t forget to also add that company to the list of sponsors to thank at the meetup. If you cannot foist the bill on to another organisation, and it is not something you are prepared to cover yourself, I’m pretty sure it is okay to not provide free food and/or drinks to your attendees (online meetups don’t send food deliveries to every attendee’s residence after all…).&lt;/li&gt; &lt;li&gt;Where your budget permits, try and aim for non-pizza options. Nearly every technical meetup with a food budget provides pizza as it’s the easiest option (to the point where, at least in Sydney, you could probably have your dinner covered by tech meetups most days of the week, as long as your diet can bear that much pizza). However, with that same budget, you may be surprised at what it could get you at a corporate caterer (&lt;em&gt;COVID caveat&lt;/em&gt;: who knows what the state of shared food like pizzas and buffet-style catering is going to be when in-person meetups resume, though…). &lt;img src=&quot;/assets/images/2021-01-04/buffet.jpg&quot; alt=&quot;image buffet&quot; style=&quot;float: right; margin-left: 1rem; margin-bottom: 1rem;&quot; /&gt;&lt;/li&gt; &lt;li&gt;I have had mixed results from beverage delivery services. I have found they have not been as timely as food delivery; as in, drinks have arrived many hours before times I have specified, as opposed to food, which has typically arrived at expected times. So, if you are getting beverages delivered, you probably want to make sure your venue has a fridge with spare room in it (as your beers will probably not arrive cold), and someone to receive the delivery if you cannot be there yourself. If there is a &lt;a href=&quot;https://www.collinsdictionary.com/dictionary/english/bottle-shop&quot;&gt;bottle shop&lt;/a&gt; nearby to your venue, you are probably better off taking a team with you to buy direct and help bring the order back.&lt;/li&gt; &lt;li&gt;Keep inclusivity in mind when ordering food and drink: include vegetarian and vegan options for food, and if you do have alcohol at your meetup, ensure that you also have non-alcoholic options (including water!).&lt;/li&gt; &lt;li&gt;Watch out for food hogs that pile their plates insanely high, leaving less for other participants. As an organiser, sometimes you have to be an enforcer of decorum.&lt;/li&gt; &lt;li&gt;Encourage people to bring empty food containers to your events to take home any leftover food, preventing wastage (&lt;em&gt;COVID caveat&lt;/em&gt;: no idea if this will be considered a responsible idea moving forward…we will have to wait and see)&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;venue-less&quot;&gt;Venue-less&lt;/h2&gt; &lt;p&gt;If you find yourself in the middle of a plague, or you just want to free your meetup from the constraints of geography, then you may want to consider hosting it on that internet thing we all know and love.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/2021-01-04/elixir-australia.jpg&quot; alt=&quot;image elixir-australia&quot; /&gt;&lt;/p&gt; &lt;p&gt;As of this writing, &lt;a href=&quot;https://zoom.us/&quot;&gt;Zoom&lt;/a&gt; is the tool &lt;a href=&quot;https://www.merriam-webster.com/dictionary/du%20jour&quot;&gt;du jour&lt;/a&gt; for remote meetings and video conferences, and I have been utilising it to keep meetups active while in-person meetups remain infeasible. However, it is not just meetup continuance that has been achieved in the move to online-only. Significant value has been added to meetups that I fully intend on keeping around, even after we get back to meeting in-person again.&lt;/p&gt; &lt;h3 id=&quot;videos&quot;&gt;Videos&lt;/h3&gt; &lt;p&gt;Video recording talks at in-person meetups where we could access video feeds of the speaker, slides from their computer, and, most importantly, clear audio of the speaker’s voice, seemed like an insurmountable (and expensive) task. Capturing all of those feeds now is as trivial as pressing a button and recording to the cloud.&lt;/p&gt; &lt;p&gt;There have been plenty of times in the past where I have been asked by people who were unable to attend a meetup in-person whether the talks had been recorded. Every time I would have to apologise and say that we were “working on” a way to do recordings; now I just share a link to the relevant meetup &lt;a href=&quot;https://www.youtube.com/&quot;&gt;YouTube&lt;/a&gt; channel, where I upload talks after doing some rudimentary editing with &lt;a href=&quot;https://support.apple.com/en-au/guide/quicktime-player/welcome/mac&quot;&gt;QuickTime&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Being able to provide your speakers with a link to a video artefact of their talk, and having it promoted all over social media is, no doubt, a &lt;a href=&quot;https://en.wikipedia.org/wiki/Killer_feature&quot;&gt;killer feature&lt;/a&gt; for someone doing a talk at your meetup. It is too good to be lost in the move back to in-person, so it will stay.&lt;/p&gt; &lt;h3 id=&quot;all-access&quot;&gt;All-Access&lt;/h3&gt; &lt;p&gt;Regardless of how much they would like to attend your meetup in-person, there are people who are simply unable to do so for all manner of reasons, from family obligations to residing too far away from your venue. When your meetup has online access, these limitations fade into irrelevance.&lt;/p&gt; &lt;p style=&quot;margin: auto; margin-bottom: 1em; width: 85%;&quot;&gt;&lt;img src=&quot;/assets/images/2021-01-04/roro-stuck-inside.jpg&quot; alt=&quot;image roro-stuck-inside&quot; /&gt;&lt;/p&gt; &lt;p&gt;It gives me great joy now when we say hello to new attendees, and find fellow tech enthusiasts from all over the world have joined our “local meetup”. These days, though, “local” seems to only really apply to that nice community “feel” of a meetup, since any open online meetup is global by default. As long as you are awake during &lt;a href=&quot;https://en.wikipedia.org/wiki/UTC%2B10:00&quot;&gt;AEST&lt;/a&gt;/&lt;a href=&quot;https://en.wikipedia.org/wiki/UTC%2B11:00&quot;&gt;AEDT&lt;/a&gt; time zone evenings, you are welcome at any online meetup that I host, no matter where you are reading this! :smiley:&lt;/p&gt; &lt;p&gt;So, as a meetup organiser, you have the opportunity to choose how high you would like the fences around your meetup to be: as low as &lt;a href=&quot;https://en.wikipedia.org/wiki/Live_streaming&quot;&gt;live streaming&lt;/a&gt;, or as high as in-person venue-only. Gauge your audience, and the objectives of your meetup, and select a strategy that works best for your community.&lt;/p&gt; &lt;h2 id=&quot;information-source-of-truth&quot;&gt;Information Source of Truth&lt;/h2&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/2021-01-04/roro-at-ca.jpg&quot; alt=&quot;image roro-at-ca&quot; /&gt;&lt;/p&gt; &lt;p&gt;With the important high-level issues of content, venues, and nourishment taken care of, we can now dive into the minutiae of detailed meetup topics, starting with information management.&lt;/p&gt; &lt;p&gt;Each technical meetup can generate a lot of information:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;A list of talk submissions and proposals, and the back and forth communications that occur as they are guided towards getting slotted in to a meetup’s talk lineup&lt;/li&gt; &lt;li&gt;A final list of speakers, their talk summaries, and the materials they used for their talks&lt;/li&gt; &lt;li&gt;Promotional and attendance sign-up pages containing information about the meetup, its date, time, place (real or virtual), and purpose&lt;/li&gt; &lt;li&gt;Promotional social media posts&lt;/li&gt; &lt;li&gt;Communication amongst organisers, and between organisers and speakers/venues&lt;/li&gt; &lt;li&gt;A meetup host slide deck&lt;/li&gt; &lt;li&gt;Post-meetup artefacts like videos&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Unfortunately, there is no one system that takes care of handling all of this information (that I know of). I use a variety of third party services to handle particular types of information; you may not need them all for your meetup, but hopefully this list will serve as some reference:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Email&lt;/strong&gt;. Create a new meetup-specific email account with a service like &lt;a href=&quot;https://www.gmail.com&quot;&gt;Gmail&lt;/a&gt;, store its credentials somewhere safe (like a password manager), and share them with any co-organisers you have via services like &lt;a href=&quot;https://keybase.io/&quot;&gt;Keybase&lt;/a&gt;. Use this email address to create accounts for all of the other third party services you need for the meetup, and correspond with speakers and venues with it (where email is needed to do that).&lt;br /&gt; The benefits of doing this, rather than using your personal email, are the transparency and burden-sharing with your co-organisers for any external communications that may need to occur. Also, should the time come when you want to step back as an organiser and relinquish the meetup to someone else, having this account separate from you personally will make handover significantly easier. I would recommend taking the viewpoint that the meetup should exist as its own entity, and not being tied tightly to you, personally.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.meetup.com/&quot;&gt;Meetup.com&lt;/a&gt;&lt;/strong&gt;. Regardless of your opinions of this site (and some technical people have pretty strong opinions about it), I would say that as of this writing, if your audience is in the English-speaking world, and you want your meetup to be found on the internet, you are going to need a paid account here (try and get a sponsor to pay for it, if possible).&lt;br /&gt; You do not need to revolve your meetup around Meetup.com. I know of some organisers that use it just to springboard their audience to other systems, like &lt;a href=&quot;https://www.eventbrite.com/&quot;&gt;Eventbrite&lt;/a&gt;. I only use its very basic features: discoverability via search, scheduling, RSVP management, and very occasionally member emails. I want the key information about the meetup to be separate from, and accessible out of, Meetup.com (in case it ever disappears or I want to change platforms), and so I use other services for this.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/&quot;&gt;Github&lt;/a&gt;&lt;/strong&gt;. As a developer you probably use GitHub (or one of its source-control competitors) every day and are intimately familiar with its workflows. I use it as the &lt;a href=&quot;https://en.wikipedia.org/wiki/Single_source_of_truth&quot;&gt;source of truth&lt;/a&gt; for meetup information (so it doesn’t have to be Meetup.com), and for handling the life-cycle of talk submissions (using &lt;a href=&quot;https://guides.github.com/features/issues/&quot;&gt;Issues&lt;/a&gt;).&lt;br /&gt; A meetup has its own dedicated &lt;a href=&quot;https://docs.github.com/en/free-pro-team@latest/github/setting-up-and-managing-organizations-and-teams/about-organizations&quot;&gt;organisation&lt;/a&gt; and repository, and each individual meetup is represented by a folder in the repository. It contains a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;README&lt;/code&gt; file with meetup information (which gets &lt;em&gt;copied&lt;/em&gt; over to Meetup.com), as well as the host presentation materials for that meetup.&lt;br /&gt; &lt;a href=&quot;https://docs.github.com/en/free-pro-team@latest/github/building-a-strong-community/configuring-issue-templates-for-your-repository&quot;&gt;Issue templates&lt;/a&gt; are used to guide people through the creation of full-length talk, lightning talk, and talk request submissions, and outline the general definitions and expectations of them (eg for this meetup, a “full-length” talk means no more than 40 minutes long and a “lightning talk” is typically about 5 minutes etc). Every meetup has its own milestone that issues are marked against to symbolically “lock in” a talk for that meetup.&lt;br /&gt; Once a meetup has concluded, I encourage speakers to share their presentation materials publicly somewhere, then close the meetup issues, and their corresponding milestone. You can see examples of all this in the repositories for &lt;a href=&quot;https://github.com/rails-oceania/roro&quot;&gt;RORO Sydney&lt;/a&gt;, &lt;a href=&quot;https://github.com/elixirsydney/elixirsydney/&quot;&gt;Elixir Sydney&lt;/a&gt;, &lt;a href=&quot;https://github.com/graphqlsydney/graphqlsydney&quot;&gt;GraphQL Sydney&lt;/a&gt;, or &lt;a href=&quot;https://github.com/elmsydney/elmsydney&quot;&gt;Elm Sydney&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://twitter.com/&quot;&gt;Twitter&lt;/a&gt;&lt;/strong&gt;. The most widely used social media platform for technical people would seem to currently be Twitter. So, each of the meetups I organise has its own Twitter account, used for meetup and speaker promotions, announcements, and requests for talks. I try and aim for a promotional tweet with speaker and talk names at the beginning of the week the meetup is scheduled to occur.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.dropbox.com/&quot;&gt;Dropbox&lt;/a&gt;&lt;/strong&gt;. Used essentially as an asset host for media contained in the meetup host presentation slide deck (so, not like an asset host would be used if images were being serving on a web page that gets lots of hits).&lt;/li&gt; &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://slack.com/&quot;&gt;Slack&lt;/a&gt;&lt;/strong&gt;. There are official Slack workspaces for the programming languages the meetups I organise cover, and so I promote meetups in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#australia&lt;/code&gt; channels there, as well as in other programming community workspace channels where I am relatively sure it will not be seen as spam.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://zoom.us/&quot;&gt;Zoom&lt;/a&gt;&lt;/strong&gt;. Covered in detail above, but definitely get a paid Pro account if you are able to.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.youtube.com/&quot;&gt;YouTube&lt;/a&gt;&lt;/strong&gt;. As you may expect, a meetup’s YouTube channel is the place to upload videos to share with and promote to the world (given the large size of video files, I also consider the meetup YouTube channel to be the source of truth for meetup videos). Make sure that your speakers know in advance that there is the intention of putting videos of their talk up on the meetup YouTube channel.&lt;br /&gt; Also, be understanding of times when you may be asked to either &lt;em&gt;not&lt;/em&gt; upload a video, or take one down. Speakers may have let information slip out that they didn’t mean to (or regret in hindsight), or maybe they think the talk just did not go well enough to want it on their permanent record. Regardless of the reason, remove the video from the meetup channel. Meetup organisers are meant to spread community cheer and knowledge, not role-play as investigative journalists busting suspects on tape.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;meetup-host-slide-deck&quot;&gt;Meetup Host Slide Deck&lt;/h2&gt; &lt;p&gt;Assuming that your meetup will have at least &lt;em&gt;one&lt;/em&gt; talk, now that you have procured your most important content, let’s examine the creation and maintenance of content that can &lt;a href=&quot;https://en.wiktionary.org/wiki/bookend&quot;&gt;bookend&lt;/a&gt; it.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/2021-01-04/roro-rob.jpg&quot; alt=&quot;image roro-rob&quot; /&gt;&lt;/p&gt; &lt;p&gt;Although certainly not needed to run a successful meetup, I like to have a meetup host slide deck to be point of reference for the event itself.&lt;/p&gt; &lt;p&gt;I typically include slides covering the following areas:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Welcome participants to the meetup&lt;/li&gt; &lt;li&gt;Housekeeping&lt;/li&gt; &lt;li&gt;Summarise the meetup content&lt;/li&gt; &lt;li&gt;Inform participants if any particular behaviour is expected of them (eg your meetup may have a &lt;a href=&quot;https://en.wikipedia.org/wiki/Code_of_conduct&quot;&gt;Code of Conduct&lt;/a&gt;)&lt;/li&gt; &lt;li&gt;Thank sponsors (if any)&lt;/li&gt; &lt;li&gt;Introduce and hype-up the presenters and their talks (I like to have the presentation name, speaker name and social media handle, and a photo of the speaker – all as large as possible; these slides can then double as video &lt;a href=&quot;https://en.wikipedia.org/wiki/Thumbnail&quot;&gt;thumbnails&lt;/a&gt;).&lt;/li&gt; &lt;li&gt;Prompt for people to submit talks for the next meetup, and provide details of where they should submit proposals (basically, a summarised version of the &lt;em&gt;&lt;a href=&quot;https://www.paulfioravanti.com/blog/speak-at-meetups/&quot;&gt;Speak at a Meetup&lt;/a&gt;&lt;/em&gt; post)&lt;/li&gt; &lt;li&gt;Promote the social media accounts of the presenters and the meetup itself&lt;/li&gt; &lt;li&gt;Prompt discussion of community news and events (see if you can trade meetup &lt;a href=&quot;https://dictionary.cambridge.org/dictionary/english/shout-out&quot;&gt;shout-outs&lt;/a&gt; with others in your ecosystem)&lt;/li&gt; &lt;li&gt;Prompt those who have jobs to promote, and those who wish to promote themselves for jobs, to give their pitches&lt;/li&gt; &lt;li&gt;Promote any other relevant community communication media (eg chat channels where post-meetup conversations can continue etc)&lt;/li&gt; &lt;li&gt;Inform the date and location of the next meetup&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;This might seem like a long list, but within the context of running the meetup, some of these slides might only be up on screen for a matter of seconds. The order that these slides are displayed is also up to you: for example, you may want to have your jobs slide before the talks, so that any recruiters present can say their piece, and then feel free to leave if they do not want to sit through any technical content.&lt;/p&gt; &lt;p&gt;Ultimately, though, no one comes to a meetup for the host deck, so I have found it best to attempt to deliver all necessary information as briskly as possible, so that we can make way for speakers.&lt;/p&gt; &lt;h3 id=&quot;slideware&quot;&gt;Slideware&lt;/h3&gt; &lt;p&gt;When it comes to &lt;a href=&quot;https://en.wikipedia.org/wiki/Slideware&quot;&gt;slideware&lt;/a&gt; used to create the host deck, I tend to optimise for:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt;-based slide creation&lt;/li&gt; &lt;li&gt;Ease (and correctness) of export to &lt;a href=&quot;https://en.wikipedia.org/wiki/PDF&quot;&gt;PDF&lt;/a&gt; functionality&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;We are not creating the &lt;a href=&quot;https://en.wikipedia.org/wiki/An_Inconvenient_Truth#The_slide_show&quot;&gt;slide deck for &lt;em&gt;An Inconvenient Truth&lt;/em&gt;&lt;/a&gt; here, so software like &lt;a href=&quot;https://www.apple.com/keynote/&quot;&gt;Keynote&lt;/a&gt; or &lt;a href=&quot;https://www.microsoft.com/en-us/microsoft-365/powerpoint&quot;&gt;PowerPoint&lt;/a&gt; does not feel like the right tool for this particular job (though if you have a particular affinity to either of these, by all means please use them; I still use them for other types of presentations, so there is no slideware elitism here).&lt;/p&gt; &lt;p&gt;Being a developer, I &lt;em&gt;do&lt;/em&gt; like plain text that I can edit in a &lt;a href=&quot;https://www.vim.org/&quot;&gt;plain text editor&lt;/a&gt;. If the deck is a simple text file, it can easily be put under &lt;a href=&quot;https://en.wikipedia.org/wiki/Version_control&quot;&gt;version control&lt;/a&gt; with &lt;a href=&quot;https://git-scm.com/&quot;&gt;Git&lt;/a&gt; to enable collaboration with others, and then readily shared online.&lt;/p&gt; &lt;p&gt;I have previously used &lt;a href=&quot;https://gitpitch.com/&quot;&gt;GitPitch&lt;/a&gt; and &lt;a href=&quot;https://github.com/jxnblk/mdx-deck&quot;&gt;MDX Deck&lt;/a&gt; to do this (and they are both good!), but my current slideware of choice is &lt;a href=&quot;https://www.deckset.com/&quot;&gt;Deckset&lt;/a&gt;. It is not free (and currently only for Mac OS), but I have found the value I get out of it justifies the license cost (though I do hope more themes are added in the future…).&lt;/p&gt; &lt;p style=&quot;margin: auto; margin-bottom: 1em; width: 80%;&quot;&gt;&lt;img src=&quot;/assets/images/2021-01-04/roro-next-exercism.jpg&quot; alt=&quot;image roro-next-exercism&quot; /&gt;&lt;/p&gt; &lt;p&gt;Deckset’s export to PDF functionality is great, and I find that the PDF slides &lt;em&gt;actually&lt;/em&gt; reflect how the slides look when viewed in the application. In my experience, this is not always the case with other applications, which is why I &lt;em&gt;always&lt;/em&gt; export a PDF copy of the deck and &lt;a href=&quot;https://git-scm.com/docs/git-commit&quot;&gt;commit&lt;/a&gt; it along with the original Markdown file.&lt;/p&gt; &lt;p&gt;The PDF will always be smaller than its equivalent Keynote or Powerpoint file, and does not really bloat the repository size. Hosting image assets used in the slide deck outside of the repository also helps in keeping the repository size down.&lt;/p&gt; &lt;h2 id=&quot;exception-handling&quot;&gt;Exception Handling&lt;/h2&gt; &lt;p&gt;Regardless of whether you have a fantastic community with wonderful people, as an organiser, consider giving at least give some thought to potential worst-case scenarios that could occur at your meetup, for your community’s sake.&lt;/p&gt; &lt;p&gt;If desired, enact some kind of formal authoritative framework, like a code of conduct, that explicitly outlines expectations of what actions should be taken when things go wrong, so it takes the guesswork out of what to do in undesirable situations, enabling you to focus on just taking action.&lt;/p&gt; &lt;h3 id=&quot;audience-issues&quot;&gt;Audience Issues&lt;/h3&gt; &lt;p&gt;You want speakers to not just have a great speaking experience at your meetup, but they should feel happy to come back and deliver more content to your community. If there are people in the audience who are disrupting a speaker, then you are well within your rights as an organiser to caution them, or ask them to leave.&lt;/p&gt; &lt;p&gt;Some speakers are very confident in their personality and speaking skills, and sometimes even actively invite audience &lt;a href=&quot;https://en.wikipedia.org/wiki/Heckler&quot;&gt;heckling&lt;/a&gt; for their own amusement. Regardless of a speaker’s ability to handle this, I personally discourage it because of the negative message it sends to people in the audience who might be considering giving a talk, but are not experienced or confident speakers: you might be heckled and no one will stop it (leading to your embarrassment in front of everyone).&lt;/p&gt; &lt;p&gt;I think that everyone should be able to feel undaunted about giving a talk to their peers, knowing that they have the support of the room. The benefits of a no-heckling policy far outweigh any charges of being a &lt;a href=&quot;https://www.merriam-webster.com/dictionary/killjoy&quot;&gt;killjoy&lt;/a&gt;.&lt;/p&gt; &lt;h3 id=&quot;speaker-issues&quot;&gt;Speaker Issues&lt;/h3&gt; &lt;p&gt;It is extremely difficult, if not impossible, to determine the quality of someone’s content in advance of a meetup unless it is actually shared with you ahead of time (sometimes, speaker preparation can even last until the minute they get up on stage).&lt;/p&gt; &lt;p&gt;In principle, I am fine with this for any new speaker, or speakers who have successfully delivered talks before. Anyone who has willingly taken on the Big Ask to provide content is already a hero in my eyes, and has my assumption of &lt;a href=&quot;https://www.merriam-webster.com/dictionary/good%20faith&quot;&gt;good faith&lt;/a&gt;; I am not prepared to enforce conditions like vetting all talks, even if I had a mythical pipeline of eager speakers. Finding content is hard enough, and the less obstacles to getting that content delivered at a meetup, the better.&lt;/p&gt; &lt;p&gt;So, unless you get a request for assistance, the first time you will hear a speaker’s talk is likely to be at the meetup itself. For the meetups I organise, this has not been an issue, aside from the very rare cases when it is.&lt;/p&gt; &lt;p&gt;Specifics are not relevant, and “bad” is subjective. But, ultimately, if you think that content delivered by a speaker at a meetup you organise (or by &lt;em&gt;anyone&lt;/em&gt; who has been given the floor to address the audience, including those pitching jobs) has had a negative effect on your audience, could reflect badly on you as the organiser, or your ability to get an audience to a future meetup, then I think you are within your rights to either reject further submissions from them, or at least insist on a dry run of any talk prior to being accepted, where you can give feedback in the same way you would if they had actively requested it of you. If the content delivered is just patently offensive or inappropriate, you have no obligation to let a speaker finish their talk.&lt;/p&gt; &lt;p&gt;For the record, I have never had to outright reject someone’s future submissions nor eject a speaker before they finished their talk (Sydney tech communities are really great!), but I would if the situation necessitated it.&lt;/p&gt; &lt;h3 id=&quot;edge-cases&quot;&gt;Edge Cases&lt;/h3&gt; &lt;p&gt;There are some problems I have yet to encounter while organising a meetup, that I hope I will never have to, but still occupy a slot in my list of worries.&lt;/p&gt; &lt;p&gt;Specifically, what if someone chokes on food provided at the meetup, or slips on something and falls, and an ambulance has to be called? Or, what if someone drinks too much and decides to get violent with people or property, and police have to be called? Is anyone liable in this situation? If so, who? The venue? Me, personally? Does the meetup itself have coverage under the venue’s insurance policy? I am sure that the answer to this can vary drastically by jurisdiction and country, but I am wondering if there are any general rules of thumb to follow here, or maybe if I am worrying too much.&lt;/p&gt; &lt;p&gt;If you are knowledgeable about these kinds of issues, please reach out to me privately or share your experience or expertise in a comment. It would be great to learn more about this while in-person meetups are on hiatus.&lt;/p&gt; &lt;h2 id=&quot;succession-planning&quot;&gt;Succession Planning&lt;/h2&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/2021-01-04/roro-mat-gael.jpg&quot; alt=&quot;image roro-mat-gael&quot; style=&quot;width: 50%; float: right; margin-left: 1rem; margin-bottom: 1rem;&quot; /&gt;&lt;/p&gt; &lt;p&gt;Engagement with any kind of work, like any good story, will have a beginning, middle, and end. Organising a meetup is no different: there will come a time where you will need to step back and divest yourself of organisational involvement in your meetup.&lt;/p&gt; &lt;p&gt;Assuming that your meetup has been created as its own entity, and is more than a &lt;a href=&quot;https://en.wikipedia.org/wiki/Cult_of_personality&quot;&gt;cult of personality&lt;/a&gt; of your own making, you will likely &lt;em&gt;want&lt;/em&gt; the meetup to outlast your involvement in it, if for no other reason than to continue your involvement as just another attendee.&lt;/p&gt; &lt;p&gt;I think that the best ways to ensure a smooth transition of responsibility is to have:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Co-organisers&lt;/strong&gt;. The higher your &lt;a href=&quot;https://en.wikipedia.org/wiki/Bus_factor&quot;&gt;bus factor&lt;/a&gt;, the easier handover will be (and the ability to take holidays!). There is probably an upper limit that, if exceeded, results in a &lt;a href=&quot;https://idioms.thefreedictionary.com/too+many+chefs+in+the+kitchen&quot;&gt;too many chefs&lt;/a&gt;-style situation, but I have not hit that yet. Having said that, the biggest meetup organisational team I have worked on has been three people, which has been a fine number.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Long Goodbyes&lt;/strong&gt;. If you manage to recruit another organiser because you plan to step down, try not hand them the keys to the meetup, wish them the best for the next one, and then disappear. I would recommend having them &lt;a href=&quot;https://www.macmillandictionary.com/dictionary/british/shadow_2&quot;&gt;shadow&lt;/a&gt; you for a meetup or two, then take an organiser back seat for the next one or two as your successor takes the lead, and &lt;em&gt;then&lt;/em&gt; fade away into the night.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt; &lt;p&gt;I think you now know everything that I do about organising meetups, save for perhaps some intuitive on-the-fly problem solving skills you naturally develop after having actually organised and run a few meetups (and are impossible for me to enumerate coherently in this post).&lt;/p&gt; &lt;p&gt;I hope you are able to contribute to creating the kinds of communities you would like to see exist and thrive.&lt;/p&gt; &lt;p&gt;My thanks go out to you for reading this all the way to the end, and also to all the previous and current organisers of meetups I am currently involved with, or have been previously involved with, whose shoulders I stand on:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://www.meetup.com/Ruby-On-Rails-Oceania-Sydney&quot;&gt;Ruby on Rails Oceania Sydney (RORO)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://www.meetup.com/elixir-sydney/&quot;&gt;Elixir Sydney&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://www.meetup.com/GraphQL-Sydney/&quot;&gt;GraphQL Sydney&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://www.meetup.com/Sydney-Elm-Meetup/&quot;&gt;Elm Sydney&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Thanks also go to the organisers of other particular meetups I attend, and have been inspired by, or flagrantly stolen ideas from (no surprises that they are also web development-focused groups):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://www.meetup.com/SydCSS/&quot;&gt;SydCSS&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://www.sydjs.com/&quot;&gt;SydJS&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://www.meetup.com/React-Sydney/&quot;&gt;React Sydney&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;There are so many differing opinions about the ways to run meetups, that I have no doubt that there are ways I can improve the way I run mine. So, if you have any feedback, suggestions, or ideas, by all means please leave a comment or reach out to me directly.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/2021-01-04/roro-at-airtasker.jpg&quot; alt=&quot;image roro-at-airtasker&quot; /&gt;&lt;/p&gt;</content><author><name>Paul Fioravanti</name><email>paul@paulfioravanti.com</email><uri>https://www.paulfioravanti.com</uri></author><category term="meetups"/><category term="public-speaking"/><summary type="html">Looking to take your love of meetups to the next level? Try organising!</summary></entry><entry><title type="html">Oi! Kochi: Japanese Feature Phone-Driven Development</title><link href="https://www.paulfioravanti.com/blog/oi-kochi/" rel="alternate" type="text/html" title="Oi! Kochi: Japanese Feature Phone-Driven Development"/><published>2021-01-03T21:05:00+11:00</published><updated>2021-01-03T21:05:00+11:00</updated><id>https://www.paulfioravanti.com/blog/oi-kochi</id><content type="html" xml:base="https://www.paulfioravanti.com/blog/oi-kochi/">&lt;p style=&quot;margin-bottom: 1em;&quot;&gt;&lt;img src=&quot;/assets/images/2021-01-03/ryoma-reading-oi-kochi.gif&quot; alt=&quot;img ryoma-reading-oi-kochi&quot; style=&quot;width: 12%; display: inline;&quot; /&gt; &lt;img src=&quot;/assets/images/2021-01-03/oi-kochi-banner.gif&quot; alt=&quot;img oi-kochi-banner&quot; style=&quot;width: 60%; display: inline;&quot; /&gt; &lt;img src=&quot;/assets/images/2021-01-03/kochi-map.gif&quot; alt=&quot;img kochi-map&quot; style=&quot;width: 25%; display: inline;&quot; /&gt;&lt;/p&gt; &lt;p&gt;Back in the early 2000s, when I was on the &lt;a href=&quot;http://jetprogramme.org/en/&quot;&gt;JET Programme&lt;/a&gt; in &lt;a href=&quot;https://en.wikipedia.org/wiki/K%C5%8Dchi_Prefecture&quot;&gt;Kochi Prefecture&lt;/a&gt;, I was in charge of an English/Japanese bilingual community newsletter called &lt;em&gt;Oi! Kochi&lt;/em&gt; (オーイ！&lt;ruby&gt;高知&lt;rt&gt;こうち&lt;/rt&gt;&lt;/ruby&gt;).&lt;/p&gt; &lt;div style=&quot;display: block; text-align: center;&quot;&gt; &lt;figure style=&quot;float: right; display: inline-block; margin: 1em; width: 60%;&quot;&gt; &lt;img src=&quot;/assets/images/2021-01-03/oi-kochi-md.jpg&quot; alt=&quot;Oi! Kochi Minidisc&quot; /&gt; &lt;figcaption style=&quot;text-align: center;&quot;&gt; I made sure to use only the &lt;a href=&quot;https://en.wikipedia.org/wiki/MiniDisc&quot;&gt;latest technology&lt;/a&gt; when recording interviews. &lt;/figcaption&gt; &lt;/figure&gt; &lt;/div&gt; &lt;p&gt;Since my position was &lt;a href=&quot;http://jetprogramme.org/en/positions/&quot;&gt;Coordinator of International Relations&lt;/a&gt;, my mere involvement with the newsletter automatically fulfilled its “international relations” objective, giving me pretty much free reign over what content appeared in it.&lt;/p&gt; &lt;p&gt;I did not fancy myself as a journalist at all, and had no idea what I was doing (my lack of logo design skills may have clued you in on that, not that current me would be able to do any better…; for those curious, yes, that is &lt;a href=&quot;https://en.wikipedia.org/wiki/Sakamoto_Ry%C5%8Dma&quot;&gt;Sakamoto Ryōma&lt;/a&gt; on the left), but it was great fun being able to &lt;em&gt;act&lt;/em&gt; as a reporter, editor, and translator to produce this thing that was being read by others.&lt;/p&gt; &lt;p&gt;After the third issue I had been involved with was released, I was informed that due to departmental budget cuts, &lt;em&gt;Oi! Kochi&lt;/em&gt; no longer had a print budget, and hence it would be the final issue.&lt;/p&gt; &lt;p&gt;Not wanting my run to end so soon, I thought that this might be a good opportunity to attempt to put &lt;em&gt;Oi! Kochi&lt;/em&gt; not just on the web, but attempt to give it a space within the &lt;a href=&quot;https://en.wikipedia.org/wiki/Closed_platform&quot;&gt;walled garden&lt;/a&gt; that was Japan’s fledgling mobile internet.&lt;/p&gt; &lt;div style=&quot;display: block; text-align: center;&quot;&gt; &lt;figure style=&quot;float: left; display: inline-block; margin: 0; margin-right: 1em; width: 50%;&quot;&gt; &lt;img src=&quot;/assets/images/2021-01-03/Softbank911sh-01.jpg&quot; alt=&quot;A Softbank911sh-01 feature phone.&quot; /&gt; &lt;figcaption style=&quot;text-align: center;&quot;&gt; Photo from &lt;a href=&quot;https://upload.wikimedia.org/wikipedia/ja/3/31/Softbank911sh-01.jpg&quot;&gt;Wikimedia&lt;/a&gt;. &lt;/figcaption&gt; &lt;/figure&gt; &lt;/div&gt; &lt;p&gt;So, without knowing anything about code whatsoever, I attempted to make some &lt;a href=&quot;https://en.wikipedia.org/wiki/HTML&quot;&gt;HTML&lt;/a&gt; web pages. Japan was predominantly using clamshell-style &lt;a href=&quot;https://en.wikipedia.org/wiki/Feature_phone#Japan&quot;&gt;feature phones&lt;/a&gt;, and sites developed for them used &lt;a href=&quot;https://en.wikipedia.org/wiki/C-HTML&quot;&gt;C-HTML&lt;/a&gt;, so that is what I used for the mobile pages.&lt;/p&gt; &lt;p&gt;I recall having eventually put the pages &lt;em&gt;somewhere&lt;/em&gt; on the internet, but I do not think the Kochi Prefectural Government gave me any space on their servers (not that I understood what a server was back then…), but probably used some kind of free service and shared the link with whomever would humour me. Those pages are, unsurprisingly, long gone.&lt;/p&gt; &lt;p&gt;However, I did still have the codebases lying around, and figured it would be nice to see if they could be deployed back out on the internet, so the content does not stay lost. So, here they are!&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://www.paulfioravanti.com/oi-kochi/web/&quot;&gt;Oi! Kochi Web Pages&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://www.paulfioravanti.com/oi-kochi/mobile/&quot;&gt;Oi! Kochi Mobile Pages&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Revel in their &lt;a href=&quot;https://en.wikipedia.org/wiki/Web_2.0#Web_1.0&quot;&gt;Web 1.0&lt;/a&gt;-ness!&lt;/p&gt; &lt;p&gt;I have also made the codebases, and scans of the print versions of the newsletter, available in the &lt;a href=&quot;https://github.com/paulfioravanti/oi-kochi&quot;&gt;Oi! Kochi GitHub repository&lt;/a&gt;. If you have the courage to actually look at the code, remember, it was written a long time ago…&lt;/p&gt; &lt;h2 id=&quot;viewing-pages&quot;&gt;Viewing Pages&lt;/h2&gt; &lt;div style=&quot;display: block; text-align: center;&quot;&gt; &lt;figure style=&quot;float: right; display: inline-block; margin: 1em; width: 40%;&quot;&gt; &lt;img src=&quot;/assets/images/2021-01-03/paul-on-feature-phone.jpg&quot; alt=&quot;Paul on a feature phone&quot; /&gt; &lt;figcaption style=&quot;text-align: center;&quot;&gt; A younger me on a feature phone, with mandatory extra-long straps, which was &lt;a href=&quot;https://www.youtube.com/watch?v=a6Dc7W6jXCo&quot;&gt;the style at the time&lt;/a&gt;. &lt;/figcaption&gt; &lt;/figure&gt; &lt;/div&gt; &lt;p&gt;For the most period-accurate browsing experience (simulating how the pages would have looked on my &lt;a href=&quot;https://en.wikipedia.org/wiki/Au_(mobile_phone_company)&quot;&gt;AU by KDDI&lt;/a&gt; phone), I would have recommended using an emulator that replicates the old Japanese feature phones, the closest of which I’ve ever found is viewing the pages using the &lt;a href=&quot;https://www.mozilla.org/en-US/firefox/new/&quot;&gt;Firefox&lt;/a&gt; browser, along with the &lt;a href=&quot;http://firemobilesimulator.org/&quot;&gt;FireMobileSimulator&lt;/a&gt; add-on.&lt;/p&gt; &lt;p&gt;Unfortunately, FireMobileSimulator is now dead and buried, with no future releases planned, and it does not work on current versions of Firefox. There are also no alternatives that I could find.&lt;/p&gt; &lt;p&gt;The only consolation is that you are able to trigger &lt;a href=&quot;https://en.wikipedia.org/wiki/Access_key&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;accesskey&lt;/code&gt; attributes&lt;/a&gt; for links (ie for a link with text “&lt;strong&gt;1. English&lt;/strong&gt;”, you could press the :one: number key on the feature phone to directly “click” on that link) in Firefox and Chrome. See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/accesskey&quot;&gt;Mozilla’s &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;accesskey&lt;/code&gt; page&lt;/a&gt; for the key shortcuts for your platform and browser.&lt;/p&gt;</content><author><name>Paul Fioravanti</name><email>paul@paulfioravanti.com</email><uri>https://www.paulfioravanti.com</uri></author><category term="jet-programme"/><category term="html"/><category term="kochi"/><category term="japan"/><category term="mobile-phones"/><category term="feature-phones"/><category term="chtml"/><category term="i-mode"/><category term="日本"/><category term="高知県"/><category term="ガラケー"/><summary type="html">During Japan&apos;s mobile web infancy, I wanted my little community newsletter to ride the wave of the future.</summary></entry><entry><title type="html">Speak at a Meetup</title><link href="https://www.paulfioravanti.com/blog/speak-at-meetups/" rel="alternate" type="text/html" title="Speak at a Meetup"/><published>2020-12-06T19:05:00+11:00</published><updated>2020-12-06T19:05:00+11:00</updated><id>https://www.paulfioravanti.com/blog/speak-at-meetups</id><content type="html" xml:base="https://www.paulfioravanti.com/blog/speak-at-meetups/">&lt;p&gt;Meetups are great! The best ones provide a sense of community where the curious and the enthusiastic can engage together to create a great experience that draws people in and keeps them coming back.&lt;/p&gt; &lt;p&gt;Since my primary experience with meetups are those related to programming and technology (as of this writing I organise the &lt;a href=&quot;https://www.meetup.com/elixir-sydney&quot;&gt;Elixir Sydney&lt;/a&gt;, &lt;a href=&quot;https://www.meetup.com/GraphQL-Sydney/&quot;&gt;GraphQL Sydney&lt;/a&gt;, and &lt;a href=&quot;https://www.meetup.com/Sydney-Elm-Meetup/&quot;&gt;Elm Sydney&lt;/a&gt; meetups, and have previously organised the &lt;a href=&quot;https://www.meetup.com/Ruby-On-Rails-Oceania-Sydney/&quot;&gt;Ruby on Rails Oceania Sydney&lt;/a&gt; meetup), this post will focus on meetups where there is typically a roster of talks on software/technical topics, and a good deal of socialising.&lt;/p&gt; &lt;h2 id=&quot;why-give-a-talk&quot;&gt;Why Give a Talk?&lt;/h2&gt; &lt;p&gt;If you are a developer, at any stage of your career or training, you should &lt;em&gt;strongly consider&lt;/em&gt; finding a local meetup group (on &lt;a href=&quot;https://www.meetup.com/&quot;&gt;Meetup&lt;/a&gt; most likely), and do a talk on something you have worked on, or have learned.&lt;/p&gt; &lt;h3 id=&quot;develop-a-new-skill&quot;&gt;Develop a New Skill&lt;/h3&gt; &lt;p&gt;Presenting at a meetup is a win/win situation.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/2020-12-06/elixir-sydney.jpg&quot; alt=&quot;Elixir Sydney Nerves talk&quot; /&gt;&lt;/p&gt; &lt;p&gt;You, the speaker, get to practise public speaking, a skill that may not be exercised much in your day to day activities, and your audience gets to leverage your knowledge to learn new things that can potentially help them in their own activities.&lt;/p&gt; &lt;p&gt;You may be apprehensive toward public speaking, particularly if you have previously had negative experiences with it.&lt;/p&gt; &lt;p&gt;However, I posit that since technical meetups are typically attended by people who lean more towards identifying as introverts than extroverts, and hence viscerally understand the courage that it takes to deliver a talk in front of your peers, you will find them to be a sympathetic audience who &lt;em&gt;want&lt;/em&gt; you to succeed. Pre-talk nerves will never go away, but they can feel less debilitating when you feel that your audience has your back.&lt;/p&gt; &lt;p&gt;Also, if you have ever thought that you would like to present at a big conference, then a meetup audience is a great start point to get practice and hone your skills.&lt;/p&gt; &lt;h3 id=&quot;add-to-your-portfolio&quot;&gt;Add to your Portfolio&lt;/h3&gt; &lt;p&gt;Doing a meetup talk provides takeaway artefacts of &lt;a href=&quot;https://www.thebalancecareers.com/what-are-soft-skills-2060852&quot;&gt;“soft skills”&lt;/a&gt;, which are becoming ever more important in development teams (which makes me feel they should be re-branded as “essential skills”).&lt;/p&gt; &lt;p&gt;You can take your talk/slide deck and essentially open source it on a wide variety of platforms, much like you would with your open source code (eg &lt;a href=&quot;https://speakerdeck.com/&quot;&gt;Speaker Deck&lt;/a&gt;, &lt;a href=&quot;https://www.slideshare.net/&quot;&gt;SlideShare&lt;/a&gt;, or even &lt;a href=&quot;https://github.com/&quot;&gt;Github&lt;/a&gt; if your presentation is written in &lt;a href=&quot;https://daringfireball.net/projects/markdown/syntax&quot;&gt;Markdown&lt;/a&gt;).&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/2020-12-06/elixir-australia.jpg&quot; alt=&quot;Elixir Australia Online&quot; /&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Coronavirus_disease_2019&quot;&gt;COVID-19&lt;/a&gt; has pushed many meetups out of &lt;a href=&quot;https://en.wiktionary.org/wiki/meatspace&quot;&gt;meatspace&lt;/a&gt; and into online platforms like &lt;a href=&quot;https://zoom.us/&quot;&gt;Zoom&lt;/a&gt; (hopefully only temporarily…), allowing your talk to be recorded easily. Check and see if your target meetup records talks, and hopefully they have a space to publish content, like a &lt;a href=&quot;https://www.youtube.com/&quot;&gt;YouTube&lt;/a&gt; channel.&lt;/p&gt; &lt;p&gt;These artefacts, in their various forms, can provide a great addition to your resume, or maybe even ammunition you can take in to your next pay-rise negotiations.&lt;/p&gt; &lt;h3 id=&quot;show-something-off&quot;&gt;Show Something Off&lt;/h3&gt; &lt;p&gt;Meetups provide you with a captive audience to directly promote and show off something awesome you have built lately, or maybe pose a question or problems that you’d like input and/or discussion around.&lt;/p&gt; &lt;p&gt;Discussion about any thought-provoking issues have often continued after the meetup ends, and &lt;em&gt;you&lt;/em&gt; get to take the credit for being the catalyst!&lt;/p&gt; &lt;h3 id=&quot;practise-demoing&quot;&gt;Practise Demoing&lt;/h3&gt; &lt;p&gt;If you are up to the challenge, doing a talk can be a catalyst to practise demoing something in front of an audience, which is significantly different to just showing someone else what is currently on your screen.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/2020-12-06/roro-sonic-pi.jpg&quot; alt=&quot;RORO Sonic Pi&quot; /&gt;&lt;/p&gt; &lt;p&gt;Being able to effectively demo, and recover from any issues that occur during them (and unless you have adequately appeased the &lt;a href=&quot;http://www2.rdrop.com/~paulmck/DemoGods/&quot;&gt;demo gods&lt;/a&gt;, they will happen), is a highly sought after developer (and &lt;a href=&quot;https://en.wikipedia.org/wiki/Presales&quot;&gt;presales&lt;/a&gt;) superpower.&lt;/p&gt; &lt;h3 id=&quot;become-an-expert&quot;&gt;Become an Expert&lt;/h3&gt; &lt;p&gt;Doing a talk can have the pleasant side effect of making you known in your community as an expert on something, even if don’t consider yourself one!&lt;/p&gt; &lt;p&gt;If you teach someone something that they did not know before, then, to them, you are an expert.&lt;/p&gt; &lt;p&gt;Furthermore, the questions that you get from others about what you know can lead down extra knowledge-gathering paths to further refine your abilities, to the point where even &lt;em&gt;you&lt;/em&gt; must acknowledge your own expertise. Not a bad self-fulfilling prophecy!&lt;/p&gt; &lt;h3 id=&quot;your-perspective-is-unique&quot;&gt;Your Perspective is Unique&lt;/h3&gt; &lt;p&gt;Even if you think the content of your talk &lt;em&gt;must&lt;/em&gt; have been covered in a previous meetup, or is just too obvious to talk about, your perspective on it (and the way you present it) is unique to you, so never let that stop you from giving a talk.&lt;/p&gt; &lt;p&gt;People love to hear presentations about things they already know because it makes them feel smart about understanding something worth presenting.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/2020-12-06/roro-jora.jpg&quot; alt=&quot;RORO Jora&quot; /&gt;&lt;/p&gt; &lt;p&gt;If you are the one presenting it, you unconsciously join the league of experts about that subject in your audience’s mind, and I will bet anything that even those experienced in the topic you present will learn &lt;em&gt;something&lt;/em&gt; from your take.&lt;/p&gt; &lt;h3 id=&quot;land-a-job&quot;&gt;Land a Job&lt;/h3&gt; &lt;p&gt;I have friends who have received offers to go and interview at organisations, and consequently get jobs there, based solely on having done a talk at a meetup, and impressing their future peers in the audience.&lt;/p&gt; &lt;p&gt;This scenario obviously does not play out at every meetup, but it goes to show you that you never know who could be in your audience, and what opportunities sharing your knowledge could provide you.&lt;/p&gt; &lt;p&gt;This “making your own luck” scenario is one of the primary reasons I like to specifically appeal to junior developers to do meetup talks. A successful talk delivered to your peers (and they are your peers), can help your job application shine a bit brighter from the pack :sparkles:&lt;/p&gt; &lt;h2 id=&quot;leverage-organisers&quot;&gt;Leverage Organisers&lt;/h2&gt; &lt;p&gt;Speaking from experience, meetup organisers are &lt;em&gt;always&lt;/em&gt; hungry for new content. Finding talks is &lt;em&gt;easily&lt;/em&gt; the most difficult and time-consuming part of technical meetup organisation.&lt;/p&gt; &lt;p&gt;If you are willing to freely spend time and effort creating content for a meetup, then meetup organisers will very likely be happy to act as a sounding board for your talk content and provide feedback before you present (I certainly do, with pleasure!).&lt;/p&gt; &lt;p&gt;They will have seen a lot of talks, have likely delivered some themselves, and will be invested in making your talk come out great. Good talks make for good meetups, which then attracts more good talks in a virtuous circle, so your success is their success!&lt;/p&gt; &lt;h2 id=&quot;leap-of-faith&quot;&gt;Leap of Faith&lt;/h2&gt; &lt;p&gt;Deciding to take on delivering a technical talk is a hard first step to take, but remember, it is &lt;em&gt;good&lt;/em&gt; to throw yourself out of your comfort zone and try something different.&lt;/p&gt; &lt;p&gt;Who knows, you might even end up liking it and wanting to do more, which could lead to all manner of new doors opening for you. Take that first step and find out!&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/2020-12-06/paul-hello.jpg&quot; alt=&quot;Paul Hello&quot; /&gt;&lt;/p&gt;</content><author><name>Paul Fioravanti</name><email>paul@paulfioravanti.com</email><uri>https://www.paulfioravanti.com</uri></author><category term="meetups"/><category term="public-speaking"/><summary type="html">Worked on a project or learned something new that others might not know about? Share your knowledge with your peers at a local meetup!</summary></entry><entry><title type="html">Playing in Plaid’s Sandbox</title><link href="https://www.paulfioravanti.com/blog/plaid-sandbox-api/" rel="alternate" type="text/html" title="Playing in Plaid’s Sandbox"/><published>2020-11-29T18:15:00+11:00</published><updated>2020-11-29T18:15:00+11:00</updated><id>https://www.paulfioravanti.com/blog/plaid-sandbox-api</id><content type="html" xml:base="https://www.paulfioravanti.com/blog/plaid-sandbox-api/">&lt;p&gt;I had a software client who required an integration to &lt;a href=&quot;https://plaid.com/&quot;&gt;Plaid&lt;/a&gt;, a financial technology company specializing in bank login verification.&lt;/p&gt; &lt;p&gt;If you are in a similar position, and are attempting to get started with &lt;a href=&quot;https://plaid.com/docs/api/&quot;&gt;Plaid’s Application Programming Interface (API)&lt;/a&gt;, then this post may be of assistance to you in setting up and using their &lt;a href=&quot;https://github.com/plaid/plaid-postman&quot;&gt;Plaid Postman Collection&lt;/a&gt; with &lt;a href=&quot;https://www.postman.com/&quot;&gt;Postman&lt;/a&gt; (if not, then this post will probably not make that much sense, and I will not be offended if you bail out now).&lt;/p&gt; &lt;p&gt;I found that even with the &lt;a href=&quot;https://plaid.com/docs/&quot;&gt;Plaid documentation&lt;/a&gt;, it still took me quite a bit of time to figure out how to get valid responses from the &lt;a href=&quot;https://plaid.com/docs/sandbox/&quot;&gt;Plaid Sandbox&lt;/a&gt;. I originally submitted the content of this post as a &lt;a href=&quot;https://github.com/plaid/plaid-postman/pull/10&quot;&gt;documentation pull request&lt;/a&gt;, but it seems that Plaid was not interested, and so I figure it can live here on my blog.&lt;/p&gt; &lt;p&gt;The following is meant to be read &lt;em&gt;after&lt;/em&gt; you have completed the steps in the &lt;a href=&quot;https://github.com/plaid/plaid-postman/tree/451f5bb701a0c5291732bd1f8be3c20884e94fa5#getting-started&quot;&gt;Getting Started&lt;/a&gt; section of the &lt;a href=&quot;https://github.com/plaid/plaid-postman/blob/master/README.md&quot;&gt;Plaid Postman &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;README&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;h2 id=&quot;making-plaid-api-calls&quot;&gt;Making Plaid API calls&lt;/h2&gt; &lt;p&gt;Most Plaid API calls require a &lt;a href=&quot;https://plaid.com/docs/#plaid-tokens-public_token-access_token-or-asset_report_token&quot;&gt;Plaid Token&lt;/a&gt; in the form of an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;access_token&lt;/code&gt; (or an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;asset_report_token&lt;/code&gt; when dealing with a &lt;a href=&quot;https://plaid.com/docs/#assets&quot;&gt;Plaid Asset&lt;/a&gt;).&lt;/p&gt; &lt;p&gt;After you have imported and configured the request collection in Postman, if you open up the &lt;em&gt;Retrieve Auth&lt;/em&gt; request and click the &lt;em&gt;Send&lt;/em&gt; button, you will receive something like the following error:&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/2020-11-29/retrieve-auth-no-access-token.png&quot; alt=&quot;retrieve-auth-no-access-token&quot; /&gt;&lt;/p&gt; &lt;p&gt;Opening up the &lt;em&gt;Body&lt;/em&gt; tab of the request will reveal the issue:&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/2020-11-29/retrieve-auth-default-body.png&quot; alt=&quot;retrieve-auth-default-body&quot; /&gt;&lt;/p&gt; &lt;p&gt;You can see that the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;access_token&lt;/code&gt; contains an invalid place holder (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;ENTER_ACCESS_TOKEN_HERE&quot;&lt;/code&gt;), leading to the request failing. So, how can you use the Postman Collection to generate a valid &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;access_token&lt;/code&gt;?&lt;/p&gt; &lt;p&gt;You will need to emulate the &lt;a href=&quot;https://plaid.com/docs/#exchange-token-flow&quot;&gt;Exchange Token Flow&lt;/a&gt; process by using the following included API requests:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;em&gt;Create Item [Sandbox Only]&lt;/em&gt;&lt;/li&gt; &lt;li&gt;&lt;em&gt;Exchange Token&lt;/em&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Only then can you begin using the generated &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;access_token&lt;/code&gt; to make other requests. So, let’s set about doing just that.&lt;/p&gt; &lt;h3 id=&quot;create-a-public-token&quot;&gt;Create a Public Token&lt;/h3&gt; &lt;p&gt;First, you need to &lt;a href=&quot;https://plaid.com/docs/#creating-public-tokens&quot;&gt;create a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public_token&lt;/code&gt;&lt;/a&gt; using the &lt;em&gt;Create Item [Sandbox Only]&lt;/em&gt; request. Simply open it up, click the &lt;em&gt;Send&lt;/em&gt; button, and you should see a response similar to the following:&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/2020-11-29/create-public-token.png&quot; alt=&quot;create-public-token&quot; /&gt;&lt;/p&gt; &lt;p&gt;If you are going to need to use the &lt;a href=&quot;https://plaid.com/docs/#assets&quot;&gt;Assets API&lt;/a&gt;, then make sure you open up the Body tab of the request and add &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;assets&quot;&lt;/code&gt; to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;initial_products&lt;/code&gt; array, and &lt;em&gt;then&lt;/em&gt; generate your token. Otherwise, your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public_token&lt;/code&gt; will not have the correct permissions set to use &lt;a href=&quot;https://plaid.com/docs/#assets&quot;&gt;Assets&lt;/a&gt;:&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/2020-11-29/create-public-token-with-assets-product.png&quot; alt=&quot;create-public-token-with-assets-product&quot; /&gt;&lt;/p&gt; &lt;h3 id=&quot;create-an-access-token&quot;&gt;Create an Access Token&lt;/h3&gt; &lt;p&gt;Next, use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public_token&lt;/code&gt; you generated in the previous step to generate an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;access_token&lt;/code&gt; with the &lt;em&gt;Exchange Token&lt;/em&gt; request.&lt;/p&gt; &lt;p&gt;Paste your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public_token&lt;/code&gt; into the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;public_token&quot;&lt;/code&gt; field into the &lt;em&gt;Body&lt;/em&gt; section of the request. Click the &lt;em&gt;Send&lt;/em&gt; button, and you should see a response similar to the following:&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/2020-11-29/create-access-token-from-public-token.png&quot; alt=&quot;create-access-token-from-public-token&quot; /&gt;&lt;/p&gt; &lt;p&gt;An &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;access_token&lt;/code&gt; associated to an Item does not expire, so you can use it in all of your requests. The Postman Collection has an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;access_token&lt;/code&gt; environment variable field available where you can store your generated access token, so I would suggest putting your newly generated token in there.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/2020-11-29/add-access-token-to-env-variables.png&quot; alt=&quot;add-access-token-to-env-variables&quot; /&gt;&lt;/p&gt; &lt;h3 id=&quot;use-access-token-in-api-calls&quot;&gt;Use Access Token in API Calls&lt;/h3&gt; &lt;p&gt;Now, go back to the &lt;em&gt;Retrieve Auth&lt;/em&gt; request that failed earlier, open up the &lt;em&gt;Body&lt;/em&gt; of the request, and set the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;access_token&lt;/code&gt; field to be a reference to the access token set in your environment variables. Do this by changing the value to be &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;{{access_token}}&quot;&lt;/code&gt;. Then, click the &lt;em&gt;Send&lt;/em&gt; button, and you should see a successful response.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/2020-11-29/retrieve-auth-with-access-token.png&quot; alt=&quot;retrieve-auth-with-access-token&quot; /&gt;&lt;/p&gt; &lt;p&gt;You can now repeat this step for any other Plaid API that requires an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;access_token&lt;/code&gt;.&lt;/p&gt; &lt;h3 id=&quot;create-an-asset-report-token&quot;&gt;Create an Asset Report Token&lt;/h3&gt; &lt;p&gt;As well as using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;access_tokens&lt;/code&gt;, Plaid Asset Reports have their own &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;asset_report_token&lt;/code&gt; that need to be used when using the &lt;em&gt;Retrieve an Asset Report&lt;/em&gt; request.&lt;/p&gt; &lt;p&gt;You generate an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;asset_report_token&lt;/code&gt; using the &lt;em&gt;Create Asset Report&lt;/em&gt; request.&lt;/p&gt; &lt;p&gt;Open up the request &lt;em&gt;Body&lt;/em&gt; tab, and add a reference to your access token (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;{{access_token}}&quot;&lt;/code&gt;) to the array in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;access_tokens&lt;/code&gt; field. Then, click the &lt;em&gt;Send&lt;/em&gt; button, and you should see a response similar to the following:&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/2020-11-29/create-asset-report-token-with-access-token.png&quot; alt=&quot;create-asset-report-token-with-access-token&quot; /&gt;&lt;/p&gt; &lt;p&gt;(The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;options&lt;/code&gt; object that is included by default in the &lt;em&gt;Body&lt;/em&gt; was removed here for brevity).&lt;/p&gt; &lt;p&gt;Similar to an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;access_token&lt;/code&gt;, an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;asset_report_token&lt;/code&gt; also does not expire, so you can use it in all of your asset report-related requests.&lt;/p&gt; &lt;p&gt;The Postman Collection has an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;asset_report_token&lt;/code&gt; environment variable field available where you can store your generated token, so I would suggest putting it here with your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;access_token&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/2020-11-29/add-asset-report-token-to-env-variables.png&quot; alt=&quot;add-asset-report-token-to-env-variables&quot; /&gt;&lt;/p&gt; &lt;h3 id=&quot;use-asset-report-token-in-api-calls&quot;&gt;Use Asset Report Token in API Calls&lt;/h3&gt; &lt;p&gt;Now, you can try an API request like the &lt;em&gt;Retrieve an Asset Report (JSON)&lt;/em&gt; request, which requires an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;asset_report_token&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Open up the Body of the request, and set the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;asset_report_token&lt;/code&gt; field to be a reference to the asset report token set in your environment variables (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;{{asset_report_token}}&quot;&lt;/code&gt;). Then, click the &lt;em&gt;Send&lt;/em&gt; button, and you should see a successful response.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/assets/images/2020-11-29/retrieve-asset-report-with-asset-report-token.png&quot; alt=&quot;retrieve-asset-report-with-asset-report-token&quot; /&gt;&lt;/p&gt; &lt;p&gt;You should now be all set up and ready to begin playing in Plaid’s Sandbox with any API that requires an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;access_token&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;asset_report_token&lt;/code&gt;.&lt;/p&gt;</content><author><name>Paul Fioravanti</name><email>paul@paulfioravanti.com</email><uri>https://www.paulfioravanti.com</uri></author><category term="plaid"/><category term="postman"/><category term="api"/><summary type="html">Making API calls to Plaid&apos;s Sandbox Environment: The Missing Manual</summary></entry><entry><title type="html">My JLPT N1 Study Guide</title><link href="https://www.paulfioravanti.com/blog/jlpt-study-guide/" rel="alternate" type="text/html" title="My JLPT N1 Study Guide"/><published>2020-11-22T23:05:00+11:00</published><updated>2021-05-02T19:00:00+10:00</updated><id>https://www.paulfioravanti.com/blog/jlpt-study-guide</id><content type="html" xml:base="https://www.paulfioravanti.com/blog/jlpt-study-guide/">&lt;p&gt;In my life, I have failed the highest level of the &lt;a href=&quot;https://www.jlpt.jp/e/&quot;&gt;Japanese Language Proficiency Test&lt;/a&gt; (JLPT) 7 times.&lt;/p&gt; &lt;p&gt;Five of my attempts on the &lt;a href=&quot;https://en.wikipedia.org/wiki/Japanese-Language_Proficiency_Test#Previous_format_(1984%E2%80%932009)&quot;&gt;old Level 1 exam&lt;/a&gt; (before it became &lt;a href=&quot;https://www.jlpt.jp/e/about/levelsummary.html&quot;&gt;N1&lt;/a&gt;) were when I was living and working in Japan, using Japanese full-time. I felt like my abilities were improving, so every &lt;ruby&gt;不合格&lt;rt&gt;ふごうかく&lt;/rt&gt;&lt;/ruby&gt; (Failure) notification stung a little harder than the last, but, well…maybe I would pass it the following year.&lt;/p&gt; &lt;p&gt;As the time came for me to move out of Japan, I wanted to pass the JLPT &lt;em&gt;just once&lt;/em&gt; to get a certificate. So, I cut my losses, attempted the old Level 2 exam, passed it, and appeased myself with the relief that I would finally be free of these infernal tests.&lt;/p&gt; &lt;p&gt;Fast forward 8 years.&lt;/p&gt; &lt;p&gt;For whatever reason, I started to get antsy about leaving my JLPT attempt in a failed state for so long: it beat me, and that sucked, and &lt;em&gt;I&lt;/em&gt; sucked, and I was obviously not over it.&lt;/p&gt; &lt;p&gt;But before making another attempt, though, I had to figure out what went wrong, why I had continued to fail all those other times, re-strategise my study plans, and actually execute them: &lt;em&gt;properly&lt;/em&gt;, this time.&lt;/p&gt; &lt;p&gt;Here is what got me over the line.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;The following contains to my personal opinions and experiences with the N1 exam specifically: nothing is meant to be prescriptive (since everyone learns differently), and the approaches may not be relevant for all levels of the JLPT. My hope is that you will find at least something of reference as you formulate your own study plan.&lt;/p&gt; &lt;/blockquote&gt; &lt;h2 id=&quot;mindset-change&quot;&gt;Mindset Change&lt;/h2&gt; &lt;p&gt;There were years where I attempted to study for the JLPT, and others where I would promptly forget I applied to take it, turn up on the day, and test my luck.&lt;/p&gt; &lt;p&gt;Neither scenario resulted in significantly different scores, though, so it would seem that the net value of any dedicated study I did, and any general improvements in the language gained during the year, was zero.&lt;/p&gt; &lt;p&gt;Therein lies the need for the mindset change: &lt;strong&gt;JLPT N1 does not test your Japanese abilities so much as it tests your ability to pass JLPT N1&lt;/strong&gt;.&lt;/p&gt; &lt;p&gt;The exam demands that:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;you remember a lot of grammar patterns, &lt;em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Kanji&quot;&gt;kanji&lt;/a&gt;&lt;/em&gt;, and vocabulary that are used infrequently in everyday Japanese&lt;/li&gt; &lt;li&gt;you speed-read excerpts from novels and articles and be able to interpret and answer nuanced questions about them&lt;/li&gt; &lt;li&gt;you keep a mental track of the results of multiple weaving threads of conversations (which feel like they are deliberately engineered to trick you) before finding out which one is related to the question&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;It is a high-stress artificial environment requiring deep focus, where there is no time to waste when considering questions: you have to instinctively know answers &lt;em&gt;immediately&lt;/em&gt;, or take your best guess and move on. This is not Japanese in a real life context.&lt;/p&gt; &lt;p&gt;Naturally-assimilated Japanese abilities will not cut it here: your brain needs to go to the gym to build muscle memory through memorisation drilling exercises. The weights (content) that you train on are determined by the barbells (books) that you use, and N1 barbells are not lightweight.&lt;/p&gt; &lt;h2 id=&quot;buy-textbooks&quot;&gt;Buy Textbooks&lt;/h2&gt; &lt;p&gt;A cursory search on any internet book seller’s site for “&lt;ruby&gt;日本語&lt;rt&gt;にほんご&lt;/rt&gt;能力&lt;rt&gt;のうりょく&lt;/rt&gt;試験&lt;rt&gt;しけん&lt;/rt&gt;&lt;/ruby&gt;” yields more options than you could possibly read through, and a further search querying which set of books are “the best” will likely net you enough opinions to cause &lt;a href=&quot;https://en.wikipedia.org/wiki/Analysis_paralysis&quot;&gt;analysis paralysis&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;I cannot help decide which textbooks would be right for you, but what I can say is that I used the following books in order to get a passing grade for N1 (and can personally recommend them):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The &lt;a href=&quot;https://www.3anet.co.jp/np/list.html?series_id=4&quot;&gt;&lt;ruby&gt;新完全&lt;rt&gt;しんかんぜん&lt;/rt&gt;&lt;/ruby&gt;マスター&lt;/a&gt; (&lt;em&gt;Shin Kanzen Master&lt;/em&gt;) series of books. There is five in the set: one each for grammar (&lt;ruby&gt;文法&lt;rt&gt;ぶんぽう&lt;/rt&gt;&lt;/ruby&gt;), reading comprehension (&lt;ruby&gt;読解&lt;rt&gt;どっかい&lt;/rt&gt;&lt;/ruby&gt;), &lt;em&gt;kanji&lt;/em&gt; (&lt;ruby&gt;漢字&lt;rt&gt;かんじ&lt;/rt&gt;&lt;/ruby&gt;), vocabulary (&lt;ruby&gt;語彙&lt;rt&gt;ごい&lt;/rt&gt;&lt;/ruby&gt;), and listening comprehension (&lt;ruby&gt;聴解&lt;rt&gt;ちょうかい&lt;/rt&gt;&lt;/ruby&gt;). Get them all.&lt;/li&gt; &lt;li&gt;The &lt;a href=&quot;https://www.bonjinsha.com/goods/detail?id=12862&quot;&gt;&lt;ruby&gt;日本語&lt;rt&gt;にほんご&lt;/rt&gt;能力&lt;rt&gt;のうりょく&lt;/rt&gt;試験&lt;rt&gt;しけん&lt;/rt&gt;公式&lt;rt&gt;こうしき&lt;/rt&gt;問題集&lt;rt&gt;もんだいしゅう&lt;/rt&gt;&lt;/ruby&gt;&lt;/a&gt; (JLPT Official Practice Workbook). This book contains practice exams that you will absolutely want to attempt, under exam conditions, about 1-2 weeks before the actual exam. It’s all well and good to study in a vacuum, but you will not want exam day to be the first time you realise you have budgeted your efforts incorrectly and need to cover too much ground in too little time. Do all of the practice exams.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The links above lead to Japan-based book stores which may or may not ship overseas. If you have issues ordering the books, or you do not want to wait for shipping, then definitely check out your local international book store.&lt;/p&gt; &lt;p&gt;If you are in Australia, I recommend checking out &lt;a href=&quot;https://australia.kinokuniya.com/&quot;&gt;Kinokuniya&lt;/a&gt;’s &lt;a href=&quot;https://australia.kinokuniya.com/t/hobby-and-goods/jlpt&quot;&gt;range of JLPT books&lt;/a&gt;, and visiting them if you are in range of a store.&lt;/p&gt; &lt;h2 id=&quot;strict-study-cadence&quot;&gt;Strict Study Cadence&lt;/h2&gt; &lt;p&gt;Are you serious about getting N1? Great, because you are going to need to &lt;em&gt;deliberately&lt;/em&gt; and &lt;em&gt;consciously&lt;/em&gt; set aside time to study &lt;em&gt;every day&lt;/em&gt; for at least a few months. There will inevitably be times where you are tired or you may just not want to study.&lt;/p&gt; &lt;p&gt;Too bad. Do it. Even if you slightly reduce your study time on off-days, you &lt;em&gt;must&lt;/em&gt; keep up your cadence because it is so easy to break, and stay broken.&lt;/p&gt; &lt;p&gt;You are going to run a marathon that is currently only held twice a year, and the price of failure is the time, effort, and cost of having to ramp up for the exam &lt;em&gt;again&lt;/em&gt;, not to mention the opportunity cost of not being able to direct those efforts to some other activity/hobby/venture you may have.&lt;/p&gt; &lt;p&gt;For me, I took an &lt;a href=&quot;https://www.briantracy.com/blog/time-management/the-truth-about-frogs/&quot;&gt;Eat That Frog&lt;/a&gt; approach and front-loaded my Japanese study early in the morning, every morning, during my study marathon period.&lt;/p&gt; &lt;p&gt;So, what is the optimal amount of study time per day? I actually do not know, so I outsourced figuring that out to a software program specifically designed to help you remember things efficiently.&lt;/p&gt; &lt;h2 id=&quot;textbooks---flash-cards&quot;&gt;Textbooks -&amp;gt; Flash Cards&lt;/h2&gt; &lt;p&gt;&lt;a href=&quot;https://apps.ankiweb.net/&quot;&gt;Anki&lt;/a&gt; was the secret weapon to my success at passing JLPT N1.&lt;/p&gt; &lt;p style=&quot;margin: auto; width: 85%;&quot;&gt;&lt;img src=&quot;/assets/images/2020-11-22/kanji-back-template.jpg&quot; alt=&quot;Anki Kanji Back Template&quot; /&gt;&lt;/p&gt; &lt;p&gt;Those textbooks you bought? The content in them is great, but in the confines of those dead trees, none of it is:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;searchable&lt;/li&gt; &lt;li&gt;portable&lt;/li&gt; &lt;li&gt;customisable&lt;/li&gt; &lt;li&gt;extensible&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Therefore, the very first activity in your study plan should be to manually port &lt;em&gt;all&lt;/em&gt; the content in those books into a different format: Anki flash cards.&lt;/p&gt; &lt;p&gt;Yes, &lt;a href=&quot;https://ankiweb.net/about&quot;&gt;AnkiWeb&lt;/a&gt; has a huge set of &lt;a href=&quot;https://ankiweb.net/shared/decks/jlpt&quot;&gt;community-submitted JLPT-related flash card decks&lt;/a&gt; that you can download and use for free. But, I &lt;em&gt;strongly&lt;/em&gt; recommend not using any of them, and instead &lt;strong&gt;roll your own decks as this is a great form of study&lt;/strong&gt;. It will markedly assist in:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;your initial learning and internalising of the content&lt;/li&gt; &lt;li&gt;your revision of the content as Anki works its spaced-revision-ing algorithms over it, surfacing your weaknesses and making sure they improve&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For me, the most logical candidates for books to port over to Anki flash cards ended up being grammar (103 cards), &lt;em&gt;kanji&lt;/em&gt; (394 cards), and vocabulary (239 cards).&lt;/p&gt; &lt;p&gt;After creating the three decks, I would revise each of them every day at the pace that Anki dictated, and slot in listening and reading comprehension study once Anki preventing me from revising the decks further.&lt;/p&gt; &lt;p&gt;During commutes to work, I would continue to revise the cards using &lt;a href=&quot;https://apps.apple.com/au/app/ankimobile-flashcards/id373493387&quot;&gt;AnkiMobile&lt;/a&gt;. You may think that AnkiMobile is pricey for “just an app”, but, in my opinion, it is absolutely worth it given the objective you are trying to achieve, and the price of failure. I highly recommended using it if you can, and you can feel good about helping to support keeping Anki itself free.&lt;/p&gt; &lt;p&gt;Creating the actual flash card decks can be a bit confusing, especially if you do not have a coding background, so I have shared &lt;a href=&quot;https://github.com/paulfioravanti/jlpt&quot;&gt;my JLPT Anki templates&lt;/a&gt;, which you are free to use to create your own cards and/or customise to your liking. Each deck has an example card to get you started.&lt;/p&gt; &lt;p&gt;I have deliberately not shared my own decks on AnkiWeb, or anywhere else, as they are a straight port of copyrighted content. It would not be fair to the book authors, and I am sure their publishers would not be so happy with me if I did. So, definitely roll your own decks.&lt;/p&gt; &lt;h2 id=&quot;results&quot;&gt;Results&lt;/h2&gt; &lt;p&gt;I rinsed and repeated the Anki revision process for a few months, kicked off practice exams a couple of weeks before the day of the JLPT, and eventually entered the exam with a feeling of contentedness knowing that I did all I could possibly have done.&lt;/p&gt; &lt;p&gt;The exam was still really tough, and I left it giving myself a 50-50 chance of passing, since the brutal time limitations still left me having to rush through some sections and guess at some problems.&lt;/p&gt; &lt;p&gt;But on that attempt, on attempt number eight, I finally got it. So, with apologies to &lt;a href=&quot;https://en.wikipedia.org/wiki/Vitas_Gerulaitis#Quote&quot;&gt;Vitas Gerulaitis&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;And let that be a lesson to you all. No JLPT exam beats Paul Fioravanti 8 times in a row.&lt;/p&gt; &lt;/blockquote&gt; &lt;h2 id=&quot;worth-it&quot;&gt;Worth it?&lt;/h2&gt; &lt;p&gt;In order to relieve my poor shoulder of the giant JLPT-shaped chip that had obviously been laying dormant there for years, the effort put in to finally getting that passing mark was absolutely worth it.&lt;/p&gt; &lt;p&gt;From a career perspective, not having Level 1 (or any level) ever stopped me from getting a job while I was living in Japan. I found that most employment-based language “testing” ended up being litmus tests during face-to-face interviews to see if you had any degree of conversational and &lt;em&gt;kanji&lt;/em&gt;-reading fluency.&lt;/p&gt; &lt;p&gt;I guess that if you are planning on doing &lt;a href=&quot;https://en.wikipedia.org/wiki/Japanese-Language_Proficiency_Test#Acceptance_in_Japan&quot;&gt;an activity where passing JLPT N1 is a pre-requisite&lt;/a&gt;, then passing it represents a hard barrier that you must cross. But, back in Australia, my work requires no Japanese at all, so the JLPT qualification is simply a nice feather in my hat, and something I can write a blog post about.&lt;/p&gt; &lt;p&gt;From a language perspective, I absolutely did learn a lot of interesting new words, grammar, and &lt;em&gt;kanji&lt;/em&gt;. There may be a lot of content examined in the JLPT that is not used much in everyday Japanese, but learning it &lt;em&gt;was&lt;/em&gt; valuable. From that point of view, you could say that studying for the JLPT forced my hand in learning Japanese I would not have picked up of my own volition, for which I am thankful.&lt;/p&gt; &lt;h2 id=&quot;postscript-after-n1&quot;&gt;Postscript: After N1&lt;/h2&gt; &lt;p&gt;I do not study Japanese formally any more, but I do keep up my language practice every day, so here is a random list of the forms that that takes.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;I have a Japanese spouse, and my spoken language at home is Japanese. I’m not saying you should marry a Japanese to keep up your language skills, of course, but the fact is, it does help a lot.&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://news.yahoo.co.jp/&quot;&gt;Yahoo Japan News&lt;/a&gt;, regardless of its design being stuck in &lt;a href=&quot;https://en.wikipedia.org/wiki/Web_2.0#Web_1.0&quot;&gt;Web 1.0&lt;/a&gt;, is still the most trafficked news site in Japan, and so is worth checking regularly on that merit alone. If you use &lt;a href=&quot;https://www.google.com/intl/en_au/chrome/&quot;&gt;Google Chrome&lt;/a&gt;, I &lt;em&gt;highly&lt;/em&gt; recommend installing the &lt;a href=&quot;https://chrome.google.com/webstore/detail/rikaikun/jipdnfibhldikgcjhfnomkfpcebammhp?hl=en&quot;&gt;rikaikun&lt;/a&gt; extension to help make reading &lt;em&gt;kanji&lt;/em&gt; a breeze.&lt;/li&gt; &lt;li&gt;I do not watch much Japanese TV, but one show that I will actively watch every week is &lt;a href=&quot;https://www.fujitv.co.jp/widna-show/&quot;&gt;ワイドナショー&lt;/a&gt; (The Wide Show), a news and entertainment show. I like &lt;a href=&quot;https://twitter.com/matsu_bouzu&quot;&gt;Hitoshi Matsumoto&lt;/a&gt;, a comedian and one of the co-hosts, and I find that the programme is good to help get a view on what stories and issues are being talked about in Japan currently. There is no official way to view the show outside of Japan, but you can always find a channel on YouTube that streams it live at 10:00am &lt;a href=&quot;https://en.wikipedia.org/wiki/Japan_Standard_Time&quot;&gt;JST&lt;/a&gt; Sundays.&lt;/li&gt; &lt;li&gt;There are a lot of great YouTube and online video channels originating from Japan. Here is a selection of a few in my subscriptions: &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCVx6RFaEAg46xfAsD2zz16w&quot;&gt;&lt;ruby&gt;日本語&lt;rt&gt;にほんご&lt;/rt&gt;&lt;/ruby&gt;の&lt;ruby&gt;森&lt;rt&gt;もり&lt;/rt&gt;&lt;/ruby&gt;&lt;/a&gt;: &lt;em&gt;Nihongo no Mori&lt;/em&gt;, the Japanese Forest, is a fantastic resource for JLPT videos. If you are actively studying, or you just want the occasional refresher, you want to subscribe to this channel.&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCh-GhnQ7qDQmS6Bz3pGc1Mw&quot;&gt;あかね&lt;ruby&gt;的&lt;rt&gt;てき&lt;/rt&gt;&lt;/ruby&gt;&lt;ruby&gt;日本語&lt;rt&gt;にほんご&lt;/rt&gt;&lt;/ruby&gt;&lt;ruby&gt;教室&lt;rt&gt;きょうしつ&lt;/rt&gt;&lt;/ruby&gt;&lt;/a&gt; (Akane’s Japanese classroom): Akane’s lessons are great for learning contextual Japanese. She roleplays through various situations like job interviewing, talking on the phone, going out to eat, and checking in at a hotel, so there is plenty of practical Japanese to learn from her videos.&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://www3.nhk.or.jp/nhkworld/en/ondemand/program/video/easyjapaneseforwork&quot;&gt;Easy Japanese for Work しごとのにほんご&lt;/a&gt;: If you are planning to work in Japan, or you would just like to learn about use of Japanese in a working environment context, this series of videos by &lt;a href=&quot;https://www3.nhk.or.jp/nhkworld/&quot;&gt;NHK World&lt;/a&gt;, is an &lt;em&gt;excellent&lt;/em&gt; supplement to any formal Japanese studies, with plenty of phrases and cultural nuances you may not find in your textbooks. NHK World’s &lt;a href=&quot;https://www.youtube.com/c/NHKWORLDJAPAN&quot;&gt;YouTube channel&lt;/a&gt; does not have the full set of these videos, so be sure to view them directly on their website.&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCajrdoGzHzDogrNrLYYmGsg&quot;&gt;やっすんのエンジニア&lt;ruby&gt;大学&lt;rt&gt;だいがく&lt;/rt&gt;&lt;/ruby&gt;&lt;/a&gt;: If, like me, you are a computer programmer, or you are involved in technological fields involving software, you will definitely appreciate Yasun’s channel as he goes on deep dives with a variety of different technologies. Your Japanese technical vocabulary will doubtlessly improve as a result of watching his videos.&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCL6JY2DXJNDOIqCP1CRADng&quot;&gt;エガちゃんねる EGA-CHANNEL&lt;/a&gt;: The official channel of &lt;a href=&quot;https://en.wikipedia.org/wiki/Egashira_2:50&quot;&gt;Egashira 2:50&lt;/a&gt;, probably the nicest completely bonkers comedian in Japan.&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCbb9FsCRA83-6vdgXn2KSyA&quot;&gt;マキシマム ザ ホルモン&lt;ruby&gt;公式&lt;rt&gt;こうしき&lt;/rt&gt;&lt;/ruby&gt;&lt;/a&gt;: The official channel of band &lt;a href=&quot;https://en.wikipedia.org/wiki/Maximum_the_Hormone&quot;&gt;Maximum the Hormone&lt;/a&gt;. Their music is awesome, but in particular, their ガチンコ ザ ホルモン series where they held auditions to create a second “outlet” of their band (２&lt;ruby&gt;号店&lt;rt&gt;ごうてん&lt;/rt&gt;&lt;/ruby&gt;) is novel and excellent viewing.&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCvtK7490fPF0TacbsvQ2H3g&quot;&gt;&lt;ruby&gt;禁断&lt;rt&gt;きんだん&lt;/rt&gt;&lt;/ruby&gt;ボーイズ&lt;/a&gt;: The channel for Kindan (Prohibited) Boys. The interviews this team of 4 comedians do in places like &lt;a href=&quot;https://en.wikipedia.org/wiki/Shibuya&quot;&gt;Shibuya&lt;/a&gt; provide a great insight into the minds of young Japanese. The “Cinderella” dating show they did for one of their members, “Messiah” (めさいあシンデレラ), is one of the channel highlights.&lt;/li&gt; &lt;li&gt;Popular YouTubers &lt;a href=&quot;https://www.youtube.com/channel/UCaminwG9MTO4sLYeC3s6udA&quot;&gt;ヒカル（Hikaru）&lt;/a&gt; and &lt;a href=&quot;https://www.youtube.com/channel/UCgQgMOBZOJ1ZDtCZ4hwP1uQ&quot;&gt;ラファエル Raphael&lt;/a&gt; have some interesting content in their channels, and I would recommend sorting by “Most popular” to see if what they offer is of interest to you.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;If you have any recommendations for Japanese language study guides, or Japanese language media that you like reading/watching, please let me know in a comment!&lt;/p&gt;</content><author><name>Paul Fioravanti</name><email>paul@paulfioravanti.com</email><uri>https://www.paulfioravanti.com</uri></author><category term="japanese"/><category term="jlpt"/><category term="anki"/><category term="html"/><category term="css"/><category term="javascript"/><category term="日本語"/><summary type="html">Level N1 of The Japanese Language Proficiency Test is a tough nut to crack, but these study methods got me over the line.</summary></entry></feed>