// Code colors
$code-comment-color: #998 !default;
$code-comment-preproc-color: #999 !default;
$code-background-highlight: #fff !default;
$code-black: #000 !default;
$code-deleted-background-color: #fdd !default;
$code-deleted-specific-background-color: #faa !default;
$code-error-color: #a61717 !default;
$code-error-background-color: #e3d2d2 !default;
$code-generic-error: #a00 !default;
$code-generic-inserted-background: #dfd !default;
$code-generic-inserted-specific-background: #afa !default;
$code-generic-output: #888 !default;
$code-generic-prompt: #555 !default;
$code-generic-subheading: #aaa !default;
$code-keyword-type: #458 !default;
$code-literal: #099 !default;
$code-literal-regex: #009926 !default;
$code-literal-string: #d14 !default;
$code-literal-symbol: #990073 !default;
$code-name: #008080 !default;
$code-name-builtin: #0086b3 !default;
$code-name-entity: #800080 !default;
$code-name-exception: #900 !default;
$code-name-tag: #000080 !default;
$code-whitespace: #bbb !default;

// Syntax highlighting styles
.highlight {
  @extend %vertical-rhythm;

  background: $code-background-highlight;

  .highlighter-rouge & {
    background: $code-background-color;
  }

  // Comment
  .c {
    color: $code-comment-color;
    font-style: italic;
  }

  // Error
  .err {
    background-color: $code-error-background-color;
    color: $code-error-color;
  }

  // Keyword
  .k {
    font-weight: bold;
  }

  // Operator
  .o {
    font-weight: bold;
  }

  // Comment.Multiline
  .cm {
    color: $code-comment-color;
    font-style: italic;
  }

  // Comment.Preproc
  .cp {
    color: $code-comment-preproc-color;
    font-weight: bold;
  }

  // Comment.Single
  .c1 {
    color: $code-comment-color;
    font-style: italic;
  }

  // Comment.Special
  .cs {
    color: $code-comment-preproc-color;
    font-style: italic;
    font-weight: bold;
  }

  // Generic.Deleted
  .gd {
    background-color: $code-deleted-background-color;
    color: $code-black;

    // Generic.Deleted.Specific
    .x {
      background-color: $code-deleted-specific-background-color;
    }
  }

  // Generic.Emph
  .ge {
    font-style: italic;
  }

  // Generic.Error
  .gr {
    color: $code-generic-error;
  }

  // Generic.Heading
  .gh {
    color: $code-comment-preproc-color;
  }

  // Generic.Inserted
  .gi {
    background-color: $code-generic-inserted-background;
    color: $code-black;

    // Generic.Inserted.Specific
    .x {
      background-color: $code-generic-inserted-specific-background;
    }
  }

  // Generic.Output
  .go {
    color: $code-generic-output;
  }

  // Generic.Prompt
  .gp {
    color: $code-generic-prompt;
  }

  // Generic.Strong
  .gs {
    font-weight: bold;
  }

  // Generic.Subheading
  .gu {
    color: $code-generic-subheading;
  }

  // Generic.Traceback
  .gt {
    color: $code-generic-error;
  }

  // Keyword.Constant
  .kc {
    font-weight: bold;
  }

  // Keyword.Declaration
  .kd {
    font-weight: bold;
  }

  // Keyword.Pseudo
  .kp {
    font-weight: bold;
  }

  // Keyword.Reserved
  .kr {
    font-weight: bold;
  }

  // Keyword.Type
  .kt {
    color: $code-keyword-type;
    font-weight: bold;
  }

  // Literal.String
  .s {
    color: $code-literal-string;
  }

  // Name.Attribute
  // Name.Constant
  // Name.Variable
  // Name.Variable.Class
  // Name.Variable.Global
  // Name.Variable.Instance
  // sass-lint:disable single-line-per-selector
  .na, .no, .nv, .vc, .vg, .vi {
    color: $code-name;
  }
  // sass-lint:enable single-line-per-selector

  // Name.Builtin
  .nb {
    color: $code-name-builtin;
  }

  // Name.Class
  .nc {
    color: $code-keyword-type;
    font-weight: bold;
  }

  // Name.Entity
  .ni {
    color: $code-name-entity;
  }

  // Name.Exception
  // Name.Function
  .ne,
  .nf {
    color: $code-name-exception;
    font-weight: bold;
  }

  // Name.Namespace
  .nn {
    color: $code-generic-prompt;
  }

  // Name.Tag
  .nt {
    color: $code-name-tag;
  }

  // Operator.Word
  .ow {
    font-weight: bold;
  }

  // Text.Whitespace
  .w {
    color: $code-whitespace;
  }

  // Literal.Number
  // Literal.Number.Float
  // Literal.Number.Hex
  // Literal.Number.Integer
  // Literal.Number.Oct
  // Literal.Number.Integer.Long
  // sass-lint:disable single-line-per-selector
  .il, .m, .mf, .mh, .mi, .mo {
    color: $code-literal;
  }
  // sass-lint:enable single-line-per-selector

  // Literal.String.Backtick
  // Literal.String.Char
  // Literal.String.Doc
  // Literal.String.Double
  // Literal.String.Escape
  // Literal.String.Heredoc
  // Literal.String.Interpol
  // Literal.String.Other
  // Literal.String.Single
  // sass-lint:disable single-line-per-selector
  .sb, .sc, .sd, .s2, .se, .sh, .si, .sx, .s1 {
    color: $code-literal-string;
  }
  // sass-lint:enable single-line-per-selector

  // Literal.String.Regex
  .sr {
    color: $code-literal-regex;
  }

  // Literal.String.Symbol
  .ss {
    color: $code-literal-symbol;
  }

  // Name.Builtin.Pseudo
  .bp {
    color: $code-comment-preproc-color;
  }
}
